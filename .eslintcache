[{"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/index.js":"1","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/reportWebVitals.js":"2","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/App.js":"3","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Login.js":"4","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/SignUp.js":"5","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Port.js":"6","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Market.js":"7","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/OrderBook.js":"8","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Auto.js":"9","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Dashboard.js":"10","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Report.js":"11","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Admin.js":"12","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/MasterCard.js":"13","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Bitcoin.js":"14","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/GeneralApp.js":"15","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/LoginApp.js":"16","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/General.js":"17","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Manager.js":"18","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Trading.js":"19","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Bank.js":"20","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Search.js":"21","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Payment.js":"22","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Subscription.js":"23","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/New.js":"24","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Identity.js":"25","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Intro.js":"26","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/LoginSignup.js":"27","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/ForgotPassword.js":"28","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Additional.js":"29","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/AutoTrading.js":"30","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Templates.js":"31","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Foot.js":"32","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/RunningAutoTrade.js":"33","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/MailS.js":"34","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Nav.js":"35","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Sidebar.js":"36","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Notification.js":"37","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/AdminSidebar.js":"38","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/EditAutotradeModal.js":"39","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Header/Header.js":"40","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Footer/Footer.js":"41","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/CountryList/CountryList.js":"42","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/ImageCarousel/ImageCarousel.js":"43","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/EditCopyTrade.js":"44","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/PaymentDetailsPopOver.js":"45","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/VerifyDetailsPopOver.js":"46","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/WithdrawDetailsInfoPopOver.js":"47","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Router.js":"48","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/VerifyModal.js":"49","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/NavBar/NavBar.js":"50","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Orders.js":"51","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Account.js":"52","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/SubSidebar.js":"53","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/UserProfile.js":"54","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Stock.js":"55"},{"size":592,"mtime":1619640605026,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":1619640605030,"results":"58","hashOfConfig":"57"},{"size":17141,"mtime":1625825778420,"results":"59","hashOfConfig":"57"},{"size":4211,"mtime":1623768516581,"results":"60","hashOfConfig":"57"},{"size":10542,"mtime":1625407907011,"results":"61","hashOfConfig":"57"},{"size":33790,"mtime":1625759329924,"results":"62","hashOfConfig":"57"},{"size":26389,"mtime":1625759329924,"results":"63","hashOfConfig":"57"},{"size":27967,"mtime":1625759329924,"results":"64","hashOfConfig":"57"},{"size":27537,"mtime":1625759329924,"results":"65","hashOfConfig":"57"},{"size":149001,"mtime":1625759329924,"results":"66","hashOfConfig":"57"},{"size":10064,"mtime":1625759329924,"results":"67","hashOfConfig":"57"},{"size":7219,"mtime":1625759329924,"results":"68","hashOfConfig":"57"},{"size":6804,"mtime":1625759329924,"results":"69","hashOfConfig":"57"},{"size":16867,"mtime":1625759329924,"results":"70","hashOfConfig":"57"},{"size":16373,"mtime":1625759329924,"results":"71","hashOfConfig":"57"},{"size":8913,"mtime":1625759329924,"results":"72","hashOfConfig":"57"},{"size":46157,"mtime":1625759329924,"results":"73","hashOfConfig":"57"},{"size":151440,"mtime":1625759329924,"results":"74","hashOfConfig":"57"},{"size":32293,"mtime":1625759329924,"results":"75","hashOfConfig":"57"},{"size":6815,"mtime":1625759329924,"results":"76","hashOfConfig":"57"},{"size":13573,"mtime":1625759329924,"results":"77","hashOfConfig":"57"},{"size":14556,"mtime":1625759329924,"results":"78","hashOfConfig":"57"},{"size":11556,"mtime":1625759329924,"results":"79","hashOfConfig":"57"},{"size":9485,"mtime":1625759329924,"results":"80","hashOfConfig":"57"},{"size":26950,"mtime":1625759329924,"results":"81","hashOfConfig":"57"},{"size":12496,"mtime":1625759329924,"results":"82","hashOfConfig":"57"},{"size":17214,"mtime":1625759329924,"results":"83","hashOfConfig":"57"},{"size":2721,"mtime":1619640605018,"results":"84","hashOfConfig":"57"},{"size":5794,"mtime":1625759329924,"results":"85","hashOfConfig":"57"},{"size":11056,"mtime":1625759329924,"results":"86","hashOfConfig":"57"},{"size":13610,"mtime":1625759329924,"results":"87","hashOfConfig":"57"},{"size":6168,"mtime":1625759329924,"results":"88","hashOfConfig":"57"},{"size":958,"mtime":1625759329924,"results":"89","hashOfConfig":"57"},{"size":19520,"mtime":1625759329924,"results":"90","hashOfConfig":"57"},{"size":111671,"mtime":1625759329924,"results":"91","hashOfConfig":"57"},{"size":52207,"mtime":1625759329924,"results":"92","hashOfConfig":"57"},{"size":3441,"mtime":1619640605002,"results":"93","hashOfConfig":"57"},{"size":5162,"mtime":1619640604994,"results":"94","hashOfConfig":"57"},{"size":3578,"mtime":1625759329924,"results":"95","hashOfConfig":"57"},{"size":1334,"mtime":1625759329924,"results":"96","hashOfConfig":"57"},{"size":2712,"mtime":1625759329924,"results":"97","hashOfConfig":"57"},{"size":4181,"mtime":1622469330719,"results":"98","hashOfConfig":"57"},{"size":1302,"mtime":1619640604998,"results":"99","hashOfConfig":"57"},{"size":8923,"mtime":1625759329924,"results":"100","hashOfConfig":"57"},{"size":4778,"mtime":1619640605002,"results":"101","hashOfConfig":"57"},{"size":3086,"mtime":1619640605006,"results":"102","hashOfConfig":"57"},{"size":3176,"mtime":1619640605006,"results":"103","hashOfConfig":"57"},{"size":214,"mtime":1619640605002,"results":"104","hashOfConfig":"57"},{"size":2775,"mtime":1619640605006,"results":"105","hashOfConfig":"57"},{"size":122015,"mtime":1625759329924,"results":"106","hashOfConfig":"57"},{"size":21898,"mtime":1621001562945,"results":"107","hashOfConfig":"57"},{"size":6974,"mtime":1625406560223,"results":"108","hashOfConfig":"57"},{"size":3205,"mtime":1622469330719,"results":"109","hashOfConfig":"57"},{"size":32889,"mtime":1619640605006,"results":"110","hashOfConfig":"57"},{"size":19089,"mtime":1619640605002,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"qizir4",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"114"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"114"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"114"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"114"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"114"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"114"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"114"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"114"},"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/index.js",[],["271","272"],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/reportWebVitals.js",[],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/App.js",["273","274","275"],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Login.js",["276","277","278","279"],"import React, { useState } from \"react\";\nimport Favicon from \"react-favicon\";\nimport { Eye, EyeSlash } from \"react-bootstrap-icons\";\n\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport Header from \"../Component/Header/Header\";\nimport Footer from \"../Component/Footer/Footer\";\nimport \"../AccountsAsset/form.css\";\n\nexport default function Login(props) {\n  let fav = document.querySelector(\"#favicon\");\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  let web = props.web.web;\n  let web2 = props.web;\n\n\n  let savedSite = JSON.parse(localStorage.getItem(\"site\"))\n    ? JSON.parse(localStorage.getItem(\"site\"))\n    : [];\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  return (\n    <div>\n      <Favicon url={web ? web.siteFav : \"\"} />\n      <Favicon url={web2 ? web2.siteFav : \"\"} />\n\n      <div>\n        <Header \n          web={web} \n          savedSite={savedSite} \n          url=\"/signup\"\n          title=\"Register\"\n        />\n        <div style={{ background: \"#f2f2f2\"}}>\n          <section className=\"auth-wrapper\">\n            <h1>Login</h1>\n            <div className=\"auth-form\">\n              <div className=\"form-wrapper\">\n                <Form className=\"mt-4\" onSubmit={props.handleSubmitL}>\n                  {props.error ? (\n                    props.error.length > 0 ? (\n                      <p className=\"error\">{props.error}</p>\n                    ) : (\n                      props.error\n                    )\n                  ) : (\n                    \"\"\n                  )}\n                  <Form.Group\n                    controlId=\"formBasicEmail\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={props.handle1L}\n                      placeholder=\"Email\"\n                    />\n                  </Form.Group>\n                  <Form.Group\n                    controlId=\"formBasicPassword\"\n                    className=\"floating mb-3\"\n                  >\n                    <Form.Control\n                      type={passwordShown ? \"text\" : \"password\"}\n                      name=\"password\"\n                      onChange={props.handle2L}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Password\"\n                    />\n                    {passwordShown ? (\n                      <EyeSlash\n                        className=\"eye\"\n                        onClick={togglePasswordVisiblity}\n                      />\n                    ) : (\n                      <Eye className=\"eye\" onClick={togglePasswordVisiblity} />\n                    )}\n                  </Form.Group>\n                  <div className=\"pb-3\">\n                    <Button\n                      variant=\"primary\"\n                      style={{ background: web ? web.yourMainColor : \"\" }}\n                      type=\"submit\"\n                      className=\"w-100\"\n                    >\n                      LOGIN\n                    </Button>\n                  </div>\n                </Form>\n                <div>\n                  <p className=\"forget text-center mb-3\"> \n                    <Link to=\"/forgot_password\" className=\"backtologin\">\n                      Forgot Password?\n                    </Link>\n                  </p>\n                </div>\n                <div className=\"signup text-center\">\n                  <p className=\"forget\">\n                    Don't have account? \n                    <Link to=\"/signup\">\n                      &nbsp; Register\n                    </Link>\n                  </p>\n                </div>\n              </div>\n              <div className=\"risk-taking text-center\">\n                <p className=\"mb-0\">Risk Taking</p>\n                <div className=\"text-left\">\n                  <span>All trading involves risk. Only risk capital you're prepared to lose.</span>\n                </div>\n              </div>\n            </div>\n          </section>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/SignUp.js",["280","281","282"],"import React, { useState } from \"react\";\nimport Favicon from \"react-favicon\";\nimport { Eye, EyeSlash } from \"react-bootstrap-icons\";\n\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Header from \"../Component/Header/Header\";\nimport Footer from \"../Component/Footer/Footer\";\n\nimport { countryList } from \"../Component/CountryList/CountryList\";\nimport \"../AccountsAsset/form.css\";\n\nimport mastercard from \"./../../src/AccountsAsset/images/sponsors/mastercard.svg\";\nimport visa from \"./../../src/AccountsAsset/images/sponsors/visa.svg\";\nimport wiretransfer from \"./../../src/AccountsAsset/images/sponsors/wire-transfer.png\";\nimport skrill from \"./../../src/AccountsAsset/images/sponsors/skrill.svg\";\nimport perfect_money from \"./../../src/AccountsAsset/images/sponsors/perfect_money.svg\";\nimport moneygram from \"./../../src/AccountsAsset/images/sponsors/money-gram.png\";\nimport americanexpress from \"./../../src/AccountsAsset/images/sponsors/american-express.jpeg\";\nimport bitcoin from \"./../../src/AccountsAsset/images/sponsors/bitcoin.webp\";\nimport netteller from \"./../../src/AccountsAsset/images/sponsors/netteller.png\";\nimport webmoney from \"./../../src/AccountsAsset/images/sponsors/web_money.png\";\n\nexport default function SignUp(props) {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [passwordShown1, setPasswordShown1] = useState(false);\n\n  let web = props.web.web;\n  let web2 = props.web;\n\n  let savedSite = JSON.parse(localStorage.getItem(\"site\"))\n    ? JSON.parse(localStorage.getItem(\"site\"))\n    : [];\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const togglePasswordVisiblity1 = () => {\n    setPasswordShown1(passwordShown1 ? false : true);\n  };\n\n  return (\n    <div>\n      <Favicon url={web ? web.siteFav : \"\"} />\n      <Favicon url={web2 ? web2.siteFav : \"\"} />\n\n      <div>\n        <Header \n          web={web} \n          savedSite={savedSite} \n          url=\"/\"\n          title=\"Login\"\n        />\n        <div style={{ background: \"#f2f2f2\"}}>\n          <section className=\"auth-wrapper\">\n            <h1>Sign Up</h1>\n            <div className=\"auth-form\">\n              <div className=\"form-wrapper\">\n                <Form className=\"mt-4 pt-2\" onSubmit={props.handleSubmitR}>\n                  {props.error ? (\n                    props.error.length > 0 ? (\n                      <p className=\"error1\">{props.error}</p>\n                    ) : (\n                      props.error\n                    )\n                  ) : (\n                    \"\"\n                  )}\n                  <Form.Group\n                    controlId=\"formBasicText\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type=\"text\"\n                      name=\"name\"\n                      onChange={props.handle4R}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Your First Name\"\n                    />\n                  </Form.Group>\n                  <Form.Group\n                    controlId=\"formBasicText\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type=\"text\"\n                      name=\"lastname\"\n                      onChange={props.handle5R}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Your Last Name\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    controlId=\"formBasicEmail\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={props.handle1R}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Your e-mail address\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    controlId=\"exampleForm.ControlSelect1\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      as=\"select\"\n                      name=\"country\"\n                      onChange={props.handle7R}\n                    >\n                      <option>Your Country</option>\n                      {countryList.map((country) => (\n                        <option>{country}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                  <p \n                    className=\"text-left\"\n                    style={{\n                      fontSize: \"12px\"\n                    }}\n                  >\n                    Please make sure this is your country of permanent residence\n                  </p>\n                  <Form.Group\n                    controlId=\"formBasicText\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type=\"number\"\n                      name=\"phonenumber\"\n                      onChange={props.handle6R}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Your Phone Number\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group\n                    controlId=\"formBasicPassword\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type={passwordShown ? \"text\" : \"password\"}\n                      name=\"password\"\n                      onChange={props.handle2R}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Your password\"\n                    />\n                    {passwordShown ? (\n                      <EyeSlash\n                        className=\"eye\"\n                        onClick={togglePasswordVisiblity}\n                      />\n                    ) : (\n                      <Eye\n                        className=\"eye\"\n                        onClick={togglePasswordVisiblity}\n                      />\n                    )}\n                  </Form.Group>\n                  <Form.Group\n                    controlId=\"formBasicPasswordTwo\"\n                    className=\"floating mb-0\"\n                  >\n                    <Form.Control\n                      type={passwordShown1 ? \"text\" : \"password\"}\n                      name=\"repeatPassword\"\n                      onChange={props.handle3R}\n                      style={{ borderBottom: \"1px solid #d8dbe4\" }}\n                      placeholder=\"Confirm password\"\n                    />\n                    {passwordShown1 ? (\n                      <EyeSlash\n                        className=\"eye\"\n                        onClick={togglePasswordVisiblity1}\n                      />\n                    ) : (\n                      <Eye\n                        className=\"eye\"\n                        onClick={togglePasswordVisiblity1}\n                      />\n                    )}\n                  </Form.Group>\n\n                  <Form.Group\n                    controlId=\"formBasicCheckbox\"\n                    className=\"d-flex mt-2 mb-2\"\n                  >\n                    <Form.Check type=\"checkbox\" name=\"agree\" value={true} />\n                    <Form.Label className=\"agree pl-2\">\n                      I confirm that I am 18 years old or older and accept \n                      <a href=\"\"> Terms & Conditions</a>, \n                      <a href=\"\"> Privacy Policy</a> and \n                      <a href=\"\"> Order Execution Policy</a>\n                    </Form.Label>\n                  </Form.Group>\n                  <div className=\"pb-3\">\n                    <Button\n                      variant=\"primary\"\n                      style={{ background: web ? web.yourMainColor : \"\" }}\n                      type=\"submit\"\n                      className=\"w-100\"\n                    >\n                      LET'S GO !\n                    </Button>\n                  </div>\n                </Form>\n                <div className=\"signup text-center\">\n                <p className=\"forget\">\n                  Already have an account? \n                  <Link to=\"/\">\n                    &nbsp; Login\n                  </Link>\n                </p>\n              </div>\n              </div>\n              <div className=\"risk-taking text-center\">\n                <p className=\"mb-0\">Risk Taking</p>\n                <div className=\"text-left\">\n                  <span>All trading involves risk. Only risk capital you're prepared to lose.</span>\n                </div>\n              </div>\n            </div>\n          </section>\n          <div class=\"mt-5\">\n            <hr />\n            <div class=\"sponsor d-flex align-items-center justify-content-between mx-5 px-5 mb-4 pt-4\">\n              <div className=\"d-flex align-items-center justify-content-between w-100\">\n                <div>\n                  <img src={mastercard} className=\"img-fluid\" alt=\"mastercard\" />\n                </div>\n                <div>\n                  <img src={visa} className=\"img-fluid\" alt=\"visa card\" />\n                </div>\n                <div>\n                  <img src={moneygram} className=\"img-fluid\" alt=\"Money Gram\" />\n                </div>\n                <div>\n                  <img src={skrill} className=\"img-fluid\" alt=\"Skrill\" />\n                </div>\n                <div>\n                  <img src={americanexpress} className=\"img-fluid\" alt=\"American express\" />\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between w-100\">\n                <div>\n                  <img src={perfect_money} className=\"img-fluid\" alt=\"Perfect Money\" />\n                </div>\n                <div>\n                  <img src={wiretransfer} className=\"img-fluid\" alt=\"Wire Transfer\" />\n                </div>\n                <div>\n                  <img src={bitcoin} className=\"img-fluid\" alt=\"Bitcoing\" />\n                </div>\n                <div>\n                  <img src={netteller} className=\"img-fluid\" alt=\"Netteller\" />\n                </div>\n                <div>\n                  <img src={webmoney} className=\"img-fluid\" alt=\"Web money\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Port.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Port extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fx: [\"EURUSD\", \"USDGBP\", \"USDJPY\"],\n      fxPrice: [],\n      iex: [],\n      crypto: [],\n      cum: [],\n      hideIbox: true,\n      currentItem: [],\n      addCurrentItemC: [],\n      addCurrentItemFx: [],\n      addCurrentItemCum: [],\n      addCurrentItemIex: [],\n      fillArr: [],\n      nullF: \"\",\n      setView: [],\n      setViewM: [],\n      orderIsh: [],\n      unitP: \"\",\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: true,\n      manager: false,\n      levIsh: false,\n      admin: false,\n      VView: false,\n      selectedFiles: [],\n      fileUp: {},\n      forexShow: false,\n      verifyS: this.props.user.user ? this.props.user.user.user.verify : \"\",\n      activeS: \"\",\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      totalUp: \"\",\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n\n    // GET Request.\n    fetch(\n      `https://cloud.iexapis.com/stable/fx/latest?symbols=${this.state.fx}&token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ fxPrice: json });\n      }); //print data to console\n\n    //crytp\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/BTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n        this.setState({ bitP: json });\n\n        this.setState({\n          orderIsh: json.price,\n\n          setView: json,\n          setViewM: json.price,\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/ETHUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/LTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    //stock\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/AAPL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"AAPL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/TSLA/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"TSLA\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/GOOGL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"GOOGL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(`https://cloud.iexapis.com/stable/stock/FB/price?token=${this.token}`)\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"FB\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/MSFT/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"MSFT\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    //commdity\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Propane\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DHHNGSP?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Diesel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Jet Fuel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DJFUELUSGULF?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Gas\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/GASDESW?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Heating Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DPROPANEMBTX?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Crude Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n  }\n\n  handleC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      currentItem: [\n        { symbol: item.symbol, price: item.price, rate: item.rate },\n      ],\n    });\n  };\n\n  handleAC = (item) => () => {\n    console.log(item, \"isnd\");\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n      addCurrentItemC: [\n        ...this.state.addCurrentItemC,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    (async () => {\n      console.log(\"rrrrrrrrrrr\");\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n    })();\n  };\n\n  handleRC = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemC;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemC: arr,\n    });\n  };\n\n  handleAFx = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemFx: [\n        ...this.state.addCurrentItemFx,\n        ...[{ price: item.rate, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRFx = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemFx;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemFx: arr,\n    });\n  };\n\n  handleAIex = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemIex: [\n        ...this.state.addCurrentItemIex,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRIex = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemIex;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemIex: arr,\n    });\n  };\n\n  handleACum = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemCum: [\n        ...this.state.addCurrentItemCum,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleViewUpdate = (item) => () => {\n    this.setState({\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleUpdatePrice = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceBoth = (e) => {\n    let num = e.target.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceM = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleRCum = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemCum;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemCum: arr,\n    });\n  };\n\n  handleFilter = (e) => {\n    let arr1 = [\n      ...this.state.cum,\n      ...this.state.fxPrice,\n      ...this.state.crypto,\n      ...this.state.iex,\n    ];\n\n    let t = e.target.value ? e.target.value : \"\";\n\n    let res = arr1.filter((i) =>\n      i.symbol.toLowerCase().includes(t.toLowerCase())\n    );\n\n    if (res) {\n      this.setState({\n        fillArr: res,\n        hideOld: true,\n      });\n    } else {\n      this.setState({\n        nullF: \"not found\",\n        hideOld: true,\n      });\n    }\n  };\n\n  handleSubmitBuyL = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ loss: e.target.value } },\n    });\n  };\n\n  handleSubmitBuyP = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ profit: e.target.value } },\n    });\n  };\n\n  handleSubmitBuy = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              new Intl.NumberFormat('en-US').format(this.state.user.user.user.wallet) +\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n                parseInt(this.state.orderIsh),\n          });\n        } else {\n        }\n      });\n  };\n\n  handleSubmitSell = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n              10 *\n              parseInt(this.state.orderIsh),\n          });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  \n   \n\n  handSwitch1 = () => {\n    this.setState({\n      disA1: !this.state.disA1,\n    });\n  };\n\n  handSwitch2 = () => {\n    console.log(\"readeded\");\n\n    this.setState({\n      disA2: !this.state.disA2,\n    });\n  };\n\n  handleMarket = () => {\n    this.setState({\n      market: true,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleBoard = () => {\n    this.setState({\n      market: false,\n      board: true,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handlePort = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: true,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleManager = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: true,\n      admin: false,\n    });\n  };\n  handleAdmin = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: true,\n    });\n  };\n\n  setVView = () => {\n    this.setState({\n      VView: !this.state.VView,\n    });\n  };\n\n  handleImageChange = (e) => {\n    // console.log(e.target.files[])\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({\n          fileUp: {\n            ...this.state.fileUp,\n            ...{ img: reader.result },\n          },\n        });\n      };\n    }\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n\n    console.log(\"dfffff\", this.state.fileUp);\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/registration/file/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.fileUp),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          this.setState({ verifyS: true, VView: false });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  openForex = () => {\n    this.setState({ forexShow: true });\n    console.log(this.state.forexShow);\n  };\n\n  closeForex = () => {\n    this.setState({ forexShow: false });\n    console.log(this.state.forexShow);\n  };\n\n  setAll = () => {\n    this.setState({\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllC = () => {\n    this.setState({\n      all: false,\n      allC: true,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllF = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: true,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllCum = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: true,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllS = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: true,\n      hideIbox: true,\n    });\n  };\n\n  setlevIsh = () => {\n    this.setState({\n      levIsh: !this.state.levIsh,\n    });\n  };\n\n  closeSetlevIsh = () => {\n    this.setState({\n      levIsh: false,\n    });\n  };\n    \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.port ? (\n                <div className=\"full-width\">\n                  <div className=\"dash-row\" style={{ marginTop: 20 }}>\n                    <div className=\"holding-repartition\">\n                      <h3 className=\"dash-font-weight-normal\">\n                        Holding repartition\n                      </h3>\n                    </div>\n                    <div className=\"stats\" />\n                    <div className=\"timeline\" style={{ fontSize: \"50%\" }}>\n                      <div className=\"split-row-3\">\n                        <div className=\"card-and-chart\">\n                          <div className=\"dash-row card-grouped\">\n                            <div className=\"card\">\n                              <h2>8.14 $</h2>\n                              <p className=\"text-fade font-size-12 text-uppercase\">\n                                Portfolio Investment\n                              </p>\n                            </div>\n                            <div className=\"card-chart\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"split-row-3\">\n                        <div className=\"card-and-chart\">\n                          <div className=\"dash-row card-grouped\">\n                            <div className=\"card\">\n                              <h2>7,518.77 $</h2>\n                              <p className=\"text-fade font-size-12 text-uppercase\">\n                                Portfolio Value\n                              </p>\n                            </div>\n                            <div className=\"card-chart\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"split-row-3\">\n                        <div className=\"card-and-chart\">\n                          <div className=\"dash-row\">\n                            <div\n                              className=\"split-25\"\n                              style={{ borderRight: \"1px solid #363f54\" }}\n                            >\n                              <div className=\"performance\">\n                                <center>\n                                  <h4 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h4>\n                                  <h1 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h1>\n                                  <p className=\"text-fade text-uppercase font-size-11\">\n                                    Performance month\n                                  </p>\n                                </center>\n                              </div>\n                            </div>\n                            <div\n                              className=\"split-25\"\n                              style={{ borderRight: \"1px solid #363f54\" }}\n                            >\n                              <div className=\"performance\">\n                                <center>\n                                  <h4 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h4>\n                                  <h1 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h1>\n                                  <p className=\"text-fade text-uppercase font-size-11\">\n                                    Performance month\n                                  </p>\n                                </center>\n                              </div>\n                            </div>\n                            <div\n                              className=\"split-25\"\n                              style={{ borderRight: \"1px solid #363f54\" }}\n                            >\n                              <div className=\"performance\">\n                                <center>\n                                  <h4 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h4>\n                                  <h1 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h1>\n                                  <p className=\"text-fade text-uppercase font-size-11\">\n                                    Performance month\n                                  </p>\n                                </center>\n                              </div>\n                            </div>\n                            <div className=\"split-25\">\n                              <div className=\"performance\">\n                                <center>\n                                  <h4 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h4>\n                                  <h1 className=\"rise dash-font-weight-normal\">\n                                    0.00%\n                                  </h1>\n                                  <p className=\"text-fade text-uppercase font-size-11\">\n                                    Performance month\n                                  </p>\n                                </center>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"portfolio-sec-2 dash-row\">\n                    <div className=\"portfolio-card\">\n                      <div className=\"dash-row\">\n                        <div className=\"image\">\n                          <img src=\"images/ABT.svg\" />\n                        </div>\n                        <div className=\"instrument\">\n                          <span>FOREXCFD:AUD/USD</span>\n                          <span className=\"font-size-10 rise\">\n                            &nbsp; +-92,537.96 % ( 7,482.05 $ )\n                          </span>\n                          <div\n                            className=\"dash-row dash-row-centralized font-size-12 text-fade\"\n                            style={{ marginTop: 10 }}\n                          >\n                            <div className=\"split-50 lefted\">\n                              <span style={{ color: \"#fff\" }}>\n                                9,800.00 AUD\n                              </span>\n                              <span>7,490.14 $</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>Total change</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        className=\"dash-row font-size-11 text-fade portfolio-card-row\"\n                        style={{ marginTop: 15 }}\n                      >\n                        <div className=\"split-50 lefted\">\n                          <span>INVESTMENT</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">\n                            8.08539 USD (8.09 $)\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>PRICE</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00 USD</span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>24 CHANGE</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00 % (0.00)</span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>24 VOLUME</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"portfolio-card\">\n                      <div className=\"dash-row\">\n                        <div className=\"image\">\n                          <img src=\"images/ABT.svg\" />\n                        </div>\n                        <div className=\"instrument\">\n                          <span>FOREXCFD:AUD/USD</span>\n                          <span className=\"font-size-10 rise\">\n                            &nbsp; +-92,537.96 % ( 7,482.05 $ )\n                          </span>\n                          <div\n                            className=\"dash-row dash-row-centralized font-size-12 text-fade\"\n                            style={{ marginTop: 10 }}\n                          >\n                            <div className=\"split-50 lefted\">\n                              <span style={{ color: \"#fff\" }}>\n                                9,800.00 AUD\n                              </span>\n                              <span>7,490.14 $</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>Total change</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        className=\"dash-row font-size-11 text-fade portfolio-card-row\"\n                        style={{ marginTop: 15 }}\n                      >\n                        <div className=\"split-50 lefted\">\n                          <span>INVESTMENT</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">\n                            8.08539 USD (8.09 $)\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>PRICE</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00 USD</span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>24 CHANGE</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00 % (0.00)</span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>24 VOLUME</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"portfolio-card\">\n                      <div className=\"dash-row\">\n                        <div className=\"image\">\n                          <img src=\"images/ABT.svg\" />\n                        </div>\n                        <div className=\"instrument\">\n                          <span>FOREXCFD:AUD/USD</span>\n                          <span className=\"font-size-10 rise\">\n                            &nbsp; +-92,537.96 % ( 7,482.05 $ )\n                          </span>\n                          <div\n                            className=\"dash-row dash-row-centralized font-size-12 text-fade\"\n                            style={{ marginTop: 10 }}\n                          >\n                            <div className=\"split-50 lefted\">\n                              <span style={{ color: \"#fff\" }}>\n                                9,800.00 AUD\n                              </span>\n                              <span>7,490.14 $</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>Total change</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        className=\"dash-row font-size-11 text-fade portfolio-card-row\"\n                        style={{ marginTop: 15 }}\n                      >\n                        <div className=\"split-50 lefted\">\n                          <span>INVESTMENT</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">\n                            8.08539 USD (8.09 $)\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>PRICE</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00 USD</span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>24 CHANGE</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00 % (0.00)</span>\n                        </div>\n                      </div>\n                      <div className=\"dash-row font-size-11 text-fade portfolio-card-row\">\n                        <div className=\"split-50 lefted\">\n                          <span>24 VOLUME</span>\n                        </div>\n                        <div className=\"split-50 righted\">\n                          <span className=\"text-white\">0.00</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n\n        \n        </div>\n      );\n    }\n  }\n}\n\nexport default Port;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Market.js",["297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Market extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fx: [\"EURUSD\", \"USDGBP\", \"USDJPY\"],\n      fxPrice: [],\n      iex: [],\n      crypto: [],\n      cum: [],\n      hideIbox: true,\n      currentItem: [],\n      addCurrentItemC: [],\n      addCurrentItemFx: [],\n      addCurrentItemCum: [],\n      addCurrentItemIex: [],\n      fillArr: [],\n      nullF: \"\",\n      setView: [],\n      setViewM: [],\n      orderIsh: [],\n      unitP: \"\",\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: true,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: false,\n      VView: false,\n      selectedFiles: [],\n      fileUp: {},\n      forexShow: false,\n      verifyS: this.props.user.user ? this.props.user.user.user.verify : \"\",\n      activeS: \"\",\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      totalUp: \"\",\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n\n    // GET Request.\n    fetch(\n      `https://cloud.iexapis.com/stable/fx/latest?symbols=${this.state.fx}&token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ fxPrice: json });\n      }); //print data to console\n\n    //crytp\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/BTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n        this.setState({ bitP: json });\n\n        this.setState({\n          orderIsh: json.price,\n\n          setView: json,\n          setViewM: json.price,\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/ETHUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/LTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    //stock\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/AAPL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"AAPL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/TSLA/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"TSLA\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/GOOGL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"GOOGL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(`https://cloud.iexapis.com/stable/stock/FB/price?token=${this.token}`)\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"FB\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/MSFT/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"MSFT\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    //commdity\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Propane\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DHHNGSP?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Diesel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Jet Fuel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DJFUELUSGULF?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Gas\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/GASDESW?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Heating Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DPROPANEMBTX?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Crude Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n  }\n\n  handleC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      currentItem: [\n        { symbol: item.symbol, price: item.price, rate: item.rate },\n      ],\n    });\n  };\n\n  handleAC = (item) => () => {\n    console.log(item, \"isnd\");\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n      addCurrentItemC: [\n        ...this.state.addCurrentItemC,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    (async () => {\n      console.log(\"rrrrrrrrrrr\");\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n    })();\n  };\n\n  handleRC = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemC;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemC: arr,\n    });\n  };\n\n  handleAFx = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemFx: [\n        ...this.state.addCurrentItemFx,\n        ...[{ price: item.rate, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRFx = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemFx;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemFx: arr,\n    });\n  };\n\n  handleAIex = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemIex: [\n        ...this.state.addCurrentItemIex,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRIex = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemIex;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemIex: arr,\n    });\n  };\n\n  handleACum = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemCum: [\n        ...this.state.addCurrentItemCum,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleViewUpdate = (item) => () => {\n    this.setState({\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleUpdatePrice = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceBoth = (e) => {\n    let num = e.target.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceM = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleRCum = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemCum;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemCum: arr,\n    });\n  };\n\n  handleFilter = (e) => {\n    let arr1 = [\n      ...this.state.cum,\n      ...this.state.fxPrice,\n      ...this.state.crypto,\n      ...this.state.iex,\n    ];\n\n    let t = e.target.value ? e.target.value : \"\";\n\n    let res = arr1.filter((i) =>\n      i.symbol.toLowerCase().includes(t.toLowerCase())\n    );\n\n    if (res) {\n      this.setState({\n        fillArr: res,\n        hideOld: true,\n      });\n    } else {\n      this.setState({\n        nullF: \"not found\",\n        hideOld: true,\n      });\n    }\n  };\n\n  handleSubmitBuyL = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ loss: e.target.value } },\n    });\n  };\n\n  handleSubmitBuyP = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ profit: e.target.value } },\n    });\n  };\n\n  handleSubmitBuy = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              new Intl.NumberFormat('en-US').format(this.state.user.user.user.wallet) +\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n                parseInt(this.state.orderIsh),\n          });\n        } else {\n        }\n      });\n  };\n\n  handleSubmitSell = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n              10 *\n              parseInt(this.state.orderIsh),\n          });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  \n   \n\n  handSwitch1 = () => {\n    this.setState({\n      disA1: !this.state.disA1,\n    });\n  };\n\n  handSwitch2 = () => {\n    console.log(\"readeded\");\n\n    this.setState({\n      disA2: !this.state.disA2,\n    });\n  };\n\n  handleMarket = () => {\n    this.setState({\n      market: true,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleBoard = () => {\n    this.setState({\n      market: false,\n      board: true,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handlePort = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: true,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleManager = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: true,\n      admin: false,\n    });\n  };\n  handleAdmin = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: true,\n    });\n  };\n\n  setVView = () => {\n    this.setState({\n      VView: !this.state.VView,\n    });\n  };\n\n  handleImageChange = (e) => {\n    // console.log(e.target.files[])\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({\n          fileUp: {\n            ...this.state.fileUp,\n            ...{ img: reader.result },\n          },\n        });\n      };\n    }\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n\n    console.log(\"dfffff\", this.state.fileUp);\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/registration/file/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.fileUp),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          this.setState({ verifyS: true, VView: false });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  openForex = () => {\n    this.setState({ forexShow: true });\n    console.log(this.state.forexShow);\n  };\n\n  closeForex = () => {\n    this.setState({ forexShow: false });\n    console.log(this.state.forexShow);\n  };\n\n  setAll = () => {\n    this.setState({\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllC = () => {\n    this.setState({\n      all: false,\n      allC: true,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllF = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: true,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllCum = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: true,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllS = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: true,\n      hideIbox: true,\n    });\n  };\n\n  setlevIsh = () => {\n    this.setState({\n      levIsh: !this.state.levIsh,\n    });\n  };\n\n  closeSetlevIsh = () => {\n    this.setState({\n      levIsh: false,\n    });\n  };\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of NavbarC */}\n          \n\n          {/* Ending of NavbarC */} \n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.market ? (\n                <div className=\"full-width\">\n                  <h2>Market List</h2>\n                  <div\n                    className=\"dash-row dash-row-centralized\"\n                    style={{ justifyContent: \"space-around\" }}\n                  >\n                    <div className=\"instrument-list\" style={{ width: \"75%\" }}>\n                      {this.state.fxPrice.map((item) => (\n                        <div className=\"instrument-card\">\n                          <span>{item.symbol}</span>\n                        </div>\n                      ))}\n\n                      {this.state.crypto.map((item) => (\n                        <div className=\"instrument-card\">\n                          <span>{item.symbol}</span>\n                        </div>\n                      ))}\n                      {this.state.cum.map((item) => (\n                        <div className=\"instrument-card\">\n                          <span>{item.symbol}</span>\n                        </div>\n                      ))}\n                      {this.state.iex.map((item) => (\n                        <div className=\"instrument-card\">\n                          <span>{item.symbol}</span>\n                        </div>\n                      ))}\n                    </div>\n                    <div style={{ width: \"25%\", textAlign: \"right\" }}>\n                      <input\n                        type=\"search\"\n                        name=\"search\"\n                        placeholder=\"Search exchange / pair /syn\"\n                      />\n                    </div>\n                  </div>\n                  <table className=\"tabled\">\n                    <tbody>\n                      <tr>\n                        <th>Market</th>\n                        <th>Pair</th>\n                        <th>Price</th>\n                        <th>Direct Vol. 24H</th>\n                        <th>Total Vol. 24H</th>\n                        <th>Market Cap</th>\n                        <th>Chg. 24H</th>\n                        <th>24h High/Low</th>\n                      </tr>\n                      {\n                        this.state.crypto.map((item)=>(\n                          <tr>\n                        <td>Cryptocurrency</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n\n                        <td className=\"fall\">-4.3%</td>\n                        <td>\n                          <progress value={32} max={100}>\n                            {\" \"}\n                            32%{\" \"}\n                          </progress>\n                          <div className=\"dash-row dash-row-centralized\">\n                            <div className=\"split-50 lefted\">\n                              <span>{(1/ parseInt(item.price)).toString().slice(0,8) }</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>{(1/ parseInt(item.price)).toString().slice(0,8)}</span>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                        ))\n                      }\n                     \n\n                     {\n                        this.state.fxPrice.map((item)=>(\n                          <tr>\n                        <td>Forex</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.symbol} {item.rate.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.rate.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.rate.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.rate.toString().slice(0,6)}</td>\n\n                        <td className=\"fall\">-4.3%</td>\n                        <td>\n                          <progress value={32} max={100}>\n                            {\" \"}\n                            32%{\" \"}\n                          </progress>\n                          <div className=\"dash-row dash-row-centralized\">\n                            <div className=\"split-50 lefted\">\n                              <span>{(1/ parseInt(item.rate)).toString().slice(0,6)}</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>{(1/ parseInt(item.rate)).toString().slice(0,6) }</span>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                        ))\n                      }\n\n{\n                        this.state.iex.map((item)=>(\n                          <tr>\n                        <td>Stock</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n\n                        <td className=\"fall\">-4.3%</td>\n                        <td>\n                          <progress value={32} max={100}>\n                            {\" \"}\n                            32%{\" \"}\n                          </progress>\n                          <div className=\"dash-row dash-row-centralized\">\n                            <div className=\"split-50 lefted\">\n                              <span>{(1/ parseInt(item.price)).toString().slice(0,6)}</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>{(1/ parseInt(item.price)).toString().slice(0,6) }</span>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                        ))\n                      }\n\n\n{\n                        this.state.cum.map((item)=>(\n                          <tr>\n                        <td>Cumodity</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n                        <td>{item.symbol} {item.price.toString().slice(0,6)}</td>\n\n                        <td className=\"fall\">-4.3%</td>\n                        <td>\n                          <progress value={32} max={100}>\n                            {\" \"}\n                            32%{\" \"}\n                          </progress>\n                          <div className=\"dash-row dash-row-centralized\">\n                            <div className=\"split-50 lefted\">\n                              <span>{(1/ parseInt(item.price)).toString().slice(0,6)}</span>\n                            </div>\n                            <div className=\"split-50 righted\">\n                              <span>{(1/ parseInt(item.price)).toString().slice(0,6) }</span>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                        ))\n                      }\n                      \n                     \n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Market;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/OrderBook.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass OrderBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fx: [\"EURUSD\", \"USDGBP\", \"USDJPY\"],\n      fxPrice: [],\n      iex: [],\n      crypto: [],\n      cum: [],\n      hideIbox: true,\n      currentItem: [],\n      addCurrentItemC: [],\n      addCurrentItemFx: [],\n      addCurrentItemCum: [],\n      addCurrentItemIex: [],\n      fillArr: [],\n      nullF: \"\",\n      setView: [],\n      setViewM: [],\n      orderIsh: [],\n      unitP: \"\",\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      orderBook: true,\n      levIsh: false,\n      admin: false,\n      VView: false,\n      selectedFiles: [],\n      fileUp: {},\n      forexShow: false,\n      verifyS: this.props.user.user ? this.props.user.user.user.verify : \"\",\n      activeS: \"\",\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      totalUp: \"\",\n      orders: JSON.parse(localStorage.getItem(\"orders\"))\n        ? JSON.parse(localStorage.getItem(\"orders\")).orders\n        : this.props.orders,\n      history: JSON.parse(localStorage.getItem(\"historys\"))\n        ? JSON.parse(localStorage.getItem(\"historys\")).history\n        : this.props.history,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n\n    // GET Request.\n    fetch(\n      `https://cloud.iexapis.com/stable/fx/latest?symbols=${this.state.fx}&token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ fxPrice: json });\n      }); //print data to console\n\n    //crytp\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/BTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n        this.setState({ bitP: json });\n\n        this.setState({\n          orderIsh: json.price,\n\n          setView: json,\n          setViewM: json.price,\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/ETHUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/LTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    //stock\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/AAPL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"AAPL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/TSLA/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"TSLA\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/GOOGL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"GOOGL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(`https://cloud.iexapis.com/stable/stock/FB/price?token=${this.token}`)\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"FB\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/MSFT/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"MSFT\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    //commdity\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Propane\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DHHNGSP?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Diesel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Jet Fuel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DJFUELUSGULF?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Gas\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/GASDESW?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Heating Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DPROPANEMBTX?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Crude Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n  }\n\n  handleC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      currentItem: [\n        { symbol: item.symbol, price: item.price, rate: item.rate },\n      ],\n    });\n  };\n\n  handleAC = (item) => () => {\n    console.log(item, \"isnd\");\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n      addCurrentItemC: [\n        ...this.state.addCurrentItemC,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    (async () => {\n      console.log(\"rrrrrrrrrrr\");\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n    })();\n  };\n\n  handleRC = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemC;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemC: arr,\n    });\n  };\n\n  handleAFx = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemFx: [\n        ...this.state.addCurrentItemFx,\n        ...[{ price: item.rate, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRFx = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemFx;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemFx: arr,\n    });\n  };\n\n  handleAIex = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemIex: [\n        ...this.state.addCurrentItemIex,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRIex = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemIex;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemIex: arr,\n    });\n  };\n\n  handleACum = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemCum: [\n        ...this.state.addCurrentItemCum,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleViewUpdate = (item) => () => {\n    this.setState({\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleUpdatePrice = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceBoth = (e) => {\n    let num = e.target.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceM = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleRCum = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemCum;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemCum: arr,\n    });\n  };\n\n  handleFilter = (e) => {\n    let arr1 = [\n      ...this.state.cum,\n      ...this.state.fxPrice,\n      ...this.state.crypto,\n      ...this.state.iex,\n    ];\n\n    let t = e.target.value ? e.target.value : \"\";\n\n    let res = arr1.filter((i) =>\n      i.symbol.toLowerCase().includes(t.toLowerCase())\n    );\n\n    if (res) {\n      this.setState({\n        fillArr: res,\n        hideOld: true,\n      });\n    } else {\n      this.setState({\n        nullF: \"not found\",\n        hideOld: true,\n      });\n    }\n  };\n\n  handleSubmitBuyL = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ loss: e.target.value } },\n    });\n  };\n\n  handleSubmitBuyP = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ profit: e.target.value } },\n    });\n  };\n\n  handleSubmitBuy = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              new Intl.NumberFormat('en-US').format(this.state.user.user.user.wallet) +\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n                parseInt(this.state.orderIsh),\n          });\n        } else {\n        }\n      });\n  };\n\n  handleSubmitSell = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n              10 *\n              parseInt(this.state.orderIsh),\n          });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  handSwitch1 = () => {\n    this.setState({\n      disA1: !this.state.disA1,\n    });\n  };\n\n  handSwitch2 = () => {\n    console.log(\"readeded\");\n\n    this.setState({\n      disA2: !this.state.disA2,\n    });\n  };\n  handleOrderBook = () => {\n    this.setState({\n      orderBook: true,\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleMarket = () => {\n    this.setState({\n      market: true,\n      board: false,\n      orderBook: false,\n\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleBoard = () => {\n    this.setState({\n      market: false,\n      orderBook: false,\n\n      board: true,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handlePort = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: true,\n      orderBook: false,\n\n      manager: false,\n      admin: false,\n    });\n  };\n  handleManager = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      orderBook: false,\n\n      manager: true,\n      admin: false,\n    });\n  };\n  handleAdmin = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      orderBook: false,\n\n      admin: true,\n    });\n  };\n\n  setVView = () => {\n    this.setState({\n      VView: !this.state.VView,\n    });\n  };\n\n  handleImageChange = (e) => {\n    // console.log(e.target.files[])\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({\n          fileUp: {\n            ...this.state.fileUp,\n            ...{ img: reader.result },\n          },\n        });\n      };\n    }\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n\n    console.log(\"dfffff\", this.state.fileUp);\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/registration/file/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.fileUp),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          this.setState({ verifyS: true, VView: false });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  openForex = () => {\n    this.setState({ forexShow: true });\n    console.log(this.state.forexShow);\n  };\n\n  closeForex = () => {\n    this.setState({ forexShow: false });\n    console.log(this.state.forexShow);\n  };\n\n  setAll = () => {\n    this.setState({\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllC = () => {\n    this.setState({\n      all: false,\n      allC: true,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllF = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: true,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllCum = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: true,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllS = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: true,\n      hideIbox: true,\n    });\n  };\n\n  setlevIsh = () => {\n    this.setState({\n      levIsh: !this.state.levIsh,\n    });\n  };\n\n  closeSetlevIsh = () => {\n    this.setState({\n      levIsh: false,\n    });\n  };\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of NavbarC */}\n\n          {/* Ending of NavbarC */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {this.state.orderBook ? (\n                // <div className=\"full-width orderTabComponent\">\n                <div\n                  className=\"order-book-section orderBookComponent\"\n                  style={{ display: \"block\" }}\n                >\n                  <div className=\"order-book-sec\">\n                    <h2 id=\"order-header\">Order Book</h2>\n                    <div\n                      className=\"tabs\"\n                      style={{ borderBottom: \"1px solid #4a4a4d\" }}\n                    >\n                      <a className=\"active\" dash-tab=\"order-book\">\n                        Trading History\n                      </a>\n                      <a dash-tab=\"opened-position\"> Opened Positions</a>\n\n                      <a dash-tab=\"opened-pos\"> Auto Trades</a>\n                    </div>\n                    <div className=\"dash-tab-sec\" dash-tab-sec=\"order-book\">\n                      {this.state.orders.length > 0 ? (\n                        this.state.orders.map((item, i) =>\n                          item.active ? (\n                            <div className=\"dash-row\">\n                              <div className=\"date\">\n                                <p className=\"time\">\n                                  {\" \"}\n                                  {item.time\n                                    ? item.time.slice(10).slice(1, 6)\n                                    : \"\"}\n                                </p>\n                                <p className=\"day-month\">\n                                  {item.time ? item.time.slice(0, 10) : \"\"}\n                                </p>\n                              </div>\n                              <div className=\"currency\">\n                                <p className=\"currency-type\">\n                                  {item.stockName}\n                                </p>\n                                <p className=\"cad\">\n                                  {item.stockAmount && item.buyW\n                                    ? (item.stockAmount * item.buyW)\n                                        .toString()\n                                        .slice(0, 4) + \"$\"\n                                    : \"\"}\n                                </p>\n                              </div>\n                              <div className=\"rate\">\n                                <p\n                                  className={\n                                    item.tag.toLowerCase() === \"buy\"\n                                      ? \"rate-no\"\n                                      : \"rate-no red\"\n                                  }\n                                >\n                                  {item.stockAmount\n                                    ? new Intl.NumberFormat('en-US').format(item.stockAmount)\n                                        .slice(0, 8)\n                                    : \"\"}\n                                </p>\n                                <p className=\"currency\">\n                                  {item.profitLoss ? \"profit\" : \"loss\"}\n                                </p>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      ) : (\n                        <h3\n                          style={{\n                            fontWeight: \"bold\",\n                            color: \"#9E9E9E\",\n                            marginTop: \" 25%\",\n                          }}\n                        >\n                          no trade\n                        </h3>\n                      )}\n                    </div>\n\n                    <div\n                      className=\"dash-tab-sec\"\n                      dash-tab-sec=\"opened-position\"\n                    >\n                      {this.state.history.length > 0 ? (\n                        this.state.history.map((item, i) => (\n                          <div className=\"dash-row\">\n                            <div className=\"date\">\n                              <p className=\"time\">\n                                {\" \"}\n                                {item.scheduledTime\n                                  ? item.scheduledTime.slice(10).slice(1, 6)\n                                  : \"\"}\n                              </p>\n                              <p className=\"day-month\">\n                                {item.scheduledTime\n                                  ? item.scheduledTime.slice(0, 10)\n                                  : \"\"}\n                              </p>\n                            </div>\n                            <div className=\"currency\">\n                              <p className=\"currency-type\">{item.market}</p>\n                              <p className=\"cad\">\n                                {\" \"}\n                                {item.assets ? item.assets : \"\"}\n                              </p>\n                            </div>\n                            <div className=\"rate\">\n                              <p\n                                className=\"currency-type\"\n                                style={{\n                                  margin: 0,\n                                  color: \"white\",\n                                  fontSize: \"11px\",\n                                }}\n                              >\n                                {item.amount\n                                  ? new Intl.NumberFormat('en-US').format(item.amount)\n                                      .slice(0, 8)\n                                  : \"\"}\n                              </p>{\" \"}\n                              <p className=\"currency\">\n                                {item.profitLoss ? \"profit\" : \"loss\"}\n                              </p>\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        <h3\n                          style={{\n                            color: \"#9E9E9E\",\n                            marginTop: \" 25%\",\n                          }}\n                        >\n                          no trade\n                        </h3>\n                      )}\n                    </div>\n\n                    <div className=\"dash-tab-sec\" dash-tab-sec=\"opened-pos\">\n                      {this.state.history.length > 0 ? (\n                        this.state.history.map((item, i) => (\n                          <div className=\"dash-row\">\n                            <div className=\"date\">\n                              <p className=\"time\">\n                                {\" \"}\n                                {item.scheduledTime\n                                  ? item.scheduledTime.slice(10).slice(1, 6)\n                                  : \"\"}\n                              </p>\n                              <p className=\"day-month\">\n                                {item.scheduledTime\n                                  ? item.scheduledTime.slice(0, 10)\n                                  : \"\"}\n                              </p>\n                            </div>\n                            <div className=\"currency\">\n                              <p className=\"currency-type\">{item.market}</p>\n                              <p className=\"cad\">\n                                {\" \"}\n                                {item.assets ? item.assets : \"\"}\n                              </p>\n                            </div>\n                            <div className=\"rate\">\n                              <p\n                                className=\"currency-type\"\n                                style={{\n                                  margin: 0,\n                                  color: \"white\",\n                                  fontSize: \"11px\",\n                                }}\n                              >\n                                {item.amount\n                                  ? new Intl.NumberFormat('en-US').format(item.amount)\n                                      .slice(0, 8)\n                                  : \"\"}\n                              </p>{\" \"}\n                              <p className=\"currency\">\n                                {item.profitLoss ? \"profit\" : \"loss\"}\n                              </p>\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        <h3\n                          style={{\n                            color: \"#9E9E9E\",\n                            marginTop: \" 25%\",\n                          }}\n                        >\n                          no trade\n                        </h3>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default OrderBook;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Auto.js",["323","324","325","326","327","328","329","330","331","332","333","334","335"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport axios from \"axios\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { Card, message } from \"antd\";\n\nclass Auto extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fx: [\"EURUSD\", \"USDGBP\", \"USDJPY\"],\n      fxPrice: [],\n      iex: [],\n      crypto: [],\n      cum: [],\n      hideIbox: true,\n      currentItem: [],\n      addCurrentItemC: [],\n      addCurrentItemFx: [],\n      addCurrentItemCum: [],\n      addCurrentItemIex: [],\n      fillArr: [],\n      nullF: \"\",\n      setView: [],\n      setViewM: [],\n      orderIsh: [],\n      unitP: \"\",\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      auto: true,\n      board: false,\n      autoTradeData: [],\n      autoTradeData_id: \"\",\n      singleTrade: {},\n      singleTradeLoading: false,\n      iAgree: false,\n      userId: \"\",\n      userCurrentWallet: 0,\n\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: false,\n      VView: false,\n      selectedFiles: [],\n      fileUp: {},\n      forexShow: false,\n      verifyS: this.props.user.user ? this.props.user.user.user.verify : \"\",\n      activeS: \"\",\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      totalUp: \"\",\n      subscribe: false,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  getSingleAutoTrade = (id) => {\n    // this.setState({singleTradeLoading:true})\n    axios\n      .get(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade/${id}`)\n      .then((response) => {\n        if (this.state.userCurrentWallet < response.data.subscriptionFee) {\n          message.warning(\n            \"Insufficient funds, kindly fund your wallet and try again\"\n          );\n        } else {\n          this.setState({ subscribe: true, singleTrade: response.data });\n        }\n      });\n  };\n  subscribeAutotrade = (id) => {\n    this.setState({ singleTradeLoading: true });\n    axios\n      .put(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade/subscribe/${id}`,\n        { userId: this.state.userId }\n      )\n      .then((response) => {\n        const res = axios.put(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/autoTrade`,\n          {\n            id: this.state.userId,\n            autoTrade: true,\n            isTrading: false,\n          }\n        );\n        if (res) {\n          message.success(\"auto trade has been enabled\");\n        }\n        this.setState({\n          subscribe: false,\n          singleTradeLoading: true,\n        });\n        message.success(\"subscription was successful\");\n      });\n  };\n\n  unsubscribeAutotrade = (id) => {\n    this.setState({ singleTradeLoading: true });\n    axios\n      .put(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade/unsubscribe/${id}`,\n        { userId: this.state.userId }\n      )\n      .then((response) => {\n        const res = axios.put(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/autoTrade`,\n          {\n            id: this.state.userId,\n            autoTrade: true,\n            isTrading: false,\n          }\n        );\n        if (res) {\n          message.success(\"auto trade has been disabled\");\n        }\n        this.setState({\n          subscribe: false,\n          singleTradeLoading: true,\n        });\n        message.success(\"subscription was ended\");\n      });\n  };\n\n  componentDidMount() {\n    var idArray = this.state.user.user.user.subcriptionPlan.map((id) => id._id);\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade`\n      );\n      let _data = await response.json();\n      this.setState({\n        autoTradeData: _data,\n      });\n    })();\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n        userId: user.user.user._id,\n        userCurrentWallet: user.user.user.wallet,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n\n    // GET Request.\n    fetch(\n      `https://cloud.iexapis.com/stable/fx/latest?symbols=${this.state.fx}&token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ fxPrice: json });\n      }); //print data to console\n\n    //crytp\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/BTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n        this.setState({ bitP: json });\n\n        this.setState({\n          orderIsh: json.price,\n\n          setView: json,\n          setViewM: json.price,\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/ETHUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/crypto/LTCUSD/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [...this.state.crypto, ...[json]] });\n      }); //print data to console\n    // Catch errors\n\n    //stock\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/AAPL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"AAPL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/TSLA/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"TSLA\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/GOOGL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"GOOGL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(`https://cloud.iexapis.com/stable/stock/FB/price?token=${this.token}`)\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"FB\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/MSFT/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"MSFT\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    //commdity\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Propane\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DHHNGSP?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Diesel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Jet Fuel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DJFUELUSGULF?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Gas\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/GASDESW?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Heating Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DPROPANEMBTX?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Crude Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n  }\n\n  handleC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      currentItem: [\n        { symbol: item.symbol, price: item.price, rate: item.rate },\n      ],\n    });\n  };\n\n  handleAC = (item) => () => {\n    console.log(item, \"isnd\");\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n      addCurrentItemC: [\n        ...this.state.addCurrentItemC,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    (async () => {\n      console.log(\"rrrrrrrrrrr\");\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n    })();\n  };\n\n  handleRC = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemC;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemC: arr,\n    });\n  };\n\n  handleAFx = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemFx: [\n        ...this.state.addCurrentItemFx,\n        ...[{ price: item.rate, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRFx = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemFx;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemFx: arr,\n    });\n  };\n\n  handleAIex = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemIex: [\n        ...this.state.addCurrentItemIex,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRIex = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemIex;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemIex: arr,\n    });\n  };\n\n  handleACum = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemCum: [\n        ...this.state.addCurrentItemCum,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleViewUpdate = (item) => () => {\n    this.setState({\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleUpdatePrice = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceBoth = (e) => {\n    let num = e.target.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceM = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleRCum = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemCum;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemCum: arr,\n    });\n  };\n\n  handleFilter = (e) => {\n    let arr1 = [\n      ...this.state.cum,\n      ...this.state.fxPrice,\n      ...this.state.crypto,\n      ...this.state.iex,\n    ];\n\n    let t = e.target.value ? e.target.value : \"\";\n\n    let res = arr1.filter((i) =>\n      i.symbol.toLowerCase().includes(t.toLowerCase())\n    );\n\n    if (res) {\n      this.setState({\n        fillArr: res,\n        hideOld: true,\n      });\n    } else {\n      this.setState({\n        nullF: \"not found\",\n        hideOld: true,\n      });\n    }\n  };\n\n  handleSubmitBuyL = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ loss: e.target.value } },\n    });\n  };\n\n  handleSubmitBuyP = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ profit: e.target.value } },\n    });\n  };\n\n  handleSubmitBuy = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              new Intl.NumberFormat('en-US').format(this.state.user.user.user.wallet) +\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n                parseInt(this.state.orderIsh),\n          });\n        } else {\n        }\n      });\n  };\n\n  handleSubmitSell = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n              10 *\n              parseInt(this.state.orderIsh),\n          });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  handSwitch1 = () => {\n    this.setState({\n      disA1: !this.state.disA1,\n    });\n  };\n\n  handSwitch2 = () => {\n    console.log(\"readeded\");\n\n    this.setState({\n      disA2: !this.state.disA2,\n    });\n  };\n\n  handleMarket = () => {\n    this.setState({\n      market: true,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleBoard = () => {\n    this.setState({\n      market: false,\n      board: true,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handlePort = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: true,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleManager = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: true,\n      admin: false,\n    });\n  };\n  handleAdmin = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: true,\n    });\n  };\n\n  setVView = () => {\n    this.setState({\n      VView: !this.state.VView,\n    });\n  };\n\n  handleImageChange = (e) => {\n    // console.log(e.target.files[])\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({\n          fileUp: {\n            ...this.state.fileUp,\n            ...{ img: reader.result },\n          },\n        });\n      };\n    }\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n\n    console.log(\"dfffff\", this.state.fileUp);\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/registration/file/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.fileUp),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          this.setState({ verifyS: true, VView: false });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  openForex = () => {\n    this.setState({ forexShow: true });\n    console.log(this.state.forexShow);\n  };\n\n  closeForex = () => {\n    this.setState({ forexShow: false });\n    console.log(this.state.forexShow);\n  };\n\n  setAll = () => {\n    this.setState({\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllC = () => {\n    this.setState({\n      all: false,\n      allC: true,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllF = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: true,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllCum = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: true,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllS = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: true,\n      hideIbox: true,\n    });\n  };\n\n  setlevIsh = () => {\n    this.setState({\n      levIsh: !this.state.levIsh,\n    });\n  };\n\n  closeSetlevIsh = () => {\n    this.setState({\n      levIsh: false,\n    });\n  };\n\n  render() {\n    let idArray = this.state.user.user.user.subcriptionPlan.map((id) => id._id);\n\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of NavbarC */}\n\n          {/* Ending of NavbarC */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.auto ? (\n                <div className=\"full-width\">\n                  <div className=\"text-center\">\n                    <h4 className=\"my-4\" style={{ color: \"#fff\" }}>\n                      Subscribe Now to Auto Copy our Top Performing Traders\n                    </h4>\n                  </div>\n                  <Row style={{ marginBottom: \"10%\" }}>\n                    {this.state.autoTradeData.map((data, index) => (\n                      <Col md={4} className=\"mt-3\" key={index}>\n                        <Card className=\"card_style\">\n                          <p>Username: {data.userName}</p>\n                          <p>Profit % = {data.profitPercentage}%</p>\n                          <p>\n                            Subscription Fee: $\n                            {new Intl.NumberFormat('en-US').format(data.subscriptionFee)}\n                          </p>\n                          <div className=\"text-center mt-3\">\n                            {idArray.includes(data._id) ? (\n                              <Button\n                                onClick={() =>\n                                  this.unsubscribeAutotrade(data._id)\n                                }\n                              >\n                                Unsubscribe\n                              </Button>\n                            ) : (\n                              <Button\n                                onClick={() =>\n                                  this.getSingleAutoTrade(data._id)\n                                }\n                              >\n                                Subscribe\n                              </Button>\n                            )}\n                          </div>\n                        </Card>\n                      </Col>\n                    ))}\n                  </Row>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {this.state.subscribe ? (\n                <section\n                  className=\"withdraw-modal-box personal-data-modal\"\n                  style={{ display: \"block\" }}\n                >\n                  <div className=\"withdraw-modal personal-modal w-50\">\n                    <div className=\"header\">Subscribe</div>\n                    <div className=\"dash-row\">\n                      <div className=\"content\">\n                        <div className=\"billing-form text-left\">\n                          <p className=\"text-white\">\n                            Confirm that you want to copy{\" \"}\n                            {this.state.singleTrade.userName} trade activity for\n                            the period of 30 days\n                          </p>\n                          <p className=\"text-white\">\n                            Subscription = $\n                            {new Intl.NumberFormat('en-US').format(this.state.singleTrade.subscriptionFee)}\n                          </p>\n                          <Form>\n                            <Form.Check\n                              type=\"checkbox\"\n                              className=\"my-1 mr-sm-2 text-white \"\n                              id=\"agreement\"\n                              label=\"I agree\"\n                              custom\n                              onChange={(e) =>\n                                this.setState({ iAgree: e.target.checked })\n                              }\n                            />\n                            <div className=\"d-flex justify-content-between mt-4\">\n                              <div>\n                                <Button\n                                  variant=\"light\"\n                                  onClick={() =>\n                                    this.setState({ subscribe: false })\n                                  }\n                                >\n                                  Cancel\n                                </Button>\n                              </div>\n                              <div>\n                                <Button\n                                  style={{}}\n                                  onClick=\"\"\n                                  variant=\"primary\"\n                                  className=\"mb-4\"\n                                  disabled={!this.state.iAgree}\n                                  onClick={() => {\n                                    this.subscribeAutotrade(\n                                      this.state.singleTrade._id\n                                    );\n                                  }}\n                                >\n                                  {this.singleTradeLoading\n                                    ? \"Subscribing...\"\n                                    : \"Confirm\"}\n                                </Button>\n                              </div>\n                            </div>\n                          </Form>\n                        </div>\n                      </div>\n                    </div>\n                    <span\n                      className=\"close\"\n                      onClick={() => this.setState({ subscribe: false })}\n                    >\n                      <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                        <title>cross</title>\n                        <path\n                          className=\"path1\"\n                          d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                        />\n                      </svg>\n                    </span>{\" \"}\n                  </div>\n                </section>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Auto;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Dashboard.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\n\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport Stock from \"../Component/Stock\";\nimport UserProfile from \"../Component/UserProfile\";\nimport SubSidebar from \"../Component/SubSidebar\";\n\nimport Account from \"../Component/Account\";\nimport Notification from \"../Component/Notification\";\nimport Orders from \"../Component/Orders\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { NavBarWithRouter } from \"../Component/NavBar/NavBar\";\nimport card from \"../AccountsAsset/images/card.png\";\nimport watch from \"../AccountsAsset/images/stopwatch.webp\";\nimport { message } from \"antd\";\nlet userID = localStorage.getItem(\"user\");\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vName: \"\",\n      intervalId: null,\n      intervalId1: null,\n      buysell: false,\n      verShow: false,\n      fx: [\"EURUSD\", \"USDGBP\", \"USDJPY\"],\n      fxPrice: [],\n      iex: [],\n      crypto: [],\n      cum: [],\n      hideIbox: true,\n      currentItem: [],\n      num: 1,\n      addCurrentItemC: [],\n      addCurrentItemFx: [],\n      addCurrentItemCum: [],\n      addCurrentItemIex: [],\n      fillArr: [],\n      nullF: \"\",\n      setView: [],\n      setViewM: [],\n      orderIsh: [],\n      unitP: \"\",\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      deposit: {},\n      orders: [],\n      history: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: true,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: false,\n      VView: false,\n      showCard: false,\n      selectedFiles: [],\n      fileUp: {},\n      forexShow: false,\n      verifyS: this.props.user ? this.props.user.user.user.verify : false,\n      isTrading: this.props.user.user\n        ? this.props.user.user.user.isTrading\n        : false,\n      autoTrade: this.props.user.user\n        ? this.props.user.user.user.autoTrade\n        : false,\n      activeS: \"BTCUSD\",\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      totalUp: localStorage.getItem(\"total\")\n        ? localStorage.getItem(\"total\")\n        : 0,\n      gasP: [],\n      aaplP: [],\n      tslaP: [],\n      ethP: [],\n      ver1: true,\n      ver2: false,\n      ver3: false,\n      ver4: false,\n      ver5: false,\n      DocumentFile: \"\",\n      name: \"\",\n      address: \"\",\n      phoneNumber: \"\",\n      doc: \"\",\n      docProof: \"\",\n      docPass: \"\",\n      isTrading1: this.props.user.user\n        ? this.props.user.user.user.isTrading\n        : false,\n      liveTrade: this.props.user.user\n        ? this.props.user.user.user.liveTrade\n        : false,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n    this.myRef4 = this.props.user.user ? React.createRef() : \"\";\n  }\n\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n  handleTrading = (e) => {\n    if (this.state.isTrading) {\n      message.success(`AutoCopy Trader Disabling...`);\n    } else {\n      message.success(`AutoCopy Trader Enabling...`);\n    }\n    // this.setState({\n    //   isTrading1:e.target.checked,\n    // });\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/isTrading`,\n        {\n          mode: \"cors\",\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            id: this.state.user.user.user._id,\n            isTrading: e.target.checked,\n          }),\n        }\n      );\n      let data = await response.json();\n      this.setState({\n        isTrading: data.isTrading,\n      });\n\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n        );\n        let user = await response.json();\n        this.setState({\n          user: user,\n        });\n\n        let a = { user: user };\n\n        localStorage.setItem(\"user\", JSON.stringify(a));\n        window.location.reload();\n      })();\n    })();\n  };\n\n  handleMessages = (e) => {\n    if (this.state.isTrading) {\n      message.warning(\n        `AutoCopy Trader is Active, Turn off AutoCopy Trader to trade manually`\n      );\n      // } else {\n      //   message.warning(`You need to make a Deposit in your wallet.`);\n    }\n  };\n\n  componentDidMount() {\n    const intervalId = setInterval(this.closeTimer2, 10000);\n\n    this.setState({ intervalId });\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let r = await response.json();\n\n      let data = r.reverse();\n      this.setState({\n        orders: data,\n      });\n      let a = { orders: data };\n      localStorage.setItem(\"orders\", JSON.stringify(a));\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      console.log(\"auto\", data);\n      this.setState({\n        history: data,\n      });\n      let a = { history: data };\n\n      localStorage.setItem(\"historys\", JSON.stringify(a));\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n\n    // GET Request.\n    fetch(\n      `https://financialmodelingprep.com/api/v3/stock/list?apikey=6e39eba411ee51caced6ab2be49f987b`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        // this.setState({ fxPrice: json });\n        console.log(json,'fx')\n      }); //print data to console\n\n    //crytp\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: json });\n\n        // this.setState({\n        //   setView: { ...json, tag: \"Crypto\" },\n        //   setViewM: json.price,\n        // });\n      }); //print data to console\n    // Catch errors\n\n    // crypto\n    //crytp\n\n    // Catch errors\n\n    // fetch(\n    //   `https://cloud.iexapis.com/stable/crypto/ETHUSD/price?token=${this.token}`\n    // )\n    //   // Handle success\n    //   .then((response) => response.json()) // convert to json\n    //   .then((json) => {\n    //     this.setState({ crypto: [...this.state.crypto, ...[json]] });\n    //     this.setState({ ethP: json });\n    //   }); //print data to console\n    // // Catch errors\n\n    // fetch(\n    //   `https://cloud.iexapis.com/stable/crypto/LTCUSD/price?token=${this.token}`\n    // )\n    //   // Handle success\n    //   .then((response) => response.json()) // convert to json\n    //   .then((json) => {\n    //     this.setState({ crypto: [...this.state.crypto, ...[json]] });\n    //   }); //print data to console\n    // // Catch errors\n\n    // fetch(\n    //   `https://cloud.iexapis.com/stable/crypto/DOGEUSD/price?token=${this.token}`\n    // )\n    //   // Handle success\n    //   .then((response) => response.json()) // convert to json\n    //   .then((json) => {\n    //     this.setState({ crypto: [...this.state.crypto, ...[json]] });\n    //   }); //print data to console\n    // // Catch errors\n\n    //stock\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/AAPL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"AAPL\" }]],\n        });\n        this.setState({ aaplP: { price: json, symbol: \"AAPL\" } });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/TSLA/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"TSLA\" }]],\n        });\n        this.setState({ tslaP: { price: json, symbol: \"TSLA\" } });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/GOOGL/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"GOOGL\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(`https://cloud.iexapis.com/stable/stock/FB/price?token=${this.token}`)\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"FB\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/stock/MSFT/price?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          iex: [...this.state.iex, ...[{ price: json, symbol: \"MSFT\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    //commdity\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Propane\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DHHNGSP?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Diesel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Jet Fuel\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DJFUELUSGULF?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Gas\" }]],\n        });\n        this.setState({ gasP: { price: json, symbol: \"Gas\" } });\n      }); //print data to console\n    // Catch errors\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/GASDESW?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Heating Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n\n    fetch(\n      `https://cloud.iexapis.com/stable/data-points/market/DPROPANEMBTX?token=${this.token}`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({\n          cum: [...this.state.cum, ...[{ price: json, symbol: \"Crude Oil\" }]],\n        });\n      }); //print data to console\n    // Catch errors\n  }\n  buysell = () => {\n    this.setState({ buysell: false });\n  };\n  closeTimer2 = async () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false`\n    )\n      // Handle success\n      .then((response) => response.json()) // convert to json\n      .then((json) => {\n        this.setState({ crypto: [] });\n\n        this.setState({ crypto: json });\n      }); //print data to console\n    // GET Request.\n    // fetch(\n    //   `http://api.currencylayer.com/live?access_key=04c3382363715be1aba4355af44eedc6&format=1`\n    // )\n    //   // Handle success\n    //   .then((response) => response.json()) // convert to json\n    //   .then((json) => {\n    //     let a = [];\n    //     if (json.quotes !== null && json.quotes !== undefined) {\n    //       const objectArray = Object.entries(json.quotes);\n    //       objectArray.forEach(([key, value]) => {\n    //         a.push({ symbol: key, rate: value, price: value });\n\n    //         // console.log(a, \"fx\");\n    //       });\n    //       this.setState({ fxPrice: a });\n    //     }\n    //   }); //print data to console\n\n    //   //crytp\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/crypto/BTCUSD/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({ crypto: [] });\n\n    //       this.setState({ crypto: [...this.state.crypto, ...[json]] });\n\n    //       this.setState({\n    //         // orderIsh: json.price,\n\n    //         setView: {\n    //           price: this.state.setView.price,\n    //           symbol: this.state.setView.symbol,\n    //           tag: this.state.setView.tag,\n    //         },\n    //         setViewM: json.price,\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/crypto/ETHUSD/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({ crypto: [...this.state.crypto, ...[json]] });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/crypto/LTCUSD/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({ crypto: [...this.state.crypto, ...[json]] });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   //stock\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/stock/AAPL/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({ iex: [] });\n\n    //       this.setState({\n    //         iex: [...this.state.iex, ...[{ price: json, symbol: \"AAPL\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/stock/TSLA/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         iex: [...this.state.iex, ...[{ price: json, symbol: \"TSLA\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/stock/GOOGL/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         iex: [...this.state.iex, ...[{ price: json, symbol: \"GOOGL\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(`https://cloud.iexapis.com/stable/stock/FB/price?token=${this.token}`)\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         iex: [...this.state.iex, ...[{ price: json, symbol: \"FB\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/stock/MSFT/price?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         iex: [...this.state.iex, ...[{ price: json, symbol: \"MSFT\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   //commdity\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({ cum: [] });\n\n    //       this.setState({\n    //         cum: [...this.state.cum, ...[{ price: json, symbol: \"Propane\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/data-points/market/DHHNGSP?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         cum: [...this.state.cum, ...[{ price: json, symbol: \"Diesel\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/data-points/market/DCOILWTICO?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         cum: [...this.state.cum, ...[{ price: json, symbol: \"Jet Fuel\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/data-points/market/DJFUELUSGULF?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         cum: [...this.state.cum, ...[{ price: json, symbol: \"Gas\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/data-points/market/GASDESW?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         cum: [...this.state.cum, ...[{ price: json, symbol: \"Heating Oil\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   fetch(\n    //     `https://cloud.iexapis.com/stable/data-points/market/DPROPANEMBTX?token=${this.token}`\n    //   )\n    //     // Handle success\n    //     .then((response) => response.json()) // convert to json\n    //     .then((json) => {\n    //       this.setState({\n    //         cum: [...this.state.cum, ...[{ price: json, symbol: \"Crude Oil\" }]],\n    //       });\n    //     }); //print data to console\n    //   // Catch errors\n\n    //   console.log(\"fetching\", this.state.crypto);\n  };\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  handleC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      currentItem: item,\n    });\n  };\n\n  handleAC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n      addCurrentItemC: [...this.state.addCurrentItemC, ...item],\n      setView: { ...item, tag: \"Crypto\" },\n      setViewM: item.current_price,\n      activeS: item.symbol,\n    });\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    this.setState({\n      totalUp: 0,\n    });\n\n    let b = 0;\n    localStorage.setItem(\"total\", b);\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n\n      let a = { orders: arr };\n      let b = 0;\n      localStorage.setItem(\"total\", b);\n\n      localStorage.setItem(\"orders\", JSON.stringify(a));\n    })();\n  };\n\n  closeOrder1 = (id, amount, newAmount) => () => {\n    this.setState({\n      totalUp: 0,\n    });\n\n    let b = 0;\n    localStorage.setItem(\"total\", b);\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      // let value = id;\n\n      // let arr = this.state.orders;\n\n      // arr = arr.filter((i) => i._id === id);\n\n      // this.setState({\n      //   orders: arr,\n      //   totalUp: 0,\n      // });\n\n      // let a = { orders: arr };\n      // let b = 0;\n      // localStorage.setItem(\"total\", b);\n\n      // localStorage.setItem(\"orders\", JSON.stringify(a));\n    })();\n  };\n\n  delOrder = (id) => () => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/del/${id}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n      let b = 0;\n      localStorage.setItem(\"total\", b);\n      let a = { orders: arr };\n\n      localStorage.setItem(\"orders\", JSON.stringify(a));\n    })();\n  };\n\n  handleRC = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemC;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemC: { ...arr, tag: \"Crypto\" },\n    });\n  };\n\n  handleAFx = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemFx: [\n        ...this.state.addCurrentItemFx,\n        ...[{ price: item.rate, symbol: item.symbol, tag: \"Forex\" }],\n      ],\n      setView: { ...item, tag: \"Forex\" },\n      setViewM: item.current_price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRFx = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemFx;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemFx: arr,\n    });\n  };\n\n  handleAIex = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemIex: [\n        ...this.state.addCurrentItemIex,\n        ...[{ price: item.current_price, symbol: item.symbol, tag: \"Stock\" }],\n      ],\n      setView: { ...item, tag: \"Stock\" },\n      setViewM: item.current_price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRIex = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemIex;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemIex: arr,\n    });\n  };\n  x;\n  handleACum = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemCum: [\n        ...this.state.addCurrentItemCum,\n        ...[\n          { price: item.current_price, symbol: item.symbol, tag: \"Commodity\" },\n        ],\n      ],\n      setView: { ...item, tag: \"Commodity\" },\n      setViewM: item.current_price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleViewUpdate = (item) => () => {\n    this.setState({\n      setView: item,\n      setViewM: item.current_price,\n      orderIsh: item.current_price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleUpdatePrice = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n    this.setState({\n      unitP: num,\n      num: num,\n    });\n  };\n\n  handleUpdatePriceBoth = (e) => {\n    let num = e.target.value;\n    this.setState({\n      unitP: num,\n      num: num,\n    });\n  };\n\n  handleUpdatePriceM = () => {\n    let num = this.textInput.current.value;\n    this.setState({\n      unitP: num,\n      num: num,\n    });\n  };\n\n  handleRCum = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemCum;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemCum: { ...arr, tag: \"Commodity\" },\n    });\n  };\n\n  handleFilter = (e) => {\n    let arr1 = [\n      ...this.state.cum,\n      ...this.state.fxPrice,\n      ...this.state.crypto,\n      ...this.state.iex,\n    ];\n\n    let t = e.target.value ? e.target.value : \"\";\n\n    let res = arr1.filter((i) =>\n      i.symbol.toLowerCase().includes(t.toLowerCase())\n    );\n\n    if (res) {\n      this.setState({\n        fillArr: res,\n        hideOld: true,\n      });\n    } else {\n      this.setState({\n        nullF: \"not found\",\n        hideOld: true,\n      });\n    }\n  };\n\n  handleSubmitBuyL = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ loss: e.target.value } },\n    });\n  };\n\n  handleSubmitBuyP = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ profit: e.target.value } },\n    });\n  };\n\n  handleSubmitBuy = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          message.success(\n            `${this.state.data.tag} trade of ${this.state.data.stockName} : ${this.state.data.stockAmount}  `\n          );\n\n          this.setState({ buysell: true });\n          const intervalId1 = setInterval(this.buysell, 8000);\n          this.setState({ intervalId1 });\n\n          // this.setState({\n          //   totalUp:\n          //     (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n          //     parseInt(this.state.orderIsh),\n          // });\n          // let b =\n          //   (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n          //   parseInt(this.state.orderIsh);\n          // localStorage.setItem(\"total\", b);\n        } else {\n        }\n      });\n  };\n\n  handleSubmitSell = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          message.success(\n            `${this.state.data.tag} trade of ${this.state.data.stockName} : ${this.state.data.stockAmount}  `\n          );\n          this.setState({ buysell: true });\n\n          const intervalId1 = setInterval(this.buysell, 8000);\n          this.setState({ intervalId1 });\n\n          // this.setState({\n          //   totalUp:\n          //     (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n          //     parseInt(this.state.orderIsh),\n          // });\n          // let b =\n          //   (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n          //   parseInt(this.state.orderIsh);\n          // localStorage.setItem(\"total\", b);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update if not match I don't know what's your data is so add a\n    // simple check like we use for strings.\n\n    if (prevState.orders !== this.state.orders) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`\n        );\n        let r = await response.json();\n\n        let data = r.reverse();\n\n        this.setState({\n          orders: data,\n        });\n        let a = { orders: data };\n\n        localStorage.setItem(\"orders\", JSON.stringify(a));\n      })();\n    }\n\n    if (prevState.history !== this.state.history) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/user/${\n            this.state.user.user ? this.state.user.user.user._id : \"\"\n          }`\n        );\n        let data = await response.json();\n        this.setState({\n          history: data,\n        });\n        let a = { history: data };\n\n        localStorage.setItem(\"historys\", JSON.stringify(a));\n      })();\n    }\n\n    if (prevState.user !== this.state.user) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n        );\n        let user = await response.json();\n        this.setState({\n          user: user,\n        });\n\n        let a = { user: user };\n        localStorage.setItem(\"user\", JSON.stringify(a));\n      })();\n    }\n  }\n\n  handSwitch1 = () => {\n    this.setState({\n      disA1: !this.state.disA1,\n    });\n  };\n\n  handSwitch2 = () => {\n    this.setState({\n      disA2: !this.state.disA2,\n    });\n  };\n\n  handleMarket = () => {\n    this.setState({\n      market: true,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleBoard = () => {\n    this.setState({\n      market: false,\n      board: true,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n  handlePort = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: true,\n      manager: false,\n      admin: false,\n    });\n  };\n  handleManager = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: true,\n      admin: false,\n    });\n  };\n  handleAdmin = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: true,\n    });\n  };\n\n  setVView = () => {\n    this.setState({\n      VView: !this.state.VView,\n    });\n  };\n\n  handleImageChange = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({\n          fileUp: {\n            ...this.state.fileUp,\n            ...{ img: reader.result },\n          },\n        });\n      };\n    }\n  };\n\n  handleSubmitVerification = (e) => {\n    e.preventDefault();\n    let next = this.setState({\n      ver1: false,\n      ver2: false,\n      ver3: false,\n      ver4: true,\n      ver5: false,\n    });\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/verify/verificationrequest`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: this.state.user.user.user._id,\n          name: this.state.name,\n          address: this.state.address,\n          phoneNumber: this.state.phoneNumber,\n          documentName: this.state.DocumentFile,\n          documentFile: this.state.doc,\n          Img: this.state.docPass,\n          proofDocument: this.state.docProof,\n        }),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your verification request was successfully made\");\n          //  this.hVer1()\n          return next;\n        } else {\n          message.error(\"Your request was not successful\");\n        }\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          // this.setState({ verifyS: true, VView: false });\n          this.setState({\n            ver1: false,\n            ver2: false,\n            ver3: false,\n            ver4: true,\n            ver5: false,\n          });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/registration/file/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.fileUp),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          this.setState({ verifyS: true, VView: false });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  openForex = () => {\n    this.setState({ forexShow: true });\n  };\n\n  openVer = () => {\n    this.setState({ verShow: !this.state.verShow });\n  };\n  closeVer = () => {\n    this.setState({ verShow: false });\n  };\n  documentFile = (fileType) => {\n    // this.setState({documentFile:fileType})\n    this.setState({ DocumentFile: fileType });\n  };\n  SetAddress = (e) => {\n    this.setState({ address: e });\n  };\n  SetPhone = (e) => {\n    this.setState({ phoneNumber: e });\n  };\n  handleImageVerifyDoc = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({ doc: reader.result });\n      };\n    }\n  };\n  handleImagePassport = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({ docPass: reader.result });\n      };\n    }\n  };\n  handleImageProof = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({ docProof: reader.result });\n      };\n    }\n  };\n  SetName = (e) => {\n    this.setState({ name: e });\n  };\n  hVer1 = () => {\n    this.setState({ ver1: false });\n    this.setState({ ver2: true });\n    this.setState({ ver3: false });\n    this.setState({ ver4: false });\n    this.setState({ ver5: false });\n  };\n\n  hVer2 = () => {\n    this.SetName(this.state.user.user.user.name);\n\n    this.setState({ ver1: false });\n    this.setState({ ver2: false });\n    this.setState({ ver3: false });\n    this.setState({ ver4: false });\n    this.setState({ ver5: true });\n  };\n  hVer5 = (name) => () => {\n    this.setState({ vName: name });\n\n    this.setState({ ver1: false });\n    this.setState({ ver2: false });\n    this.setState({ ver3: true });\n    this.setState({ ver4: false });\n    this.setState({ ver5: false });\n  };\n\n  hVer3 = () => {\n    this.setState({ ver1: false });\n    this.setState({ ver2: false });\n    this.setState({ ver3: false });\n    this.setState({ ver4: true });\n    this.setState({ ver5: false });\n  };\n\n  hVer4 = () => {\n    this.setState({ verShow: false });\n  };\n\n  closeForex = () => {\n    this.setState({ forexShow: false });\n  };\n\n  setAll = () => {\n    this.setState({\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n      findMore: false,\n    });\n  };\n  setAllC = () => {\n    this.setState({\n      all: false,\n      allC: true,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n      findMore: false,\n    });\n  };\n  setAllF = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: true,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n      findMore: false,\n    });\n  };\n  setAllCum = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: true,\n      allS: false,\n      hideIbox: true,\n      findMore: false,\n    });\n  };\n  setFindMore = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      findMore: true,\n\n      hideIbox: true,\n    });\n  };\n  setAllS = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: true,\n      hideIbox: true,\n      findMore: false,\n    });\n  };\n\n  setlevIsh = () => {\n    this.setState({\n      levIsh: !this.state.levIsh,\n    });\n  };\n\n  closeSetlevIsh = () => {\n    if (this.state.liveTrade == false) {\n      message.warning(\"Live trade turned off. Contact admin\");\n    } else\n      this.setState({\n        levIsh: false,\n      });\n  };\n\n  closeAaplP = () => {\n    this.setState({\n      aaplP: false,\n    });\n  };\n\n  closeBitP = () => {\n    this.setState({\n      btcP: false,\n    });\n  };\n\n  closeEthp = () => {\n    this.setState({\n      ethP: false,\n    });\n  };\n\n  closeGasP = () => {\n    this.setState({\n      gasP: false,\n    });\n  };\n\n  closeTslaP = () => {\n    this.setState({\n      tslaP: false,\n    });\n  };\n  web = this.props.web.web;\n\n  getBTC = (str) => {\n    let r = this.state.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getETH = (str) => {\n    let r = this.state.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getLTC = (str) => {\n    let r = this.state.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getEUR = (str) => {\n    let r = this.state.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getGBP = (str) => {\n    let r = this.state.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getJPY = (str) => {\n    let r = this.state.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getAAPL = (str) => {\n    let r = this.state.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getTSLA = (str) => {\n    let r = this.state.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getGOOGL = (str) => {\n    let r = this.state.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getMSFT = (str) => {\n    let r = this.state.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getFB = (str) => {\n    let r = this.state.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getDE = (str) => {\n    let r = this.state.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getHO = (str) => {\n    let r = this.state.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getCO = (str) => {\n    let r = this.state.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getGAS = (str) => {\n    let r = this.state.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getPRO = (str) => {\n    let r = this.state.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getJET = (str) => {\n    let r = this.state.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getRate = (str) => {\n    let a = [\n      this.getBTC(\"btcusd\"),\n      this.getAAPL(\"AAPL\"),\n      this.getMSFT(\"MSFT\"),\n      this.getFB(\"FB\"),\n      this.getLTC(\"LTCUSD\"),\n      this.getETH(\"ETHUSD\"),\n      this.getJET(\"Jet Fuel\"),\n      this.getEUR(\"EURUSD\"),\n      this.getJPY(\"USDJPY\"),\n      this.getGBP(\"USDGBP\"),\n      this.getTSLA(\"TSLA\"),\n      this.getPRO(\"Propane\"),\n      this.getGAS(\"GAS\"),\n      this.getDE(\"DIESEL\"),\n      this.getHO(\"Heating Oil\"),\n      this.getCO(\"Crude Oil\"),\n      this.getGOOGL(\"GOOGL\"),\n    ];\n    if (a.length > 0) {\n      let r = a.find((i) => {\n        if (i) {\n          return i.symbol.toLowerCase().trim() === str.toLowerCase().trim();\n        }\n      });\n      if (r) {\n        if (r.price === undefined) {\n          return r.rate;\n        } else {\n          return r.price;\n        }\n      }\n    }\n  };\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.user, \"userup\");\n      return (\n        <div ref={this.myRef3} style={{ height: \"100vh\" }}>\n          {/* Beggining of navbar */}\n          <Favicon url={this.props.web.web.siteFav} />\n\n          <NavBarWithRouter\n            closeForex={this.closeForex}\n            web={this.web}\n            openForex={this.openForex}\n            handleRC={this.handleRC}\n            handleRIex={this.handleRIex}\n            handleAC={this.handleAC}\n            handleRCum={this.handleRCum}\n            handleRFx={this.handleRFx}\n            closeAaplP={this.closeAaplP}\n            closeBitP={this.closeBitP}\n            closeEthp={this.closeEthp}\n            closeGasP={this.closeGasP}\n            closeTslaP={this.closeTslaP}\n            handleViewUpdate={this.handleViewUpdate}\n            addCurrentItemC={this.state.addCurrentItemC}\n            btcP={this.state.btcP}\n            bitP={this.state.bitP}\n            gasP={this.state.gasP}\n            ethP={this.state.ethP}\n            tslaP={this.state.tslaP}\n            aaplP={this.state.aaplP}\n            activeS={this.state.activeS}\n            addCurrentItemCum={this.state.addCurrentItemCum}\n            addCurrentItemFx={this.state.addCurrentItemFx}\n            addCurrentItemIex={this.state.addCurrentItemIex}\n            site={this.props.site}\n            openForex={this.openForex}\n            user={this.state.user}\n            totalUp={this.state.totalUp}\n            openVer={this.openVer}\n          />\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar\n                user={this.props.user}\n                orders={this.state.orders}\n                history={this.state.history}\n                site={this.props.site}\n                r\n              />\n\n              {/* start route */}\n\n              {this.state.board ? (\n                <>\n                  <div class=\"details\">\n                    <SubSidebar\n                      isTrading={this.state.isTrading}\n                      getRate={this.getRate}\n                      view={this.state.setView}\n                    />\n                  </div>\n                  <div className=\"market\">\n                    <div className=\"trade\">\n                      <div className=\"dash-row\">\n                        <div className=\"chart\">\n                          {/* TradingView Widget BEGIN */}\n                          <div className=\"tradingview-widget-container\">\n                            <div id=\"tradingview_65e38\" />\n                            <div\n                              className=\"tradingview-widget-copyright\"\n                              style={{ height: \"73vh\" }}\n                            >\n                              <a\n                                style={{ display: \"none\" }}\n                                href=\"https://www.tradingview.com/symbols/NASDAQ-AAPL/\"\n                                rel=\"noopener\"\n                                target=\"_blank\"\n                              >\n                                <span className=\"blue-text\">\n                                  {this.state.setView.symbol} Chart\n                                </span>\n                              </a>{\" \"}\n                              <TradingViewWidget\n                                symbol={\n                                  this.state.setView.symbol\n                                    ? this.state.setView.symbol\n                                    : \"BTCUSD\"\n                                }\n                                theme={Themes.DARK}\n                                locale=\"fr\"\n                                autosize\n                                locale=\"en\"\n                                toolbar_bg=\"#f1f3f6\"\n                                style='3'\n                                range='1D'\n                                enable_publishing={false}\n                                hide_side_toolbar={false}\n                                allow_symbol_change={true}\n                              />\n                              <span style={{ display: \"none\" }}>\n                                by TradingView\n                              </span>\n                            </div>\n                          </div>\n                          {/* TradingView Widget END */}\n                        </div>\n                        <div className=\"trade-action\">\n                          <div className=\"trade-amount\">\n                            <div className=\"trade-amount-input\">\n                              <span className=\"dash-alt-text text\">Amount</span>\n                              <span className=\"amount\">\n                                ${\" \"}\n                                <input\n                                  className=\"input\"\n                                  type=\"number\"\n                                  name=\"amount\"\n                                  defaultValue={1}\n                                  min={1}\n                                  max={50000}\n                                  ref={this.textInput}\n                                  onChange={this.handleUpdatePriceBoth}\n                                />\n                              </span>\n                            </div>\n                            <div className=\"dash-row\">\n                              <div\n                                className=\"trade-amount-minus\"\n                                onClick={this.handleUpdatePriceM}\n                              >\n                                <span>-</span>\n                              </div>\n                              <div\n                                className=\"trade-amount-add\"\n                                onClick={this.handleUpdatePrice}\n                              >\n                                <span>+</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div\n                            className=\"trade-amount levIsh\"\n                            onClick={this.setlevIsh}\n                          >\n                            <div\n                              onClick={this.setlevIsh}\n                              className=\"trade-amount-input\"\n                            >\n                              <span\n                                onClick={this.setlevIsh}\n                                className=\"dash-alt-text text\"\n                              >\n                                Leverage\n                              </span>\n                              <span className=\"amount\">X10</span>\n                            </div>\n                          </div>\n\n                          {this.state.levIsh ? (\n                            <div className=\"levC\">\n                              <div className=\"levHeader\">x10</div>\n                              x10 Leverage means that if the asset price changes\n                              by 1% your position performance will increase by\n                              10%\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          <div className=\"cad\">\n                            <span className=\"text\">\n                              {this.state.setView.symbol\n                                ? this.state.setView.symbol\n                                : \"BITUSD\"}{\" \"}\n                              quantity\n                            </span>\n                            <span className=\"amount\">\n                              {this.state.setView.price\n                                ? (\n                                    (this.state.num /\n                                      this.state.setView.price) *\n                                    10\n                                  )\n                                    .toString()\n                                    .slice(0, 8)\n                                : \"\"}\n                            </span>\n                          </div>\n                          {this.state.user.user.user.wallet > 0 &&\n                          this.state.isTrading == false &&\n                          this.state.liveTrade != false ? (\n                            <div\n                              className=\"actions\"\n                              // onClick={this.closeSetlevIsh.bind(this)}\n                            >\n                              <div\n                                className={\n                                  this.state.liveTrade == false\n                                    ? \"buy credit turnG\"\n                                    : \"buy credit\"\n                                }\n                              >\n                                <div\n                                  className=\"dtl\"\n                                  onClick={this.closeSetlevIsh.bind(this)}\n                                >\n                                  <svg\n                                    id=\"Capa_1\"\n                                    enable-background=\"new 0 0 512 512\"\n                                    height=\"25\"\n                                    viewBox=\"0 0 512 512\"\n                                    width=\"25\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                  >\n                                    <g>\n                                      <path d=\"m512 482h-30v-302h-91v302h-30v-182h-90v182h-30v-242h-90v242h-30v-152h-91v152h-30v30h512z\" />\n                                      <path d=\"m512 120v-120h-121v30h69.789l-144.789 143.789-120-120-191.605 190.606 21.21 21.21 170.395-169.394 120 120 166-165v68.789z\" />\n                                    </g>\n                                  </svg>\n\n                                  <span className=\"text\">BUY</span>\n                                </div>\n                              </div>\n                              <div\n                                // className=\"sell\"\n                                className={\n                                  this.state.liveTrade == false\n                                    ? \"sell turnR\"\n                                    : \"sell\"\n                                }\n                                // onClick={this.closeSetlevIsh}\n                              >\n                                <div\n                                  className=\"dtl\"\n                                  onClick={this.closeSetlevIsh}\n                                >\n                                  <svg\n                                    id=\"Capa_1\"\n                                    enable-background=\"new 0 0 512 512\"\n                                    height=\"25\"\n                                    viewBox=\"0 0 512 512\"\n                                    width=\"25\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                  >\n                                    <g>\n                                      <path d=\"m482 330h-91v152h-30v-242h-90v242h-30v-182h-90v182h-30v-302h-91v302h-30v30h511l1-30h-30z\" />\n                                      <path d=\"m482 218.789-166-165-120 120-174.789-173.789-21.211 21.211 196 195 120-120 144.789 143.789h-69.789v30h121v-120h-30z\" />\n                                    </g>\n                                  </svg>\n\n                                  <span className=\"text\">SELL</span>\n                                </div>\n                              </div>\n                              <div>\n                                <h5\n                                  style={{\n                                    color: \"white\",\n                                    whiteSpace: \"nowrap\",\n                                    marginTop: \"2%\",\n                                    marginBottom: \"1px\",\n                                  }}\n                                >\n                                  AutoCopy <br />\n                                  Trader\n                                </h5>\n                                <div className=\"switish1\">\n                                  <label className=\"switch\">\n                                    <input\n                                      type=\"checkbox\"\n                                      defaultChecked={this.state.isTrading}\n                                      onChange={this.handleTrading}\n                                    />\n                                    <span className=\"slider round\" />\n                                  </label>{\" \"}\n                                </div>\n                              </div>\n                            </div>\n                          ) : (\n                            <div\n                              className=\"actions1 credit\"\n                              onClick={this.closeSetlevIsh}\n                            >\n                              <div\n                                className={\n                                  this.state.isTrading\n                                    ? \"buy credit turnG\"\n                                    : \"buy credit\"\n                                }\n                                onClick={this.handleMessages.bind(this)}\n                              >\n                                <div className=\"dtl\">\n                                  <svg\n                                    id=\"Capa_1\"\n                                    enable-background=\"new 0 0 512 512\"\n                                    height=\"25\"\n                                    viewBox=\"0 0 512 512\"\n                                    width=\"25\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                  >\n                                    <g>\n                                      <path d=\"m512 482h-30v-302h-91v302h-30v-182h-90v182h-30v-242h-90v242h-30v-152h-91v152h-30v30h512z\" />\n                                      <path d=\"m512 120v-120h-121v30h69.789l-144.789 143.789-120-120-191.605 190.606 21.21 21.21 170.395-169.394 120 120 166-165v68.789z\" />\n                                    </g>\n                                  </svg>\n\n                                  <span className=\"text\">BUY</span>\n                                </div>\n                              </div>\n                              <div\n                                className={\n                                  this.state.isTrading ? \"sell turnR\" : \"sell\"\n                                }\n                                onClick={this.handleMessages.bind(this)}\n                              >\n                                <div className=\"dtl\">\n                                  <svg\n                                    id=\"Capa_1\"\n                                    enable-background=\"new 0 0 512 512\"\n                                    height=\"25\"\n                                    viewBox=\"0 0 512 512\"\n                                    width=\"25\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                  >\n                                    <g>\n                                      <path d=\"m482 330h-91v152h-30v-242h-90v242h-30v-182h-90v182h-30v-302h-91v302h-30v30h511l1-30h-30z\" />\n                                      <path d=\"m482 218.789-166-165-120 120-174.789-173.789-21.211 21.211 196 195 120-120 144.789 143.789h-69.789v30h121v-120h-30z\" />\n                                    </g>\n                                  </svg>\n\n                                  <span className=\"text\">SELL</span>\n                                </div>\n                              </div>\n\n                              {this.props.user.user.user ? (\n                                <>\n                                  <h5\n                                    style={{\n                                      color: \"white\",\n                                      whiteSpace: \"nowrap\",\n                                      marginTop: \"2%\",\n                                      marginBottom: \"1px\",\n                                    }}\n                                  >\n                                    AutoCopy <br />\n                                    Trader\n                                  </h5>\n                                  <div className=\"switish1\">\n                                    <label className=\"switch\">\n                                      <input\n                                        type=\"checkbox\"\n                                        defaultChecked={this.state.isTrading}\n                                        onChange={this.handleTrading}\n                                      />\n                                      <span className=\"slider round\" />\n                                    </label>{\" \"}\n                                  </div>\n                                </>\n                              ) : null}\n                            </div>\n                          )}\n                        </div>\n                        <div></div>\n                      </div>\n                    </div>\n                    <Orders\n                      orders={this.state.orders}\n                      orderIsh={this.state.orderIsh}\n                      delOrder={this.delOrder}\n                      closeOrder={this.closeOrder}\n                      closeOrder1={this.closeOrder1}\n                      fxPrice={this.state.fxPrice}\n                      iex={this.state.iex}\n                      crypto={this.state.crypto}\n                      cum={this.state.cum}\n                      buysell={this.state.buysell}\n                    />\n                  </div>\n                </>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n\n          {this.state.verShow ? (\n            <section\n              className=\"verification-modal-box\"\n              style={{ display: \"block\" }}\n            >\n              <div className=\"verification-modal\">\n                {this.state.ver1 ? (\n                  <div\n                    className=\"container\"\n                    id=\"container1\"\n                    style={{ padding: \"50px 0\", background: \"#141621\" }}\n                  >\n                    <center>\n                      <h4>IDENTITY VERIFICATION REQUIRED</h4>\n                      <img\n                        style={{\n                          width: 150,\n                          display: \"block\",\n                          margin: \"0 auto\",\n                        }}\n                        src={card}\n                      />\n                      <button\n                        className=\"dash-btn\"\n                        style={{ borderRadius: 0, color: \"white\" }}\n                        onClick={this.hVer1}\n                      >\n                        START YOUR VERIFICATION\n                      </button>\n                      <small\n                        style={{ display: \"block\", marginTop: 15 }}\n                        className=\"text-fade\"\n                      >\n                        All information will be stored safely and not\n                        redistribuate. Due to the GPRD, all information can be\n                        deleted on your needs.\n                      </small>\n                    </center>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {this.state.ver2 ? (\n                  <>\n                    <div\n                      className=\"container\"\n                      id=\"container2\"\n                      style={{ background: \"#141621\", display: \"block\" }}\n                    >\n                      <center>\n                        <h4>STEP 1: IDENTITY</h4>\n                        <form>\n                          <div className=\"form-box\">\n                            <label>FullName</label>\n                            <input\n                              type=\"text\"\n                              required\n                              name=\"text\"\n                              placeholder={this.state.user.user.user.name}\n                              onChange={(e) => this.SetName(e.target.value)}\n                            />\n                          </div>\n                          <div className=\"form-box\">\n                            <label>ADDRESS</label>\n                            <input\n                              required\n                              type=\"text\"\n                              name=\"text\"\n                              onChange={(e) => this.SetAddress(e.target.value)}\n                            />\n                          </div>\n                          <div className=\"form-box\">\n                            <label>PHONE NUMBER</label>\n                            <input\n                              required\n                              type=\"number\"\n                              name=\"text\"\n                              onChange={(e) => this.SetPhone(e.target.value)}\n                            />\n                          </div>\n                          <div style={{ textAlign: \"right\" }}>\n                            <button\n                              href=\"#\"\n                              style={{ color: \"white\" }}\n                              className=\"dash-btn\"\n                              onClick={\n                                this.state.phoneNumber &&\n                                this.state.address &&\n                                this.state.name\n                                  ? this.hVer2\n                                  : \"\"\n                              }\n                            >\n                              Next\n                            </button>\n                          </div>\n                        </form>\n                      </center>\n                    </div>\n                  </>\n                ) : (\n                  \"\"\n                )}\n                {this.state.ver5 ? (\n                  <div\n                    style={{ display: \"block\" }}\n                    className=\"container\"\n                    id=\"container3\"\n                    style={{ background: \"#141621\", display: \"block\" }}\n                  >\n                    <center>\n                      <h4>SELECT YOUR DOCUMENT</h4>\n                      <div onClick={(e) => this.documentFile(\"Passport\")}>\n                        <div\n                          className=\"option\"\n                          onClick={this.hVer5(\"PASSPORT\")}\n                        >\n                          Passport\n                        </div>\n                      </div>\n\n                      <div\n                        onClick={(e) => this.documentFile(\"Driving license\")}\n                      >\n                        <div\n                          className=\"option\"\n                          onClick={this.hVer5(\"DRIVING LICENCE\")}\n                        >\n                          Driving license\n                        </div>\n                      </div>\n\n                      <div onClick={(e) => this.documentFile(\"ID Card\")}>\n                        <div className=\"option\" onClick={this.hVer5(\"ID CARD\")}>\n                          ID Card\n                        </div>\n                      </div>\n                    </center>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {this.state.ver3 ? (\n                  <div\n                    style={{ display: \"block\" }}\n                    className=\"container\"\n                    id=\"container4\"\n                    style={{ background: \"#141621\", display: \"block\" }}\n                  >\n                    <center>\n                      <h4>STEP 2: UPLOAD YOUR {this.state.vName}</h4>\n                      <form>\n                        <div className=\"form-box\">\n                          <label>{this.state.vName} document</label>\n                          <input\n                            required\n                            type=\"file\"\n                            onChange={this.handleImageVerifyDoc}\n                          />\n                        </div>\n                        <h4>AND THIS DOCUMENTS</h4>\n                        <div className=\"form-box\">\n                          <label>Proof of address(e.g. Utility Bill)</label>\n                          <input\n                            required\n                            type=\"file\"\n                            onChange={this.handleImageProof}\n                          />\n                        </div>\n                        <div className=\"form-box\">\n                          <label>Image Passport Photograph</label>\n                          <input\n                            required\n                            type=\"file\"\n                            onChange={this.handleImagePassport}\n                          />\n                        </div>\n                        <div style={{ textAlign: \"right\" }}>\n                          <button\n                            style={{ color: \"white\" }}\n                            className=\"dash-btn\"\n                            type=\"button\"\n                            onClick={this.handleSubmitVerification}\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </center>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {this.state.ver4 ? (\n                  <div\n                    style={{ display: \"block\" }}\n                    className=\"container\"\n                    id=\"container5\"\n                    style={{ background: \"#141621\", display: \"block\" }}\n                  >\n                    <center>\n                      <h4>YOUR IDENTITY IS IN VERIFICATION</h4>\n                      <img\n                        style={{\n                          width: 150,\n                          display: \"block\",\n                          margin: \"0 auto\",\n                        }}\n                        src={watch}\n                      />\n                      <small\n                        style={{ display: \"block\", marginTop: 15 }}\n                        className=\"text-fade\"\n                      >\n                        Your identity is in verification, it can take up to 24h.\n                        You will receive an email when the verification is\n                        completed.\n                      </small>\n                      <button\n                        className=\"dash-btn\"\n                        style={{ borderRadius: 0 }}\n                        href=\"#\"\n                        style={{ color: \"white\" }}\n                        onClick={this.hVer4}\n                      >\n                        BACK TO THE APP\n                      </button>\n                    </center>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <span className=\"close\" onClick={this.closeVer}>\n                  <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                    <title>cross</title>\n                    <path\n                      className=\"path1\"\n                      d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                    />\n                  </svg>\n                </span>\n              </div>\n            </section>\n          ) : (\n            \"\"\n          )}\n\n          <section className=\"buy-option\">\n            <form\n              onMouseEnter={() => {\n                this.setState({\n                  data: {\n                    ...this.state.data,\n                    ...{ tag: \"buy\" },\n                    ...{ stockName: this.state.setView.symbol },\n                    ...{\n                      stockAmount: this.state.num / this.state.setView.price,\n                      ...{\n                        buyW: this.getRate(\n                          this.state.setView.symbol\n                            ? this.state.setView.symbol\n                            : \"\"\n                        ),\n                      },\n                      ...{ unit: this.state.unitP },\n                    },\n                  },\n                });\n              }}\n              onSubmit={this.handleSubmitBuy}\n            >\n              <h6>CONFIRMATION</h6>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Unit price</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>{this.state.unitP} $</span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Investment</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    {this.state.setView.symbol}\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>{this.state.setView.symbol} Quantity</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Leverage</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>1:10</span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Margin Required</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    {this.state.setView.symbol}\n                  </span>\n                </div>\n              </div>\n              <div\n                className=\"dash-row dash-row-centralized\"\n                style={{ marginBottom: \"-26px\" }}\n              >\n                <div className=\"split\">\n                  <span>Take Profit</span>\n                </div>\n                <div className=\"split moved\">\n                  <div className=\"dash-row\">\n                    <div className=\"switish\">\n                      <label className=\"switch\">\n                        <input type=\"checkbox\" onClick={this.handSwitch1} />\n                        <span className=\"slider round\" />\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"profit\"\n                        min={1}\n                        max={5000000000}\n                        placeholder=\"+ 100\"\n                        disabled={this.state.disA1}\n                        onChange={this.handleSubmitBuyP}\n                      />\n                    </div>\n                    <div>\n                      <span> </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"dash-row dash-row-centralized\"\n                style={{ marginTop: \"15%\" }}\n              >\n                <div className=\"split\">\n                  <span>Stop Loss</span>\n                </div>\n                <div className=\"split moved\">\n                  <div className=\"dash-row\">\n                    <div className=\"switish\">\n                      <label className=\"switch\">\n                        <input type=\"checkbox\" onClick={this.handSwitch2} />\n                        <span className=\"slider round\" />\n                      </label>{\" \"}\n                      <input\n                        type=\"number\"\n                        name=\"loss\"\n                        max={0}\n                        placeholder=\"-100\"\n                        disabled={this.state.disA2}\n                        onChange={this.handleSubmitBuyL}\n                      />\n                    </div>\n                    <div>\n                      <span> </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Commission</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    2.00% ={\" \"}\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    {this.state.setView.symbol}\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized highlighted\">\n                <div className=\"split\">\n                  <span>TRADE</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    USD\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row\">\n                <button className=\"close1\">Confirm buying</button>\n              </div>\n              <span className=\"close\">\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>\n            </form>\n          </section>\n\n          <section className=\"sell-option\">\n            <form\n              onMouseEnter={() => {\n                this.setState({\n                  data: {\n                    ...this.state.data,\n                    ...{ tag: \"sell\" },\n                    ...{ stockName: this.state.setView.symbol },\n                    ...{\n                      stockAmount: this.state.num / this.state.setView.price,\n                      ...{\n                        buyW: this.getRate(\n                          this.state.setView.symbol\n                            ? this.state.setView.symbol\n                            : \"\"\n                        ),\n                      },\n                      ...{ unit: this.state.unitP },\n                    },\n                  },\n                });\n              }}\n              onSubmit={this.handleSubmitBuy}\n            >\n              <h6>CONFIRMATION</h6>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Unit price</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>{this.state.unitP} $</span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Investment</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    {this.state.setView.symbol}\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>{this.state.setView.symbol} Quantity</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Leverage</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>1:10</span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Margin Required</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    {this.state.setView.symbol}\n                  </span>\n                </div>\n              </div>\n              <div\n                className=\"dash-row dash-row-centralized\"\n                style={{ marginBottom: \"-26px\" }}\n              >\n                <div className=\"split\">\n                  <span>Take Profit</span>\n                </div>\n                <div className=\"split moved\">\n                  <div className=\"dash-row\">\n                    <div className=\"switish\">\n                      <label className=\"switch\">\n                        <input type=\"checkbox\" onClick={this.handSwitch1} />\n                        <span className=\"slider round\" />\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"profit\"\n                        placeholder=\"+ 100\"\n                        disabled={this.state.disA1}\n                        onChange={this.handleSubmitBuyP}\n                      />\n                    </div>\n                    <div>\n                      <span> </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"dash-row dash-row-centralized\"\n                style={{ marginTop: \"15%\" }}\n              >\n                <div className=\"split\">\n                  <span>Stop Loss</span>\n                </div>\n                <div className=\"split moved\">\n                  <div className=\"dash-row\">\n                    <div className=\"switish\">\n                      <label className=\"switch\">\n                        <input type=\"checkbox\" onClick={this.handSwitch2} />\n                        <span className=\"slider round\" />\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"loss\"\n                        placeholder=\"- 100\"\n                        disabled={this.state.disA2}\n                        onChange={this.handleSubmitBuyL}\n                      />\n                    </div>\n                    <div>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized\">\n                <div className=\"split\">\n                  <span>Commission</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    2.00% ={\" \"}\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    {this.state.setView.symbol}\n                  </span>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized highlighted\">\n                <div className=\"split\">\n                  <span>TRADE</span>\n                </div>\n                <div className=\"split moved\">\n                  <span>\n                    {this.state.setView.price\n                      ? this.state.setView.price.toString().slice(0, 8)\n                      : \"\"}{\" \"}\n                    USD\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"dash-row\">\n                <button className=\"close1\">Confirm selling</button>\n              </div>\n              <span className=\"close\">\n                {\" \"}\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>\n            </form>\n          </section>\n\n          <Account user={this.state.user} />\n\n          <UserProfile user={this.state.user} />\n          {this.state.VView ? (\n            <section className=\"view-modal\">\n              <form onSubmit={this.handleSubmitFile}>\n                <p>your ID name</p>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={(e) => {\n                    this.setState({\n                      fileUp: {\n                        ...this.state.fileUp,\n                        ...{ name: e.target.value },\n                      },\n                    });\n                  }}\n                  className=\"VViewInput\"\n                />\n                <p>your ID number</p>\n\n                <input\n                  type=\"number\"\n                  name=\"number\"\n                  onChange={(e) => {\n                    this.setState({\n                      fileUp: {\n                        ...this.state.fileUp,\n                        ...{ number: e.target.value },\n                      },\n                    });\n                  }}\n                  className=\"VViewInput\"\n                />\n\n                <p>Upload your ID</p>\n\n                <input\n                  className=\"VViewInput\"\n                  style={{ paddingTop: \"3px\", paddingLeft: \"2px\" }}\n                  type=\"file\"\n                  name=\"img\"\n                  placeholder=\"Choose File*\"\n                  aria-describedby=\"fileHelp\"\n                  onChange={this.handleImageChange}\n                />\n\n                <button className=\"VViewBtn\">save</button>\n              </form>\n            </section>\n          ) : (\n            \"\"\n          )}\n          {this.state.forexShow ? (\n            <section className=\"forex-box\" style={{ display: \"block\" }}>\n              <div className=\"dash-row\">\n                <div className=\"first\">\n                  <a\n                    className={this.state.all ? \"active\" : \"\"}\n                    href=\"#\"\n                    onClick={this.setAll}\n                  >\n                    All\n                  </a>\n                  <a\n                    className={this.state.allC ? \"active\" : \"\"}\n                    href=\"#\"\n                    onClick={this.setAllC}\n                  >\n                    Crypto\n                  </a>\n                  <a\n                    className={this.state.allF ? \"active\" : \"\"}\n                    href=\"#\"\n                    onClick={this.setAllF}\n                  >\n                    Forex\n                  </a>\n                  <a\n                    className={this.state.allS ? \"active\" : \"\"}\n                    href=\"#\"\n                    onClick={this.setAllS}\n                  >\n                    Stocks\n                  </a>\n\n                  <a\n                    className={this.state.allCum ? \"active\" : \"\"}\n                    href=\"#\"\n                    onClick={this.setAllCum}\n                  >\n                    Commodities\n                  </a>\n\n                  <a\n                    className={this.state.findMore ? \"active fMore\" : \"fMore\"}\n                    href=\"#\"\n                    onClick={this.setFindMore}\n                  >\n                    Find More\n                  </a>\n                </div>\n                <div className=\"second\">\n                  {this.state.all ? (\n                    <div className=\"all\">\n                      <div className=\"header\">\n                        <form>\n                          <input\n                            type=\"search\"\n                            name=\"search\"\n                            placeholder=\"Search Asset\"\n                            onChange={this.handleFilter}\n                          />\n                        </form>\n                      </div>\n                      {/* //here oo */}\n\n                      {this.state.hideIbox ? (\n                        \"\"\n                      ) : (\n                        <div\n                          className=\"instrument-box\"\n                          style={{ display: \"block\" }}\n                          onMouseLeave={() => this.setState({ hideIbox: true })}\n                        >\n                          <img\n                            className=\"header-img\"\n                            src=\"images/profile.jpg\"\n                          />\n                          <div className=\"dtls\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  src={\n                                    this.state.currentItem !== undefined\n                                      ? this.state.currentItem\n                                        ? this.state.currentItem.image\n                                        : \"\"\n                                      : \"hellp\"\n                                  }\n                                />\n                              </div>\n                              <div>\n                                <span className=\"instrument\">\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.symbol\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"dash-row split\">\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Leverage</span>\n                                <span className=\"main\">x10</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Commission</span>\n                                <span className=\"main\">0.02 USD</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Financing Rate Long</span>\n                                <span className=\"main\">\n                                  {\" \"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.current_price\n                                      : \"\"\n                                    : \"hellp\"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.rate\n                                        ? this.state.currentItem.rate\n                                        : \"\"\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">\n                                  Financing Rate Short\n                                </span>\n                                <span className=\"main\">-0.07</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Asset</th>\n                            <th>Price</th>\n                            <th>Leverage</th>\n                            <th>Today Change</th>\n                          </tr>\n                          {this.state.fillArr.length > 0\n                            ? this.state.fillArr.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img src={item.image} />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    ${\" \"}\n                                    {item.current_price\n                                      ? item.current_price\n                                      : item.rate}{\" \"}\n                                  </td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : this.state.crypto.length > 0\n                            ? this.state.crypto.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img src={item.image} />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n\n                          {this.state.fxPrice.length > 0\n                            ? this.state.fxPrice.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAFx(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.rate}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n\n                          {this.state.iex.length > 0\n                            ? this.state.iex.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAIex(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://storage.googleapis.com/iex/api/logos/${item.symbol}.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n\n                          {this.state.cum.length > 0\n                            ? this.state.cum.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleACum(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.state.allC ? (\n                    <div className=\"all\">\n                      <div className=\"header\">\n                        <form>\n                          <input\n                            type=\"search\"\n                            name=\"search\"\n                            placeholder=\"Search Asset\"\n                            onChange={this.handleFilter}\n                          />\n                        </form>\n                      </div>\n                      {/* //here oo */}\n\n                      {this.state.hideIbox ? (\n                        \"\"\n                      ) : (\n                        <div\n                          className=\"instrument-box\"\n                          style={{ display: \"block\" }}\n                          onMouseLeave={() => this.setState({ hideIbox: true })}\n                        >\n                          <img\n                            className=\"header-img\"\n                            src=\"images/profile.jpg\"\n                          />\n                          <div className=\"dtls\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  src={\n                                    this.state.currentItem !== undefined\n                                      ? this.state.currentItem\n                                        ? this.state.currentItem.image\n                                        : \"\"\n                                      : \"hellp\"\n                                  }\n                                />\n                              </div>\n                              <div>\n                                <span className=\"instrument\">\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.symbol\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"dash-row split\">\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Leverage</span>\n                                <span className=\"main\">x10</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Commission</span>\n                                <span className=\"main\">0.02 USD</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Financing Rate Long</span>\n                                <span className=\"main\">\n                                  {\" \"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.current_price\n                                      : \"\"\n                                    : \"hellp\"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.rate\n                                        ? this.state.currentItem.rate\n                                        : \"\"\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">\n                                  Financing Rate Short\n                                </span>\n                                <span className=\"main\">-0.07</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Asset</th>\n                            <th>Price</th>\n                            <th>Leverage</th>\n                            <th>Today Change</th>\n                          </tr>\n                          {this.state.fillArr.length > 0\n                            ? this.state.fillArr.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://cryptologos.cc/logos/${\n                                            item.symbol === \"ETHUSD\"\n                                              ? \"ethereum\"\n                                              : item.symbol === \"BTCUSD\"\n                                              ? \"bitcoin\"\n                                              : item.symbol === \"LTCUSD\"\n                                              ? \"litecoin\"\n                                              : \"\"\n                                          }-${item.symbol\n                                            .slice(0, 3)\n                                            .toLowerCase()}-logo.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    ${\" \"}\n                                    {item.current_price\n                                      ? item.current_price\n                                      : item.rate}{\" \"}\n                                  </td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : this.state.crypto.length > 0\n                            ? this.state.crypto.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img src={item.image} />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.state.allF ? (\n                    <div className=\"all\">\n                      <div className=\"header\">\n                        <form>\n                          <input\n                            type=\"search\"\n                            name=\"search\"\n                            placeholder=\"Search Asset\"\n                            onChange={this.handleFilter}\n                          />\n                        </form>\n                      </div>\n                      {/* //here oo */}\n\n                      {this.state.hideIbox ? (\n                        \"\"\n                      ) : (\n                        <div\n                          className=\"instrument-box\"\n                          style={{ display: \"block\" }}\n                          onMouseLeave={() => this.setState({ hideIbox: true })}\n                        >\n                          <img\n                            className=\"header-img\"\n                            src=\"images/profile.jpg\"\n                          />\n                          <div className=\"dtls\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                                />\n                              </div>\n                              <div>\n                                <span className=\"instrument\">\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.symbol\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"dash-row split\">\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Leverage</span>\n                                <span className=\"main\">x10</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Commission</span>\n                                <span className=\"main\">0.02 USD</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Financing Rate Long</span>\n                                <span className=\"main\">\n                                  {\" \"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.current_price\n                                      : \"\"\n                                    : \"hellp\"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.rate\n                                        ? this.state.currentItem.rate\n                                        : \"\"\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">\n                                  Financing Rate Short\n                                </span>\n                                <span className=\"main\">-0.07</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Asset</th>\n                            <th>Price</th>\n                            <th>Leverage</th>\n                            <th>Today Change</th>\n                          </tr>\n                          {this.state.fillArr.length > 0\n                            ? this.state.fillArr.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://cryptologos.cc/logos/${\n                                            item.symbol === \"ETHUSD\"\n                                              ? \"ethereum\"\n                                              : item.symbol === \"BTCUSD\"\n                                              ? \"bitcoin\"\n                                              : item.symbol === \"LTCUSD\"\n                                              ? \"litecoin\"\n                                              : \"\"\n                                          }-${item.symbol\n                                            .slice(0, 3)\n                                            .toLowerCase()}-logo.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    ${\" \"}\n                                    {item.current_price\n                                      ? item.current_price\n                                      : item.rate}{\" \"}\n                                  </td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : this.state.fxPrice.length > 0\n                            ? this.state.fxPrice.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAFx(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.rate}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.state.allS ? (\n                    <div className=\"all\">\n                      <div className=\"header\">\n                        <form>\n                          <input\n                            type=\"search\"\n                            name=\"search\"\n                            placeholder=\"Search Asset\"\n                            onChange={this.handleFilter}\n                          />\n                        </form>\n                      </div>\n                      {/* //here oo */}\n\n                      {this.state.hideIbox ? (\n                        \"\"\n                      ) : (\n                        <div\n                          className=\"instrument-box\"\n                          style={{ display: \"block\" }}\n                          onMouseLeave={() => this.setState({ hideIbox: true })}\n                        >\n                          <img\n                            className=\"header-img\"\n                            src=\"images/profile.jpg\"\n                          />\n                          <div className=\"dtls\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  src={\n                                    this.state.currentItem !== undefined\n                                      ? this.state.currentItem\n                                        ? this.state.currentItem.image\n                                        : \"\"\n                                      : \"hellp\"\n                                  }\n                                />\n                              </div>\n                              <div>\n                                <span className=\"instrument\">\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.symbol\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"dash-row split\">\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Leverage</span>\n                                <span className=\"main\">x10</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Commission</span>\n                                <span className=\"main\">0.02 USD</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Financing Rate Long</span>\n                                <span className=\"main\">\n                                  {\" \"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.current_price\n                                      : \"\"\n                                    : \"hellp\"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.rate\n                                        ? this.state.currentItem.rate\n                                        : \"\"\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">\n                                  Financing Rate Short\n                                </span>\n                                <span className=\"main\">-0.07</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Asset</th>\n                            <th>Price</th>\n                            <th>Leverage</th>\n                            <th>Today Change</th>\n                          </tr>\n                          {this.state.fillArr.length > 0\n                            ? this.state.fillArr.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://cryptologos.cc/logos/${\n                                            item.symbol === \"ETHUSD\"\n                                              ? \"ethereum\"\n                                              : item.symbol === \"BTCUSD\"\n                                              ? \"bitcoin\"\n                                              : item.symbol === \"LTCUSD\"\n                                              ? \"litecoin\"\n                                              : \"\"\n                                          }-${item.symbol\n                                            .slice(0, 3)\n                                            .toLowerCase()}-logo.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    ${\" \"}\n                                    {item.current_price\n                                      ? item.current_price\n                                      : item.rate}{\" \"}\n                                  </td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : this.state.iex.length > 0\n                            ? this.state.iex.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAIex(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://storage.googleapis.com/iex/api/logos/${item.symbol}.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.state.allCum ? (\n                    <div className=\"all\">\n                      <div className=\"header\">\n                        <form>\n                          <input\n                            type=\"search\"\n                            name=\"search\"\n                            placeholder=\"Search Asset\"\n                            onChange={this.handleFilter}\n                          />\n                        </form>\n                      </div>\n                      {/* //here oo */}\n\n                      {this.state.hideIbox ? (\n                        \"\"\n                      ) : (\n                        <div\n                          className=\"instrument-box\"\n                          style={{ display: \"block\" }}\n                          onMouseLeave={() => this.setState({ hideIbox: true })}\n                        >\n                          <img\n                            className=\"header-img\"\n                            src=\"images/profile.jpg\"\n                          />\n                          <div className=\"dtls\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  src={\n                                    this.state.currentItem !== undefined\n                                      ? this.state.currentItem\n                                        ? this.state.currentItem.image\n                                        : \"\"\n                                      : \"hellp\"\n                                  }\n                                />\n                              </div>\n                              <div>\n                                <span className=\"instrument\">\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.symbol\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"dash-row split\">\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Leverage</span>\n                                <span className=\"main\">x10</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Commission</span>\n                                <span className=\"main\">0.02 USD</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Financing Rate Long</span>\n                                <span className=\"main\">\n                                  {\" \"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.current_price\n                                      : \"\"\n                                    : \"hellp\"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.rate\n                                        ? this.state.currentItem.rate\n                                        : \"\"\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">\n                                  Financing Rate Short\n                                </span>\n                                <span className=\"main\">-0.07</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Asset</th>\n                            <th>Price</th>\n                            <th>Leverage</th>\n                            <th>Today Change</th>\n                          </tr>\n                          {this.state.fillArr.length > 0\n                            ? this.state.fillArr.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://cryptologos.cc/logos/${\n                                            item.symbol === \"ETHUSD\"\n                                              ? \"ethereum\"\n                                              : item.symbol === \"BTCUSD\"\n                                              ? \"bitcoin\"\n                                              : item.symbol === \"LTCUSD\"\n                                              ? \"litecoin\"\n                                              : \"\"\n                                          }-${item.symbol\n                                            .slice(0, 3)\n                                            .toLowerCase()}-logo.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    ${\" \"}\n                                    {item.current_price\n                                      ? item.current_price\n                                      : item.rate}{\" \"}\n                                  </td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : this.state.cum.length > 0\n                            ? this.state.cum.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleACum(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.state.findMore ? (\n                    <div className=\"all\">\n                      <div className=\"header\">\n                        <form>\n                          <input\n                            type=\"search\"\n                            name=\"search\"\n                            placeholder=\"Search Asset\"\n                            onChange={this.handleFilter}\n                          />\n                        </form>\n                      </div>\n                      {/* //here oo */}\n\n                      {this.state.hideIbox ? (\n                        \"\"\n                      ) : (\n                        <div\n                          className=\"instrument-box\"\n                          style={{ display: \"block\" }}\n                          onMouseLeave={() => this.setState({ hideIbox: true })}\n                        >\n                          <img\n                            className=\"header-img\"\n                            src=\"images/profile.jpg\"\n                          />\n                          <div className=\"dtls\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  src={\n                                    this.state.currentItem !== undefined\n                                      ? this.state.currentItem\n                                        ? this.state.currentItem.image\n                                        : \"\"\n                                      : \"hellp\"\n                                  }\n                                />\n                              </div>\n                              <div>\n                                <span className=\"instrument\">\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.symbol\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"dash-row split\">\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Leverage</span>\n                                <span className=\"main\">x10</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Commission</span>\n                                <span className=\"main\">0.02 USD</span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">Financing Rate Long</span>\n                                <span className=\"main\">\n                                  {\" \"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.current_price\n                                      : \"\"\n                                    : \"hellp\"}\n                                  {this.state.currentItem !== undefined\n                                    ? this.state.currentItem\n                                      ? this.state.currentItem.rate\n                                        ? this.state.currentItem.rate\n                                        : \"\"\n                                      : \"\"\n                                    : \"hellp\"}\n                                </span>\n                              </div>\n                              <div className=\"split-50\">\n                                <span className=\"sub\">\n                                  Financing Rate Short\n                                </span>\n                                <span className=\"main\">-0.07</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Asset</th>\n                            <th>Price</th>\n                            <th>Leverage</th>\n                            <th>Today Change</th>\n                          </tr>\n                          {this.state.fillArr.length > 0\n                            ? this.state.fillArr.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleAC(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://cryptologos.cc/logos/${\n                                            item.symbol === \"ETHUSD\"\n                                              ? \"ethereum\"\n                                              : item.symbol === \"BTCUSD\"\n                                              ? \"bitcoin\"\n                                              : item.symbol === \"LTCUSD\"\n                                              ? \"litecoin\"\n                                              : \"\"\n                                          }-${item.symbol\n                                            .slice(0, 3)\n                                            .toLowerCase()}-logo.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    ${\" \"}\n                                    {item.current_price\n                                      ? item.current_price\n                                      : item.rate}{\" \"}\n                                  </td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : this.state.cum.length > 0\n                            ? this.state.cum.map((item, index) => (\n                                <tr\n                                  onMouseMove={this.handleC(item)}\n                                  onClick={this.handleACum(item)}\n                                  className=\"childIsh\"\n                                >\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized\">\n                                      <div>\n                                        <img\n                                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                                        />\n                                      </div>\n                                      <div>\n                                        <span className=\"instrument\">\n                                          {item.symbol}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </td>\n                                  <td>$ {item.current_price}</td>\n                                  <td>x10</td>\n                                  <td>\n                                    <div className=\"dash-row dash-row-centralized space-around\">\n                                      <div>\n                                        <span>-4.18%</span>\n                                      </div>\n                                      <div>\n                                        <i className=\"jam jam-star-f\" />\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                              ))\n                            : \"\"}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n              <span className=\"close\" onClick={this.closeForex}>\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>\n            </section>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Report.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  \n  \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n     \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <h3 className=\"font-weight-normal\">\n                      Choose the report you want generate\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"report-card dash-row\">\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">Payments</h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">Users</h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">Withdraws</h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">Fees</h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">Trades</h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">\n                            Login history\n                          </h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">Balances</h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">\n                            Subscriptions\n                          </h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">\n                            Watching list\n                          </h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"report-card-list\">\n                        <center>\n                          <h3 className=\"dtl font-weight-normal\">\n                            Top exchanges\n                          </h3>\n                        </center>\n                        <div className=\"format\">\n                          <a className=\"csv\" href=\"#\">\n                            <span className=\"mdi mdi-file-excel-box\" /> CSV\n                          </a>\n                          <a className=\"pdf\" href=\"#\">\n                            <span className=\"mdi mdi-file-pdf-box\" /> PDF\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Report;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Admin.js",["429","430","431","432","433","434","435","436","437"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n\n      allUsers: [],\n      allVerify: [],\n      allDeposit: [],\n      allWithdraw: [],\n      allTrades: [],\n      userId: {},\n      displayC: false,\n      curDeposit: [],\n      card: true,\n      bal: false,\n      payments: false,\n      secu: false,\n      with: false,\n      orderT: false,\n      updateAmount: \"\",\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allUser`);\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allUsers: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allWithdraw`);\n      let data = await response.json();\n\n      console.log(data);\n      this.setState({\n        allWithdraw: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allDeposit`);\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allDeposit: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allTrade`);\n\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allTrades: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allVerify`);\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allVerify: data,\n      });\n    })();\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n\n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav \n      // this.title.innerHTML = this.web.siteTitle \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n\n\n                >\n\n                  <AdminSidebar />\n                 \n                  <div className=\"admin-content\">\n                    <div className=\"dash-row\">\n                      <div className=\"users card\">\n                        <div className=\"heading\">\n                          <span className=\"text-uppercase font-size-11\">\n                            Users\n                          </span>\n                        </div>\n                        <h2 className=\"number\">{this.state.allUsers.length}</h2>\n                        <div className=\"hr\" />\n                      </div>\n                      <div className=\"sessions card\">\n                        <div className=\"heading\">\n                          <span className=\"text-uppercase font-size-11\">\n                            Sessions\n                          </span>\n                        </div>\n                        <h2 className=\"number\">654</h2>\n                        <div className=\"hr\" />\n                      </div>\n                      <div className=\"actions-to-manage card\">\n                        <div className=\"heading\">\n                          <span className=\"text-uppercase font-size-14 font-weight-bold\">\n                            Actions to manage\n                          </span>\n                        </div>\n                        <div className=\"hr\" />\n                      </div>\n                      <div className=\"cron-status card\">\n                        <div className=\"heading\">\n                          <span className=\"text-uppercase font-size-14 font-weight-bold\">\n                            Cron status\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"users-by-country card\">\n                        <div className=\"heading\">\n                          <span className=\"text-uppercase font-size-14 font-weight-bold\">\n                            Users by country\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Admin;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/MasterCard.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport { Select, message } from \"antd\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n\nconst MasterCard=(props)=>{\n  const [orders, setOrders] = useState();\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  }; \n    const myRef3 = props.user.user ? React.createRef() : \"\";\n    const textInput = props.user.user ? React.createRef() : \"\";\n \n  const manager=false\n  const admin=true\n  const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n// const  fav = document.getElementById(\"favicon\");\n//  const title = document.getElementById(\"title\");\n  const[paymentSuccessText ,setpaymentSuccessText]=useState(\"\")\n  const[paymentRefPattern ,setpaymentRefPattern]=useState(\"\")\n  const[paymentNeedsApproval ,setpaymentNeedsApproval]=useState(null)\n  const[masterCardStatus,setmasterCardStatus]=useState(null)\n  const[bitCoinStatus,setbitCoinStatus]=useState(null)\n  const[btcHeaderText,setbtcHeaderText]=useState(\"\")\n  const[btcAddress,setbtcAddress]=useState(\"\")\n  const[buyBTCLink,setbuyBTCLink]=useState(\"\")\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const dataAll={\n    paymentSuccessText :paymentSuccessText,\n      paymentRefPattern :paymentRefPattern,\n      paymentNeedsApproval :paymentNeedsApproval,\n      masterCardStatus:masterCardStatus,\n      bitCoinStatus:bitCoinStatus,\n      buyBTCLink:buyBTCLink,\n      btcAddress:btcAddress,\n      btcHeaderText:btcHeaderText\n      \n\n\n  }\n\n    const onSaved = async () => {\n      setSubmitLoading(true);\n      const res = await axios.put(\n        `${endpoint}/api/site/paymentsettings`,\n        dataAll\n      );\n    \n      if (res.data) {\n        message.success(\"Settings successfully updated\");\n        setSubmitLoading(false);\n      }\n    };\n    useState(()=>{\n      if (props.site) {\n\nsetpaymentSuccessText(props.web.web.paymentSuccessText);\n    setpaymentRefPattern(props.web.web.paymentRefPattern);\n    setpaymentNeedsApproval(props.web.web.paymentNeedsApproval);\n    setmasterCardStatus(props.web.web.masterCardStatus);\n    setbitCoinStatus (props.web.web.bitCoinStatus);\n    setbtcHeaderText(props.web.web.btcHeaderText);\n    setbtcAddress(props.web.web.btcAddress)\n    setbuyBTCLink(props.web.web.buyBTCLink);\n\n      }})\n\n  useEffect(()=>{\n\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      setOrders(data)\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let CurrentUser = await response.json();\n\n    setUser(CurrentUser)\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  },[])\n\n\n    if (props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={props.user} site={props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable MasterCard</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"enable-payment-one\"\n                              name=\"enable-payment\"\n                              defaultValue=\"yes\"\n                              onChange={(e) =>\n                               setmasterCardStatus(\n                                  e.target.checked ? true : false\n                                )\n                              }\n                              checked={masterCardStatus=== true ? true : false}\n                            />\n                            <label htmlFor=\"enable-payment-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-payment-two\"\n                              name=\"enable-payment\"\n                              defaultValue=\"no\"\n                              onChange={(e) =>\n                                setmasterCardStatus(\n                                  e.target.checked ? false : true\n                                )\n                              }\n                              checked={masterCardStatus=== false ? true : false}\n                            />\n                            <label htmlFor=\"enable-payment-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                   \n                      <div className=\"save-btn\">\n                        <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                     \n                    </div>\n                   \n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n\nexport default MasterCard;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Bitcoin.js",["452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport { Select, message } from \"antd\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n\nconst Bitcoin = (props) => {\n  const [orders, setOrders] = useState();\n\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n  const myRef3 = props.user.user ? React.createRef() : \"\";\n  const textInput = props.user.user ? React.createRef() : \"\";\n\n  const manager = false;\n  const admin = true;\n  const token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  const fav = document.getElementById(\"favicon\");\n  const title = document.getElementById(\"title\");\n  const [paymentSuccessText, setpaymentSuccessText] = useState(\"\");\n  const [paymentRefPattern, setpaymentRefPattern] = useState(\"\");\n  const [paymentNeedsApproval, setpaymentNeedsApproval] = useState(null);\n  const [masterCardStatus, setmasterCardStatus] = useState(null);\n  const [bitCoinStatus, setbitCoinStatus] = useState(null);\n\n  const [btcHeaderText, setbtcHeaderText] = useState(\"\");\n  const [btcAddress, setbtcAddress] = useState(\"\");\n  const [buyBTCLink, setbuyBTCLink] = useState(\"\");\n  const [BTCAmount1, setBTCAmount1] = useState(0);\n  const [BTCAmount2, setBTCAmount2] = useState(0);\n  const [BTCAmount3, setBTCAmount3] = useState(0);\n  const [BTCQRCodeImg, setBTCQRCodeImg] = useState(\"\");\n  const [img1, setImg1] = useState(\"\");\n  const [img2, setImg2] = useState(\"\");\n  const [img3, setImg3] = useState(\"\");\n  const [imgLink1, setImgLink1] = useState(\"\");\n  const [imgLink2, setImgLink2] = useState(\"\");\n  const [imgLink3, setImgLink3] = useState(\"\");\n\n  const [submitLoading, setSubmitLoading] = useState(false);\n\n  const dataAll = {\n    paymentSuccessText: paymentSuccessText,\n    paymentRefPattern: paymentRefPattern,\n    paymentNeedsApproval: paymentNeedsApproval,\n    masterCardStatus: masterCardStatus,\n    bitCoinStatus: bitCoinStatus,\n    buyBTCLink: buyBTCLink,\n    btcAddress: btcAddress,\n    btcHeaderText: btcHeaderText,\n    BTCAmount1: parseInt(BTCAmount1),\n    BTCAmount2: parseInt(BTCAmount2),\n    BTCAmount3: parseInt(BTCAmount3),\n    BTCQRCodeImg: BTCQRCodeImg,\n    img1: img1,\n    img2: img2,\n    img3: img3,\n    imgLink1: imgLink1,\n    imgLink2: imgLink2,\n    imgLink3: imgLink3,\n  };\n\n  const depositImages = {\n    depositeImg1: img1,\n    depositeImg2: img2,\n    depositeImg3: img3,\n    depositeImg1Link: imgLink1,\n    depositeImg2Link: imgLink2,\n    depositeImg3Link: imgLink3,\n  };\n\n  // const uploadDepositImage = () => {};\n\n  const onSaved = async () => {\n    setSubmitLoading(true);\n    console.log('hhhh')\n    const res = await axios.put(\n      `${endpoint}/api/site/btcAdminSettings`,\n      dataAll\n    );\n    // const imgUpload = await axios.put(\n    //   `${endpoint}/api/site/depositImages`,\n    //   depositImages\n    // );\n\n    if (res.data) {\n      message.success(\"Settings successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n  useState(() => {\n    if (props.site) {\n      setpaymentSuccessText(props.web.web.paymentSuccessText);\n      setpaymentRefPattern(props.web.web.paymentRefPattern);\n      setpaymentNeedsApproval(props.web.web.paymentNeedsApproval);\n      setmasterCardStatus(props.web.web.masterCardStatus);\n      setbitCoinStatus(props.web.web.bitCoinStatus);\n      setbtcHeaderText(props.web.web.btcHeaderText);\n      setbtcAddress(props.web.web.btcAddress);\n      setbuyBTCLink(props.web.web.buyBTCLink);\n      setBTCAmount1(props.web.web.BTCAmount1);\n      setBTCAmount2(props.web.web.BTCAmount2);\n      setBTCAmount3(props.web.web.BTCAmount3);\n      setBTCQRCodeImg(props.web.web.BTCQRCodeImg);\n      setImg1(props.web.web.img1);\n      setImg2(props.web.web.img2);\n      setImg3(props.web.web.img3);\n      setImgLink1(props.web.web.imgLink1);\n      setImgLink2(props.web.web.imgLink2);\n      setImgLink3(props.web.web.imgLink3);\n    }\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      setOrders(data);\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let CurrentUser = await response.json();\n\n      setUser(CurrentUser);\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  }, []);\n\n  if (props.user.length === 0) {\n    return <Redirect to=\"/\" />;\n  } else {\n    // console.log(this.state.orderIsh);\n    const handleImageChange = (e) => {\n      // console.log(e.target.files[])\n      e.preventDefault();\n      if (e) {\n        const reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n        reader.onloadend = () => {\n          setBTCQRCodeImg(reader.result);\n          console.log(reader.result);\n        };\n      }\n    };\n    const handleImageChange1 = (e) => {\n      // console.log(e.target.files[])\n      e.preventDefault();\n      if (e) {\n        const reader1 = new FileReader();\n        reader1.readAsDataURL(e.target.files[0]);\n        reader1.onloadend = () => {\n          setImg1(reader1.result);\n          console.log(reader1.result);\n        };\n      }\n    };\n\n    const handleImageChange2 = (e) => {\n      // console.log(e.target.files[])\n      e.preventDefault();\n      if (e) {\n        const reader2 = new FileReader();\n        reader2.readAsDataURL(e.target.files[0]);\n        reader2.onloadend = () => {\n          setImg2(reader2.result);\n          console.log(reader2.result);\n        };\n      }\n    };\n\n    const handleImageChange3 = (e) => {\n      // console.log(e.target.files[])\n      e.preventDefault();\n      if (e) {\n        const reader3 = new FileReader();\n        reader3.readAsDataURL(e.target.files[0]);\n        reader3.onloadend = () => {\n          setImg3(reader3.result);\n          console.log(reader3.result);\n        };\n      }\n    };\n    return (\n      <div ref={myRef3}>\n        {/* Beggining of navbar */}\n\n        {/* Ending of navbar */}\n        {/* Beginning of contents */}\n        <section className=\"dash-contents\" onClick={closeForex}>\n          <div className=\"dash-row\">\n            <Sidebar user={props.user} site={props.site} />\n            {admin ? (\n              <div\n                className=\"full-width dash-row\"\n                style={{\n                  paddingLeft: 0,\n                  paddingBottom: 35,\n                  overflow: \"hidden\",\n                }}\n              >\n                <AdminSidebar />\n\n                <div className=\"admin-content\">\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Enable Bitcoin</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            type=\"radio\"\n                            id=\"enable-payment-one\"\n                            name=\"enable-payment\"\n                            defaultValue=\"yes\"\n                            onChange={(e) =>\n                              setbitCoinStatus(e.target.checked ? true : false)\n                            }\n                            checked={bitCoinStatus === true ? true : false}\n                          />\n                          <label htmlFor=\"enable-payment-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            id=\"enable-payment-two\"\n                            name=\"enable-payment\"\n                            defaultValue=\"no\"\n                            onChange={(e) =>\n                              setbitCoinStatus(e.target.checked ? false : true)\n                            }\n                            checked={bitCoinStatus === false ? true : false}\n                          />\n                          <label htmlFor=\"enable-payment-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Header Text</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                          onChange={(e) => setbtcHeaderText(e.target.value)}\n                          value={btcHeaderText}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>BTC Address</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                          value={btcAddress}\n                          onChange={(e) => setbtcAddress(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Buy BTC Link</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                          value={buyBTCLink}\n                          onChange={(e) => setbuyBTCLink(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Amount 1</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"number\"\n                          value={BTCAmount1}\n                          onChange={(e) => setBTCAmount1(e.target.value)}\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Amount 2</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={BTCAmount2}\n                          onChange={(e) => setBTCAmount2(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"number\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Amount 3</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={BTCAmount3}\n                          onChange={(e) => setBTCAmount3(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"number\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Upload Qr Code</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={handleImageChange}\n                          className=\"dash-input\"\n                          type=\"file\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Upload Image 1</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={handleImageChange1}\n                          className=\"dash-input\"\n                          type=\"file\"\n                          name=\"img1\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Image 1 Link</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={imgLink1}\n                          onChange={(e) => setImgLink1(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Upload Image 2</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={handleImageChange2}\n                          className=\"dash-input\"\n                          type=\"file\"\n                          name=\"img2\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Image 2 Link</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={imgLink2}\n                          onChange={(e) => setImgLink2(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Upload Image 3</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={handleImageChange3}\n                          className=\"dash-input\"\n                          type=\"file\"\n                          name=\"img3\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Image 3 Link</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={imgLink3}\n                          onChange={(e) => setImgLink3(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>\n                        {submitLoading ? (\n                          <>\n                            Saving... <i className=\"fa fa-spin fa-spinner\"></i>\n                          </>\n                        ) : (\n                          \"Save\"\n                        )}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </section>\n      </div>\n    );\n  }\n};\n\nexport default Bitcoin;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/GeneralApp.js",["469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { Select, message } from \"antd\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n\nconst GeneralApp = (props) => {\n  const [orders, setOrders] = useState();\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const [yourMainColor, setYourMainColor] = useState(\"\");\n  const [siteMenuType, setsiteMenuType] = useState(\"\");\n  const [showFooterBar, setShowFooterBar] = useState(null);\n  const [defaultThemeColor, setdefaultThemeColor] = useState(\"\");\n  const [userCanChangeTheme, setuserCanChangeTheme] = useState(null);\n  const [showTimeInFooter, setshowTimeInFooter] = useState(null);\n  const [showContactInFooter, setshowContactInFooter] = useState(null);\n  const [showCalcaulator, setshowCalcaulator] = useState(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n  useEffect(() => {\n    if (props.site) {\n      setYourMainColor(props.web.web.yourMainColor);\n      setsiteMenuType(props.web.web.siteMenuType);\n      setShowFooterBar(props.web.web.showFooterBar);\n      setdefaultThemeColor(props.web.web.defaultThemeColor);\n      setuserCanChangeTheme(props.web.web.userCanChangeTheme);\n      setshowTimeInFooter(props.web.web.showTimeInFooter);\n      setshowContactInFooter(props.web.web.showContactInFooter);\n      setshowCalcaulator(props.web.web.showCalcaulator);\n    }\n  }, []);\n\n  let manager = false;\n  let admin = true;\n  let myRef3 = props.user.user ? React.createRef() : \"\";\n  let textInput = props.user.user ? React.createRef() : \"\";\n  //}\n  const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\nconst  fav = document.getElementById(\"favicon\");\n const title = document.getElementById(\"title\");\n  let dataAll = {\n    yourMainColor: yourMainColor,\n    siteMenuType: siteMenuType,\n    showFooterBar: showFooterBar,\n    defaultThemeColor: defaultThemeColor,\n    userCanChangeTheme: userCanChangeTheme,\n    showTimeInFooter: showTimeInFooter,\n    showContactInFooter: showContactInFooter,\n    showCalcaulator: showCalcaulator,\n  };\n  const onSaved = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/generalappearance`,\n      dataAll\n    );\n\n    if (res.data) {\n      message.success(\"Settings successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n\n      setOrders(data);\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let CurrentUser = await response.json();\n      setUser(CurrentUser);\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  }, []);\n\n  if (props.user.length === 0) {\n    return <Redirect to=\"/\" />;\n  } else {\n    // console.log(this.state.orderIsh);\n\n    return (\n      <div ref={myRef3}>\n        {/* Beggining of navbar */}\n\n        {/* Ending of navbar */}\n        {/* Beginning of contents */}\n        <section className=\"dash-contents\" onClick={closeForex}>\n          <div className=\"dash-row\">\n            <Sidebar user={props.user} site={props.site} />\n\n            {/* start route */}\n\n            {/* start route */}\n            {admin ? (\n              <div\n                className=\"full-width dash-row\"\n                style={{\n                  paddingLeft: 0,\n                  paddingBottom: 35,\n                  overflow: \"hidden\",\n                }}\n              >\n                <AdminSidebar />\n\n                <div className=\"admin-content\">\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Your main color</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={yourMainColor}\n                          onChange={(e) => setYourMainColor(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Menu type</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions\">\n                        <select\n                          value={siteMenuType}\n                          onChange={(e) => setsiteMenuType(e.target.value)}\n                          className=\"dash-select-short\"\n                        >\n                          <option value=\"Left, vertical\">Left, vertical</option>\n                          <option value=\"Top, horizontal\">\n                            Top, horizontal\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Show footer bar</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            type=\"radio\"\n                            id=\"footer-bar-one\"\n                            name=\"footer-bar\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            onChange={(e) =>\n                              setShowFooterBar(e.target.checked ? true : false)\n                            }\n                            checked={showFooterBar === true ? true : false}\n                          />\n                          <label htmlFor=\"footer-bar-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setShowFooterBar(e.target.checked ? false : true)\n                            }\n                            checked={showFooterBar === false ? true : false}\n                            type=\"radio\"\n                            id=\"footer-bar-two\"\n                            name=\"footer-bar\"\n                            defaultValue=\"no\"\n                          />\n                          <label htmlFor=\"footer-bar-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>User can change theme</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            type=\"radio\"\n                            id=\"change-theme-one\"\n                            name=\"change-theme\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            onChange={(e) =>\n                              setuserCanChangeTheme(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            checked={userCanChangeTheme === true ? true : false}\n                          />\n                          <label htmlFor=\"change-theme-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            id=\"change-theme-two\"\n                            name=\"change-theme\"\n                            defaultValue=\"no\"\n                            onChange={(e) =>\n                              setuserCanChangeTheme(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            checked={\n                              userCanChangeTheme === false ? true : false\n                            }\n                          />\n                          <label htmlFor=\"change-theme-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Default theme color</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div\n                        onChange={(e) => setdefaultThemeColor(e.target.value)}\n                        value={defaultThemeColor}\n                        className=\"actions\"\n                      >\n                        <select className=\"dash-select-short\">\n                          <option value=\"Dark\">Dark</option>\n                          <option value=\"Light\">Light</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Show time in footer</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions\">\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"time-in-footer-one\"\n                              name=\"time-in-footer\"\n                              defaultValue=\"yes\"\n                              // defaultChecked\n                              onChange={(e) =>\n                                setshowTimeInFooter(\n                                  e.target.checked ? true : false\n                                )\n                              }\n                              checked={showTimeInFooter === true ? true : false}\n                            />\n                            <label htmlFor=\"time-in-footer-one\">ON</label>\n                            <input\n                              onChange={(e) =>\n                                setshowTimeInFooter(\n                                  e.target.checked ? false : true\n                                )\n                              }\n                              checked={\n                                showTimeInFooter === false ? true : false\n                              }\n                              type=\"radio\"\n                              id=\"time-in-footer-two\"\n                              name=\"time-in-footer\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"time-in-footer-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Show contact in footer</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            type=\"radio\"\n                            id=\"contact-in-footer-one\"\n                            name=\"contact-in-footer\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            onChange={(e) =>\n                              setshowContactInFooter(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            checked={\n                              showContactInFooter === true ? true : false\n                            }\n                          />\n                          <label htmlFor=\"contact-in-footer-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setshowContactInFooter(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            checked={\n                              showContactInFooter === false ? true : false\n                            }\n                            type=\"radio\"\n                            id=\"contact-in-footer-two\"\n                            name=\"contact-in-footer\"\n                            defaultValue=\"no\"\n                          />\n                          <label htmlFor=\"contact-in-footer-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Show calculator</h4>\n                        <p>You need to refresh the page after change</p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            type=\"radio\"\n                            id=\"show-calculator-one\"\n                            name=\"show-calculator\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            onChange={(e) =>\n                              setshowCalcaulator(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            checked={showCalcaulator === true ? true : false}\n                          />\n                          <label htmlFor=\"show-calculator-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            id=\"show-calculator-two\"\n                            name=\"show-calculator\"\n                            defaultValue=\"no\"\n                            onChange={(e) =>\n                              setshowCalcaulator(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            checked={showCalcaulator === false ? true : false}\n                          />\n                          <label htmlFor=\"show-calculator-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"save-btn\">\n                    <button disabled={submitLoading} onClick={onSaved}>\n                      Save\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {/* {this.state.admin ? () : ''\n\n             } */}\n\n            {/* storrrrrp */}\n          </div>\n        </section>\n      </div>\n    );\n  }\n};\n\nexport default GeneralApp;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/LoginApp.js",["486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { Select, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nconst LoginApp=(props)=> {\n  const [orders, setOrders] = useState();\n  const [user, setUser] = useState(props.user ? props.user : null);\n\n  const admin=true\n  const manager=false\n  const[loginBackgroundImage,setLoginBackgroundImage] = useState(\"\")\n  const[loginCarouselImage1, setLoginCarouselImage1]=useState(\"\")\n  const[loginCarouselImage2, setLoginCarouselImage2]=useState(\"\")\n  const[loginCarouselImage3, setLoginCarouselImage3]=useState(\"\")\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     user: this.props.user,\n  //     redirect: \"/\",\n  //     data: {},\n  //     orders: [],\n  //     disA1: true,\n  //     disA2: true,\n  //     btcP: [],\n  //     market: false,\n  //     board: false,\n  //     port: false,\n  //     manager: false,\n  //     levIsh: false,\n  //     admin: true,\n  //   };\n    const myRef3 = props.user.user ? React.createRef() : \"\";\n    const textInput = props.user.user ? React.createRef() : \"\";\n  // }\n  const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\nconst  fav = document.getElementById(\"favicon\");\n const title = document.getElementById(\"title\");\n  let dataAll={\n    loginBackgroundImage: loginBackgroundImage,\n    loginCarouselImage1:loginCarouselImage1,\n    loginCarouselImage2:loginCarouselImage2,\n    loginCarouselImage3:loginCarouselImage3\n  }\n  useEffect(()=>{\n\nif(props.site){\n  setLoginBackgroundImage(props.web.web.loginBackgroundImage);\n  setLoginCarouselImage1(props.web.web.loginCarouselImage1);\n  setLoginCarouselImage2(props.web.web.loginCarouselImage2);\n  setLoginCarouselImage3(props.web.web.loginCarouselImage3);\n\n}\n\n  },[])\n\n  const onSaved = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/loginlayout`,\n      dataAll\n    );\n\n    if (res.data) {\n      message.success(\"Settings successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n  const LoginCarouselImage1 = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setLoginCarouselImage1(reader.result);\n      };\n    }\n  };\n  const LoginCarouselImage2 = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setLoginCarouselImage2(reader.result);\n      };\n    }\n  };\n  const LoginCarouselImage3 = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setLoginCarouselImage3(reader.result);\n      };\n    }\n  };\n  const LoginBackgroundImage3 = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setLoginBackgroundImage(reader.result);\n      };\n    }\n  };\n  useEffect(()=>{\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      // this.setState({\n      //   orders: data,\n      // });\n      setOrders(data)\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let CurrentUser = await response.json();\nsetUser(CurrentUser)\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  },[])\n\n\n    if (props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={props.user} site={props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4 className>Your First Carousel Image</h4>\n                          <p>\n                            It's recommended to use a SVG logo for increase the\n                            quality\n                          </p>\n                          <p>Max upload size : 64 MB</p>\n                        </div>\n                        <div className=\"actions\">\n                          <img src={loginCarouselImage1}  className=\"logo\" />\n                          <input onChange={LoginCarouselImage1} type=\"file\" name=\"siteLogo\" />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4 className>Your Second Carousel Image</h4>\n                          <p>\n                            It's recommended to use a SVG logo for increase the\n                            quality\n                          </p>\n                          <p>Max upload size : 64 MB</p>\n                        </div>\n                        <div className=\"actions\">\n                          <img src={loginCarouselImage2} className=\"logo\" />\n                          <input onChange={LoginCarouselImage2} type=\"file\" name=\"siteLogo\" />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4 className>Your Thrid Carousel Image</h4>\n                          <p>\n                            It's recommended to use a SVG logo for increase the\n                            quality\n                          </p>\n                          <p>Max upload size : 64 MB</p>\n                        </div>\n                        <div className=\"actions\">\n                          <img src={loginCarouselImage3} className=\"logo\" />\n                          <input onChange={LoginCarouselImage3} type=\"file\" name=\"siteLogo\" />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4 className>Your Login Background Image</h4>\n                          <p>\n                            It's recommended to use a SVG logo for increase the\n                            quality\n                          </p>\n                          <p>Max upload size : 64 MB</p>\n                        </div>\n                        <div className=\"actions\">\n                          <img src={loginBackgroundImage} className=\"logo\" />\n                          <input onChange={LoginBackgroundImage3} type=\"file\" name=\"siteLogo\" />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}><i className={submitLoading?\"fa fa spinner\":\"\"}></i> Save</button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n\n\nexport default LoginApp;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/General.js",["507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525"],"import React, { useState, useEffect } from \"react\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport axios from \"axios\";\nimport Countries from \"../Component/Country.json\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { withRouter } from \"react-router-dom\";\nimport { Select, message } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst { Option } = Select;\nconst General = (props) => {\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const [siteLogo, setLogo] = useState(\"\");\n  const [siteLogoWhite, setsiteLogoWhite]=useState(\"\");\n  const [useWhiteLogo, setuseWhiteLogo ]=useState(null)\n  const [siteFav, setFav] = useState(\"\");\n  const [donationText, setDonationText] = useState(\"\");\n  const [siteTitle, setTitle] = useState(\"\");\n  const [admin, setAdmin] = useState(true);\n  const [orders, setOrders] = useState();\n  const [donationAddress, setDonationAddress] = useState(\"\");\n  const [enableDonation, setEnableDonation] = useState(null);\n  const [blackListedCountry, setBlackListedCountry] = useState([]);\n  const [cookiePopupText, setCookiePopupText] = useState(\"\");\n  const [cookiePopupTitle, setCookiePopupTitle] = useState(\"\");\n  const [enableCookiePopup, setEnableCookiePopup] = useState(null);\n  const [googleAnalytics, setGoogleAnalytics] = useState(\"\");\n  const [enablePOEditorLanguage, setEnablePOEditorLanguage] = useState(null);\n  const [POEditorAPIKey, setPOEditorAPIKey] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [numberFormat, setNumberFormat] = useState(\"\");\n  const [englishEnableAutolanguage, setEnglishEnableAutolanguage] = useState(\n    \"\"\n  );\n  const [disableChart, setDisableChart] = useState(null);\n  const [allowUsersswitchView, setAllowUsersswitchView] = useState(null);\n  const [switchChartTradingView, setSwitchChartTradingView] = useState(null);\n  const [maintenanceMode, setMaintenanceMode] = useState(null);\n  const [currencyPosition, setCurrencyPosition] = useState(null);\n  const [appDescription, setAppDescription] = useState(null);\n  const [startWatchUserSignUp, setStartWatchUserSignUp] = useState(null);\n  const [startWatchNewUserSignUp, setStartWatchNewUserSignUp] = useState(null);\n  const [enableGoogleAd, setEnableGoogleAds] = useState(null);\n  const [googleAdClient, setGoogleAdClient] = useState(\"\");\n  const [googleSlot, setGoogleSlot] = useState(\"\");\n  const [privacyPolicyLink, setprivacyPolicyLink]=useState(\"\")\n  const [termsOfServicesLink, settermsOfServicesLink]=useState(\"\")\n\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n  function handleChangeCountry(value) {\n    setBlackListedCountry(value);\n  }\n\n  let dataAll = {\n    googleAdClient: googleAdClient,\n    startWatchNewUserSignUp: startWatchNewUserSignUp,\n    startWatchUserSignUp: startWatchUserSignUp,\n    donationAddress: donationAddress,\n    donationText: donationText,\n    enableDonation: enableDonation,\n    blacklistedCountries: blackListedCountry,\n    cookiePopupText: cookiePopupText,\n    cookiePopupTitle: cookiePopupTitle,\n    googleAnalytics: googleAnalytics,\n    POEditorAPIKey: POEditorAPIKey,\n    siteLanguage: language,\n    enableAutoLanguage: englishEnableAutolanguage,\n    disableChart: disableChart,\n    allowUsersswitchView: allowUsersswitchView,\n    switchChartTradingView: switchChartTradingView,\n    maintenanceMode: maintenanceMode,\n    currencyPosition: currencyPosition,\n    appDescription: appDescription,\n    enableGoogleAds: enableGoogleAd,\n    enableCookiePopup: enableCookiePopup,\n    enablePOEEditorLanguage: enablePOEditorLanguage,\n    numberFormat: numberFormat,\n    googleSlot: googleSlot,\n    siteLogo: siteLogo,\n    siteFav: siteFav,\n    siteTitle: siteTitle,\n    privacyPolicyLink:privacyPolicyLink,\n    termsOfServicesLink:termsOfServicesLink,\n    siteLogoWhite:siteLogoWhite,\n    useWhiteLogo :useWhiteLogo\n  };\n  const myRef3 = props.user.user ? React.createRef() : \"\";\n  const textInput = props.user.user ? React.createRef() : \"\";\n\n  const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\nconst  fav = document.getElementById(\"favicon\");\n const title = document.getElementById(\"title\");\n\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n  const onSaved = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/generalsettings`,\n      dataAll\n    );\n\n    if (res.data) {\n      message.success(\"Settings successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n  const onSaveTitle = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/generalsettings`,\n      dataAll\n    );\n    if (res.data) {\n      message.success(\"Settings successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (props.site) {\n      setDonationAddress(props.web.web.donationAddress);\n      setDonationText(props.web.web.donationText);\n      setEnableDonation(props.web.web.enableDonation);\n      setBlackListedCountry(props.web.web.blacklistedCountries);\n      setCookiePopupText(props.web.web.cookiePopupText);\n      setCookiePopupTitle(props.web.web.cookiePopupTitle);\n      setEnableCookiePopup(props.web.web.enableCookiePopup);\n      setGoogleAnalytics(props.web.web.googleAnalytics);\n      setEnablePOEditorLanguage(props.web.web.enablePOEEditorLanguage);\n      setPOEditorAPIKey(props.web.web.POEditorAPIKeys);\n      setLanguage(props.web.web.siteLanguage);\n      setEnglishEnableAutolanguage(props.web.web.enableAutoLanguage);\n      setDisableChart(props.web.web.disableChart);\n      setSwitchChartTradingView(props.web.web.allowUsersswitchView);\n      setAllowUsersswitchView(props.web.web.switchChartTradingView);\n      setMaintenanceMode(props.web.web.maintenanceMode);\n      setCurrencyPosition(props.web.web.currencyPosition);\n      setAppDescription(props.web.web.appDescription);\n      setStartWatchUserSignUp(props.web.web.startWatchUserSignUp);\n      setStartWatchNewUserSignUp(props.web.web.startWatchNewUserSignUp);\n      setNumberFormat(props.web.web.numberFormat);\n      setEnableGoogleAds(props.web.web.enableGoogleAds);\n      setGoogleAdClient(props.web.web.googleAdClient);\n      setGoogleSlot(props.web.web.googleSlot);\n      setTitle(props.web.web.siteTitle);\n      setFav(props.web.web.siteFav);\n      setLogo(props.web.web.siteLogo);\n      setprivacyPolicyLink(props.web.web.privacyPolicyLink);\n      settermsOfServicesLink(props.web.web.termsOfServicesLink);\n      setsiteLogoWhite(props.web.web.siteLogoWhite);\n      setuseWhiteLogo(props.web.web.useWhiteLogo )\n    }\n\n    (async () => {\n      let response = await fetch(\n        `${endpoint}/api/trade/${user.user ? user.user.user._id : \"\"}`\n      );\n      let data = await response.json();\n      setOrders(data);\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `${endpoint}/api/trade/user/${\n          user !== null && user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let getUser = await response.json();\n      setUser(getUser);\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  }, []);\n\n \n\n  const handleImageChangeLogo = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setLogo(reader.result);\n      };\n    }\n  };\n  const handleImageChangeLogoWhite = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setsiteLogoWhite(reader.result);\n      };\n    }\n  };\n  const handleSubmitLogo = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/generalsettings`,\n      dataAll\n    );\n   \n    if (res.data) {\n      message.success(\"Site Logo successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n  const handleSubmitWhiteLogo = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/generalsettings`,\n      dataAll\n    );\n   \n    if (res.data) {\n      message.success(\"Site Logo successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n\n  const handleImageChangesiteFav = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        setFav(reader.result);\n      };\n    }\n  };\n\n  const handleSubmitsiteFav = async (e) => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/generalsettings`,\n      dataAll\n    );\n    if (res.data) {\n      message.success(\"Site Favicon successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n\n  if (props.user.length === 0) {\n    return <Redirect to=\"/\" />;\n  } else {\n    console.log('ss',props.web.web)\n    return (\n      <div ref={myRef3}>\n        {/* Beggining of navbar */}\n\n        {/* Ending of navbar */}\n        {/* Beginning of contents */}\n        <section className=\"dash-contents\" onClick={closeForex}>\n          <div className=\"dash-row\">\n            <Sidebar user={props.user} site={props.site ? props.site : null} />\n\n            {/* start route */}\n\n            {/* start route */}\n            {admin ? (\n              <div\n                className=\"full-width dash-row\"\n                style={{\n                  paddingLeft: 0,\n                  paddingBottom: 35,\n                  overflow: \"hidden\",\n                }}\n              >\n                <AdminSidebar />\n\n                <div className=\"admin-content\">\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4 className>Your logo</h4>\n                        <p>\n                          It's recommended to use a SVG logo for increase the\n                          quality\n                        </p>\n                        <p>Max upload size : 64 MB</p>\n                      </div>\n                      <div className=\"actions\">\n                        <img className=\"logo\" src={siteLogo} />\n                        <input\n                          type=\"file\"\n                          name=\"siteLogo\"\n                          onChange={handleImageChangeLogo}\n                        />\n                      </div>\n\n                      <div className=\"save-btn\">\n                        <button onClick={handleSubmitLogo}>\n                        {submitLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Saving...</>:\"Save\"} \n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4 className>Your White logo</h4>\n                        <p>\n                          It's recommended to use a SVG logo for increase the\n                          quality\n                        </p>\n                        <p>Max upload size : 64 MB</p>\n                      </div>\n                      <div className=\"actions\">\n                        <img className=\"logo\" src={siteLogoWhite} />\n                        <input\n                          type=\"file\"\n                          name=\"siteLogo\"\n                          onChange={handleImageChangeLogoWhite}\n                        />\n                      </div>\n\n                      <div className=\"save-btn\">\n                        <button onClick={handleSubmitWhiteLogo}>\n                        {submitLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Saving...</>:\"Save\"} \n                        </button>\n                      </div>\n                    </div>\n                 \n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4 className>Your FavIcon </h4>\n                        <p>\n                          It's recommended to use a SVG logo for increase the\n                          quality\n                        </p>\n                        <p>Max upload size : 64 MB</p>\n                      </div>\n                      <div className=\"actions\">\n                        <img className=\"logo\" src={siteFav} />\n                        <input\n                          type=\"file\"\n                          name=\"siteFav\"\n                          onChange={handleImageChangesiteFav}\n                        />\n                      </div>\n\n                      <div className=\"save-btn\">\n                        <button onClick={handleSubmitsiteFav}>\n                        {submitLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Saving...</>:\"Save\"} \n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Title</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"siteTitle\"\n                          value={siteTitle}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n\n                      <div className=\"save-btn\">\n                        <button onClick={onSaveTitle}>\n                        {submitLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Saving...</>:\"Save\"} \n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>App description</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <textarea\n                          onChange={(e) => setAppDescription(e.target.value)}\n                          value={appDescription}\n                          className=\"dash-text-area\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Privacy Policy Link</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input type=\"text\"\n                          onChange={(e) => setprivacyPolicyLink(e.target.value)}\n                          value={privacyPolicyLink}\n                          className=\"dash-input\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Terms Of Services Link</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input type=\"text\"\n                          onChange={(e) => settermsOfServicesLink(e.target.value)}\n                          value={termsOfServicesLink}\n                          className=\"dash-input\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Use White Logo</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setuseWhiteLogo(e.target.checked ? true : false)\n                            }\n                            type=\"radio\"\n                            id=\"use-white-logo-one\"\n                            name=\"use-white-logo\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={useWhiteLogo === true ? true : false}\n                          />\n                          <label htmlFor=\"use-white-logo-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            onChange={(e) =>\n                              setuseWhiteLogo(e.target.checked ? false : true)\n                            }\n                            id=\"use-white-logo-two\"\n                            name=\"use-white-logo\"\n                            defaultValue=\"no\"\n                            checked={useWhiteLogo === false ? true : false}\n                          />\n                          <label htmlFor=\"use-white-logo-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Maintenance mode</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setMaintenanceMode(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"maintenance-mode-one\"\n                            name=\"maintenance-mode\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={maintenanceMode === true ? true : false}\n                          />\n                          <label htmlFor=\"maintenance-mode-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setMaintenanceMode(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"maintenance-mode-two\"\n                            name=\"maintenance-mode\"\n                            defaultValue=\"no\"\n                            checked={maintenanceMode === false ? true : false}\n                          />\n                          <label htmlFor=\"maintenance-mode-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Number format</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <select\n                          onChange={(e) => setNumberFormat(e.target.value)}\n                          value={numberFormat}\n                          className=\"dash-select-short\"\n                        >\n                          <option value=\"5,500.50\">5,500.50</option>\n                          <option value=\"5,500.50\">5.500.50</option>\n                          <option value=\"5,500.50\">5,500.50</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Currency position</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <select\n                          onChange={(e) => setCurrencyPosition(e.target.value)}\n                          value={currencyPosition}\n                          className=\"dash-select-short\"\n                        >\n                          <option value=\"Left\">Left</option>\n                          <option value=\"Right\">Right</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Switch charts to tradingview charts</h4>\n                        <p>\n                          /!\\ Some exchanges / pairs can be not available /!\\\n                        </p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setSwitchChartTradingView(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"switch-charts-one\"\n                            name=\"switch-charts\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={\n                              switchChartTradingView === true ? true : false\n                            }\n                          />\n                          <label htmlFor=\"switch-charts-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setSwitchChartTradingView(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"switch-charts-two\"\n                            name=\"switch-charts\"\n                            defaultValue=\"no\"\n                            checked={\n                              switchChartTradingView === false ? true : false\n                            }\n                          />\n                          <label htmlFor=\"switch-charts-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Allow user to switch chart type</h4>\n                        <p>\n                          User will be able to choose between default chart and\n                          tradingview chart library\n                        </p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setAllowUsersswitchView(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"allow-user-one\"\n                            name=\"allow-user\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={\n                              allowUsersswitchView === true ? true : false\n                            }\n                          />\n                          <label htmlFor=\"allow-user-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setAllowUsersswitchView(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"allow-user-two\"\n                            name=\"allow-user\"\n                            defaultValue=\"no\"\n                            checked={\n                              allowUsersswitchView === false ? true : false\n                            }\n                          />\n                          <label htmlFor=\"allow-user-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Disable chat</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setDisableChart(e.target.checked ? true : false)\n                            }\n                            type=\"radio\"\n                            id=\"disable-chart-one\"\n                            name=\"disable-chart\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={disableChart === true ? true : false}\n                          />\n                          <label htmlFor=\"disable-chart-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            onChange={(e) =>\n                              setDisableChart(e.target.checked ? false : true)\n                            }\n                            id=\"disable-chart-two\"\n                            name=\"disable-chart\"\n                            defaultValue=\"no\"\n                            checked={disableChart === false ? true : false}\n                          />\n                          <label htmlFor=\"disable-chart-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Starting pair when new user signup</h4>\n                        <p>Only 1 pair is allowed</p>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={(e) =>\n                            setStartWatchUserSignUp(e.target.value)\n                          }\n                          value={startWatchUserSignUp}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>\n                          Starting watching list pair when new user signup\n                        </h4>\n                        <p>1 pair each for each line</p>\n                        <p>Format : MARKET:SYMBOL/CURRENCY</p>\n                        <p>Format : MARKET:SYMBOL/CURRENCY</p>\n                      </div>\n                      <div className=\"actions\">\n                        <textarea\n                          onChange={(e) =>\n                            setStartWatchNewUserSignUp(e.target.value)\n                          }\n                          className=\"dash-text-area\"\n                          defaultValue={\"\"}\n                          onChange={startWatchNewUserSignUp}\n                          name=\"start-watch-list\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Remove the .php to the dashboard page extension</h4>\n                        <p>Mod rewrite is : Disable</p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setMaintenanceMode(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"remove-ext-one\"\n                            name=\"remove-ext\"\n                            defaultValue=\"yes\"\n                            defaultChecked\n                          />\n                          <label htmlFor=\"remove-ext-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            id=\"remove-ext-two\"\n                            name=\"remove-ext\"\n                            defaultValue=\"no\"\n                          />\n                          <label htmlFor=\"remove-ext-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Language</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <select\n                          onChange={(e) => setLanguage(e.target.value)}\n                          value={language}\n                          className=\"dash-select-short\"\n                          name\n                        >\n                          <option value=\"English\">English</option>\n                          <option value=\"Espanyol\">Espanyol</option>\n                          <option value=\"French\">French</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Enable autolanguage</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setEnglishEnableAutolanguage(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"auto-language-one\"\n                            name=\"auto-language\"\n                            defaultValue=\"yes\"\n                            checked={\n                              englishEnableAutolanguage === true ? true : false\n                            }\n                          />\n                          <label htmlFor=\"auto-language-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setEnglishEnableAutolanguage(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"auto-language-two\"\n                            name=\"auto-language\"\n                            defaultValue=\"no\"\n                            checked={\n                              englishEnableAutolanguage === false ? true : false\n                            }\n                          />\n                          <label htmlFor=\"auto-language-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Enable POEditor Language</h4>\n                        <p>\n                          Editor link :{\" \"}\n                          <a target=\"_blank\" href=\"https://poeditor.com\">\n                            https://poeditor.com\n                          </a>\n                        </p>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setEnablePOEditorLanguage(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"po-editor-language-one\"\n                            name=\"po-editor-language\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={\n                              enablePOEditorLanguage === true ? true : false\n                            }\n                          />\n                          <label htmlFor=\"po-editor-language-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setEnablePOEditorLanguage(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"po-editor-language-two\"\n                            name=\"po-editor-language\"\n                            defaultValue=\"no\"\n                            checked={\n                              enablePOEditorLanguage === false ? true : false\n                            }\n                          />\n                          <label htmlFor=\"po-editor-language-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>POEditor API Key</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={(e) => setPOEditorAPIKey(e.target.value)}\n                          value={POEditorAPIKey}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"setpoe-key\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>POEditor Project Selector</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <p className=\"small\">\n                          You need to enable POEditor, set your API Key access\n                          and save for select your project\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Google Analytics</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <textarea\n                          onChange={(e) => setGoogleAnalytics(e.target.value)}\n                          className=\"dash-text-area\"\n                          value={googleAnalytics}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Enable Google Ad</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setEnableGoogleAds(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"google-ad-one\"\n                            name=\"google-ad\"\n                            defaultValue=\"yes\"\n                            // defaultChecked\n                            checked={enableGoogleAd === true ? true : false}\n                          />\n                          <label htmlFor=\"google-ad-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setEnableGoogleAds(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"google-ad-two\"\n                            name=\"google-ad\"\n                            defaultValue=\"no\"\n                            checked={enableGoogleAd === false ? true : false}\n                          />\n                          <label htmlFor=\"google-ad-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Google Ad Client</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={(e) => setGoogleAdClient(e.target.value)}\n                          value={googleAdClient}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Google Ad Slot</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={(e) => setGoogleSlot(e.target.value)}\n                          value={googleSlot}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Enable Cookie popup</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setEnableCookiePopup(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"cookie-popup-one\"\n                            name=\"cookie-popup\"\n                            defaultValue=\"yes\"\n                            checked={enableCookiePopup === true ? true : false}\n                          />\n                          <label htmlFor=\"cookie-popup-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setEnableCookiePopup(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            type=\"radio\"\n                            id=\"cookie-popup-two\"\n                            name=\"cookie-popup\"\n                            defaultValue=\"no\"\n                            checked={enableCookiePopup === false ? true : false}\n                          />\n                          <label htmlFor=\"cookie-popup-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Cookie Popup title</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={(e) => setCookiePopupTitle(e.target.value)}\n                          value={cookiePopupTitle}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Cookie Popup text</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          onChange={(e) => setCookiePopupText(e.target.value)}\n                          value={cookiePopupText}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Blacklisted countries</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <Select\n                          className=\"dash-select-short\"\n                          mode=\"multiple\"\n                          style={{ width: \"100%\" }}\n                          placeholder=\"select one country\"\n                          defaultValue={\n                            props.web.web\n                              ? props.web.web.blacklistedCountries.map(\n                                  (e) => e\n                                )\n                              : null\n                          }\n                          onChange={handleChangeCountry}\n                          optionLabelProp=\"label\"\n                        >\n                          {Countries.map((country) => (\n                            <Option\n                              style={{ color: \"black\" }}\n                              key={country.name}\n                              value={country.name}\n                              label={country.name}\n                            >\n                              <div className=\"demo-option-label-item\">\n                                {country.name}\n                              </div>\n                            </Option>\n                          ))}\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Enable Donation</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            onChange={(e) =>\n                              setEnableDonation(e.target.checked ? true : false)\n                            }\n                            type=\"radio\"\n                            id=\"donation-one\"\n                            name=\"donation\"\n                            defaultValue=\"yes\"\n                            checked={enableDonation === true ? true : false}\n                          />\n                          <label htmlFor=\"donation-one\">ON</label>\n                          <input\n                            onChange={(e) =>\n                              setEnableDonation(e.target.checked ? false : true)\n                            }\n                            type=\"radio\"\n                            id=\"donation-two\"\n                            name=\"donation\"\n                            defaultValue=\"no\"\n                            checked={enableDonation === false ? true : false}\n                          />\n                          <label htmlFor=\"donation-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Donation text</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Donation address list</h4>\n                        <p>Put 1 address per line</p>\n                        <p>Line format : BTC:ADDRESS</p>\n                      </div>\n                      <div className=\"actions\">\n                        <textarea\n                          className=\"dash-text-area\"\n                          onChange={(e) => setDonationAddress(e.target.value)}\n                          value={donationAddress}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"save-btn\">\n                    <button\n                      loading={submitLoading}\n                      disabled={submitLoading}\n                      onClick={onSaved}\n                    >\n                     {submitLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Saving...</>:\"Save\"} \n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {/* {this.state.admin ? () : ''\n\n             } */}\n\n            {/* storrrrrp */}\n          </div>\n        </section>\n      </div>\n    );\n  }\n};\n\nexport default General;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Manager.js",["526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { message } from \"antd\";\nimport { Modal, Button, Tag } from \"antd\";\nimport VerifyDocModal from \"../Component/VerifyModal\";\nimport Router from \"../Component/Router\";\nimport { Container, Card, Form, Row, Col, Table } from \"react-bootstrap\";\nimport WithdrawDetailsModal from \"../Component/WithdrawDetailsInfoPopOver\";\nimport VerifyDetailsPopOver from \"../Component/VerifyDetailsPopOver\";\nimport PaymentDetailsPopOver from \"../Component/PaymentDetailsPopOver\";\nimport { NavbarCo } from \"../Component/Nav\";\nimport axios from \"axios\";\nimport { DatePicker, Space } from \"antd\";\nimport EditAutoCopyTrade from \"../Component/EditCopyTrade\";\n\nimport { countryList as profileCountryList } from \"../Component/CountryList/CountryList\";\n\nclass Manager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      schdule: false,\n      user: this.props.user,\n      liveTrade: \"\",\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: true,\n      levIsh: false,\n      admin: false,\n      allUsers: [],\n      allVerify: [],\n      allDeposit: [],\n      allWithdraw: [],\n      allBankTransfor: [],\n      allTrades: [],\n      userId: {},\n      displayC: false,\n      curDeposit: [],\n      card: true,\n      bal: false,\n      execution: false,\n      payments: false,\n      secu: false,\n      with: false,\n      numVerified: 0,\n      orderT: false,\n      updateAmount: \"\",\n      text: \"Save\",\n      decline: false,\n      autoTrade: false,\n      declinedMessage: \"\",\n      yourName: \"\",\n      yourEmailAddress: \"\",\n      yourLanguage: \"\",\n      userCountry: \"Nigeria\",\n      yourCurrency: \"\",\n      userLevel: \"\",\n      yourWallet: 0,\n      estimatedBalance: 0,\n      editProfile: false,\n      checkDate: false,\n      submitAutoCopyTradeLoading: false,\n      userAutoCopyTradedata: [],\n      deleteLoading: false,\n      lastAutoTradeDate: null,\n      copytradeBtn: true,\n      profit: false,\n      Loss: null,\n      _userId: \"\",\n      market: \"\",\n      amount: 0,\n      credit: true,\n      assets: \"\",\n      scheduledTime: \"\",\n      profitLoss: false,\n    };\n\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n  // state = {\n  //   loading: false,\n  //   visible: false,\n  // };\n  onChangeDate = (value, dateString) => {\n    this.setState({ checkDate: false });\n    if (new Date(dateString) < new Date(new Date().setHours(0, 0, 0, 0))) {\n      this.setState({ copytradeBtn: true });\n    } else if (\n      new Date(dateString) >= new Date(new Date().setHours(0, 0, 0, 0))\n    ) {\n      this.setState({ copytradeBtn: false });\n    }\n  };\n  onOkDate = (value) => {\n    this.setState({ scheduledTime: value._d });\n  };\n  callBackAutoTrade = (_id) => {\n    (async () => {\n      let res = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/${_id}`\n      );\n      let _data = await res.json();\n      this.setState({ userAutoCopyTradedata: _data });\n    })();\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n      );\n      let user = await response.json();\n      this.setState({\n        user: user,\n      });\n\n      let a = { user: user };\n      localStorage.setItem(\"user\", JSON.stringify(a));\n    })();\n  };\n  deleteAutoCopyTrade = (id, _userId) => {\n    this.setState({ deleteLoading: true });\n    axios\n      .delete(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/${id}`\n      )\n      .then(\n        (response) => {\n          this.callBackAutoTrade(_userId);\n          message.success(\"successfully deleted auto-trade\");\n          this.setState({ deleteLoading: false });\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error deleting auto-trade\");\n        }\n      );\n  };\n  submitAutoCopyTrade = (_id) => {\n    this.setState({ submitAutoCopyTradeLoading: true });\n    let payload = {\n      profitLoss: this.state.profitLoss,\n      userId: _id,\n      market: this.state.market,\n      amount: parseInt(this.state.amount),\n      assets: this.state.assets,\n      scheduledTime: this.state.scheduledTime,\n    };\n    axios\n      .post(\n        \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade\",\n        payload\n      )\n      .then(\n        (response) => {\n          this.callBackAutoTrade(this.state.userId._id);\n          this.setState({\n            profitLoss: false,\n            market: \"\",\n            amount: \"\",\n            assets: \"\",\n            scheduledTime: \"\",\n            submitAutoCopyTradeLoading: false,\n          });\n          message.success(\"successfully added auto-trade\");\n          (async () => {\n            let response = await fetch(\n              `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n            );\n            let user = await response.json();\n            this.setState({\n              user: user,\n            });\n\n            let a = { user: user };\n            localStorage.setItem(\"user\", JSON.stringify(a));\n          })();\n          (async () => {\n            let response = await fetch(\n              `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.userId._id}`\n            );\n            let userId = await response.json();\n            this.setState({\n              yourWallet: new Intl.NumberFormat('en-US').format(userId.user.user.wallet),\n              userId: userId.user.user,\n              estimatedBalance: new Intl.NumberFormat('en-US').format(userId.user.user.estimatedBalance),\n            });\n          })();\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error adding auto-trade\");\n          this.setState({ submitAutoCopyTradeLoading: false });\n        }\n      );\n  };\n\n  setDeclinedMessage = (e) => {\n    this.setState({ declinedMessage: e.target.value });\n  };\n  showDeclineIdentity = () => {\n    this.setState({\n      decline: true,\n    });\n  };\n\n  closeDeclineIdentity = () => {\n    this.setState({\n      decline: false,\n    });\n  };\n\n  setCard = () => {\n    this.setState({\n      card: true,\n      bal: false,\n      execution: false,\n      payments: false,\n      secu: false,\n      with: false,\n      orderT: false,\n    });\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/desposit${\n          this.state.userId ? this.state.userId._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        curDeposit: data,\n      });\n    })();\n  };\n\n  setWith = () => {\n    this.setState({\n      card: false,\n      bal: false,\n      execution: false,\n      payments: false,\n      secu: false,\n      with: true,\n      orderT: false,\n    });\n  };\n  setName = (e) => {};\n  setBal = () => {\n    this.setState({\n      card: false,\n      bal: true,\n      execution: false,\n      payments: false,\n      secu: false,\n      with: false,\n      orderT: false,\n    });\n  };\n\n  setSe = () => {\n    this.setState({\n      card: false,\n      bal: false,\n      execution: false,\n      payments: false,\n      secu: true,\n      with: false,\n      orderT: false,\n    });\n  };\n\n  setOrder = () => {\n    this.setState({\n      card: false,\n      bal: false,\n      execution: false,\n      payments: false,\n      secu: false,\n      with: false,\n      orderT: true,\n    });\n  };\n\n  setExecution = () => {\n    this.setState({\n      card: false,\n      bal: false,\n      execution: true,\n      payments: false,\n      secu: false,\n      with: false,\n      orderT: false,\n    });\n  };\n\n  setPay = () => {\n    this.setState({\n      card: false,\n      bal: false,\n      execution: false,\n      payments: true,\n      secu: false,\n      with: false,\n      orderT: false,\n    });\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n      );\n      let user = await response.json();\n      this.setState({\n        user: user,\n      });\n\n      let a = { user: user };\n      localStorage.setItem(\"user\", JSON.stringify(a));\n    })();\n  };\n\n  updateAmount = () => {\n    // console.log(this.state.credit);\n\n    let walletBal = this.state.user.user.user.wallet;\n\n    if (!this.state.credit && this.state.amount >= walletBal) {\n      message.error(\n        \"This transaction is not valid as it will result in a negative balance\"\n      );\n    } else {\n      this.setState({ text: \"Updating...\" });\n      console.log(this.state.userId._id, this.state.amount, this.state.credit);\n      fetch(\n        ` https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/CreditDebitAmount`,\n        {\n          mode: \"cors\",\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            id: this.state.userId._id,\n            amount: this.state.amount,\n            action: this.state.credit,\n          }),\n        }\n      )\n        .then(function (res) {\n          // console.log(res.json());\n          return res.json();\n        })\n        .then((data) => {\n          this.setState({ text: \"Save\" });\n          message.success(\"Balance updated\");\n        });\n    }\n\n    // .then((data) => {\n    //   (async () => {\n    //     let response = await fetch(\n    //       `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n    //     );\n    //     let user = await response.json();\n    //     this.setState({\n    //       user: user,\n    //     });\n\n    //     let a = { user: user };\n    //     localStorage.setItem(\"user\", JSON.stringify(a));\n    //   })();\n    //   (async () => {\n    //     let response = await fetch(\n    //       `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.userId._id}`\n    //     );\n    //     let userId = await response.json();\n    //     this.setState({\n    //       yourWallet: userId.user.user.wallet\n    //         .toString()\n    //         .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\"),\n    //       estimatedBalance: userId.user.user.estimatedBalance\n    //         .toString()\n    //         .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\"),\n    //     });\n    //   })();\n\n    //   (async () => {\n    //     let response = await fetch(\n    //       `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.userId._id}`\n    //     );\n    //     let userId = await response.json();\n    //     this.setState({\n    //       yourWallet: userId.user.user.wallet\n    //         .toString()\n    //         .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\"),\n    //       estimatedBalance: userId.user.user.estimatedBalance,\n    //     });\n    //   })();\n\n    //   if (data) {\n    //     this.setState({\n    //       displayC: false,\n    //     });\n    //     this.setState({ text: \"Save\" });\n    //   } else {\n    //     console.log(\"Error saving\");\n    //   }\n    // });\n  };\n\n  handleLiveTrade = (id) => {\n    this.setState({ liveTrade: !this.state.user.user.user.liveTrade });\n\n    // const fetchProfile = async () => {\n    //   let response = await axios.get(\n    //     `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/single/${this.state.user.user.user._id}`\n    //   );\n    //   let user = await response.json();\n    //   this.setState({\n    //     user: user,\n    //     liveTrade: this.state.user.user.user.liveTrade,\n    //   });\n\n    // let a = { user: user };\n    // localStorage.setItem(\"user\", JSON.stringify(a));\n    // };\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/liveTrade`,\n      {\n        method: \"PUT\",\n        mode: \"cors\",\n\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n\n        body: JSON.stringify({\n          id: this.state.user.user.user._id,\n          liveTrade: this.state.liveTrade,\n        }),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Live trade updated\");\n        } else message.error(\"Live trade update failed\");\n      })\n      .then((data) => {\n        console.log(this.state.liveTrade);\n      });\n  };\n\n  editUserProfile = (id) => {\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/update`, {\n      mode: \"cors\",\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify({\n        id: id,\n        email: this.state.yourEmailAddress,\n        name: this.state.yourName,\n        language: this.state.yourLanguage,\n        country: this.state.userCountry,\n        currency: this.state.yourCurrency,\n        setRole: this.state.userLevel,\n      }),\n    }).then(function (res) {\n      if (res.ok) {\n        message.success(\"profile has been updated successfully\");\n      } else message.error(\"profile update failed\");\n\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n        );\n        let user = await response.json();\n        this.setState({\n          user: user,\n        });\n        let a = { user: user };\n        localStorage.setItem(\"user\", JSON.stringify(a));\n      })();\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.userId._id}`\n        );\n        let userId = await response.json();\n        this.setState({\n          yourWallet: new Intl.NumberFormat('en-US').format(userId.user.user.wallet),\n          estimatedBalance: new Intl.NumberFormat('en-US').format(userId.user.user.estimatedBalance),\n        });\n      })();\n    });\n  };\n\n  declineVerify = (id, dmessage) => {\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/verify/decline`, {\n      mode: \"cors\",\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id, message: dmessage }),\n    }).then(function (res) {\n      if (res.ok) {\n        message.success(\"Identity was successfully declined\");\n      } else message.error(\"Identity decline was not successfull\");\n    });\n    this.setState({ declinedMessage: \"\" });\n    this.setState({ decline: false });\n  };\n  approveVerify = (id) => {\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/verify/approve`, {\n      mode: \"cors\",\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        message: \"Idenity was successfully approved\",\n      }),\n    }).then(function (res) {\n      if (res.ok) {\n        message.success(\"Identity was successfully approved\");\n      } else message.error(\"Identity approval was not successfull\");\n    });\n  };\n\n  declineWithrawal = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/withdraw/decline`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          message: \"Your request to withdraw was declined\",\n        }),\n      }\n    ).then(function (res) {\n      res.ok\n        ? message.success(\"withdrawal was successfully declined\")\n        : message.error(\"withdrawal approval was not declined\");\n    });\n  };\n\n  approveWithrawal = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/withdraw/approve`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          message: \"withdrawal was successfully approved\",\n        }),\n      }\n    ).then(function (res) {\n      if (res.ok) {\n        message.success(\"withdrawal was successfully approved\");\n      } else message.error(\"withdrawal approval was not successfull\");\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n        );\n        let user = await response.json();\n        this.setState({\n          user: user,\n        });\n\n        let a = { user: user };\n        localStorage.setItem(\"user\", JSON.stringify(a));\n      })();\n    });\n  };\n\n  declineDeposit = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit/decline`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          message: \"deposit request successfully declined\",\n        }),\n      }\n    ).then(function (res) {\n      res.ok\n        ? message.success(\"deposit was successfully declined\")\n        : message.error(\"deposit approval was not declined\");\n    });\n  };\n\n  approveDeposit = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit/approve`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          message: \"deposit was successfully approved\",\n        }),\n      }\n    ).then(function (res) {\n      if (res.ok) {\n        message.success(\"deposit was successfully approved\");\n      } else message.error(\"deposit approval was not successfull\");\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n        );\n        let user = await response.json();\n        this.setState({\n          user: user,\n        });\n\n        let a = { user: user };\n        localStorage.setItem(\"user\", JSON.stringify(a));\n      })();\n    });\n  };\n  makeAdmin = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/users/makeAdmin`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ id: id }),\n      }\n    ).then(function (res) {\n      if (res.ok) {\n        message.success(\"successfully made an Admin\");\n      } else message.error(\"error making an Admin\");\n    });\n  };\n\n  makeManager = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/users/makeManager`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ id: id }),\n      }\n    ).then(function (res) {\n      if (res.ok) {\n        message.success(\"successfully made a Manager\");\n      } else message.error(\"error making Manager\");\n    });\n  };\n\n  removeManager = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/users/removeManager`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ id: id }),\n      }\n    ).then(function (res) {\n      if (res.ok) {\n        message.success(\"successfully removed as a Manager\");\n      } else message.error(\"error removing Manager\");\n    });\n  };\n\n  removeAdmin = (id) => {\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/users/removeAdmin`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ id: id }),\n      }\n    ).then(function (res) {\n      if (res.ok) {\n        message.success(\"successfully removed as a Admin\");\n      } else message.error(\"error removing as an Admin\");\n    });\n  };\n\n  deleteUser = (id) => {\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/users/remove`, {\n      mode: \"cors\",\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    }).then(function (res) {\n      if (res.ok) {\n        message.success(\"User was successfully deleted from the database\");\n        {\n          <Router link=\"manager\" />;\n        }\n      } else message.error(\"Try again\");\n    });\n  };\n  savedAllOrders0 = JSON.parse(localStorage.getItem(\"allOrders0\"))\n    ? JSON.parse(localStorage.getItem(\"allOrders0\"))\n    : [];\n  savedAllusers = JSON.parse(localStorage.getItem(\"allUsers\"))\n    ? JSON.parse(localStorage.getItem(\"allUsers\"))\n    : [];\n\n  savedAllwith = JSON.parse(localStorage.getItem(\"ALLwith\"))\n    ? JSON.parse(localStorage.getItem(\"ALLwith\"))\n    : [];\n  savedAllDos = JSON.parse(localStorage.getItem(\"allDos\"))\n    ? JSON.parse(localStorage.getItem(\"allDos\"))\n    : [];\n  savedAlltrades = JSON.parse(localStorage.getItem(\"allTrades\"))\n    ? JSON.parse(localStorage.getItem(\"allTrades\"))\n    : [];\n  savedAllver = JSON.parse(localStorage.getItem(\"allver\"))\n    ? JSON.parse(localStorage.getItem(\"allver\"))\n    : [];\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/withdraw/AllHistory`\n      );\n      let data = await response.json();\n\n      this.setState({\n        allWithdraw: data,\n        allBankTransfor: data.filter((e) => e.method == \"Bank Transfer\"),\n      });\n      let a = { allWithdraw: data };\n\n      localStorage.setItem(\"ALLwith\", JSON.stringify(a));\n    })();\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n\n      let a = { orders: data };\n\n      localStorage.setItem(\"allOrders0\", JSON.stringify(a));\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allUser`\n      );\n      let data = await response.json();\n\n      let all = data.filter((e) => e.verify === true);\n      this.setState({\n        allUsers: data,\n        numVerified: all.length,\n      });\n      let a = { allUsers: data };\n\n      localStorage.setItem(\"allUsers\", JSON.stringify(a));\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit/AllHistory`\n      );\n      let data = await response.json();\n\n      this.setState({\n        allDeposit: data,\n      });\n      let a = { allDeposit: data };\n\n      localStorage.setItem(\"allDos\", JSON.stringify(a));\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allTrade`\n      );\n\n      let data = await response.json();\n\n      this.setState({\n        allTrades: data,\n      });\n      let a = { allTrades: data };\n\n      localStorage.setItem(\"allTrades\", JSON.stringify(a));\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/verify`\n      );\n      let data = await response.json();\n\n      this.setState({\n        allVerify: data,\n      });\n      let a = { allVerify: data };\n\n      localStorage.setItem(\"allver\", JSON.stringify(a));\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n\n    // if(this.state.userId&&this.state.userId._id){\n    //   this.setState({yourName:this.state.name})\n    // this.setState({yourName:this.state.userId.name})\n    // }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.yourWallet !== this.state.yourWallet) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.userId._id}`\n        );\n        let userId = await response.json();\n        this.setState({\n          yourWallet: new Intl.NumberFormat('en-US').format(userId.user.user.wallet),\n          estimatedBalance: new Intl.NumberFormat('en-US').format(userId.user.user.estimatedBalance),\n        });\n      })();\n    }\n    if (prevState.curDeposit !== this.state.curDeposit) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/desposit${\n            this.state.userId ? this.state.userId._id : \"\"\n          }`\n        );\n        let data = await response.json();\n        this.setState({\n          curDeposit: data,\n        });\n      })();\n    }\n    if (prevState.allVerify !== this.state.allVerify) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/verify`\n        );\n        let data = await response.json();\n        this.setState({\n          allVerify: data,\n        });\n        let a = { allVerify: data };\n        localStorage.setItem(\"allver\", JSON.stringify(a));\n      })();\n    }\n\n    if (prevState.allWithdraw !== this.state.allWithdraw) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/withdraw/AllHistory`\n        );\n        let data = await response.json();\n\n        this.setState({\n          allWithdraw: data,\n          allBankTransfor: data.filter((e) => e.method == \"Bank Transfer\"),\n        });\n        let a = { allWithdraw: data };\n\n        localStorage.setItem(\"ALLwith\", JSON.stringify(a));\n      })();\n    }\n    if (prevState.order !== this.state.order) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n            this.state.user.user ? this.state.user.user.user._id : \"\"\n          }`\n        );\n        let data = await response.json();\n        this.setState({\n          orders: data,\n        });\n        let a = { orders: data };\n        localStorage.setItem(\"allOrders0\", JSON.stringify(a));\n      })();\n    }\n    if (prevState.allUsers !== this.state.allUsers) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allUser`\n        );\n        let data = await response.json();\n        let all = data.filter((e) => e.verify === true);\n        this.setState({\n          allUsers: data,\n          numVerified: all.length,\n        });\n        let a = { allUsers: data };\n        localStorage.setItem(\"allUsers\", JSON.stringify(a));\n      })();\n    }\n    if (prevState.allDeposit !== this.state.allDeposit) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit/AllHistory`\n        );\n        let data = await response.json();\n\n        this.setState({\n          allDeposit: data,\n        });\n        let a = { allDeposit: data };\n\n        localStorage.setItem(\"allDos\", JSON.stringify(a));\n      })();\n    }\n    if (prevState.allTrades !== this.state.allTrades) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allTrade`\n        );\n        let data = await response.json();\n        this.setState({\n          allTrades: data,\n        });\n        let a = { allTrades: data };\n        localStorage.setItem(\"allTrades\", JSON.stringify(a));\n      })();\n    }\n    if (prevState.user !== this.state.user) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${this.state.user.user.user._id}`\n        );\n        let user = await response.json();\n        this.setState({\n          user: user,\n        });\n        let a = { user: user };\n        localStorage.setItem(\"user\", JSON.stringify(a));\n      })();\n    }\n  }\n\n  render() {\n    if (this.props.user === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.userId, \"idu\");\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <NavbarCo\n            user={this.state.user}\n            site={this.props.site}\n            web={this.props.web}\n          />\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.state.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.manager ? (\n                <div\n                  className=\"full-width\"\n                  style={{ paddingLeft: 0, paddingRight: 0 }}\n                >\n                  <div className=\"tabs manager-tabs\">\n                    <div manager-tab=\"statistics\" className=\"tab active\">\n                      <span>Statistics</span>\n                    </div>\n                    <div manager-tab=\"bank-transfers\" className=\"tab\">\n                      <span>Bank Transfers</span>\n                      <span className=\"notify\">\n                        <small>{this.state.allBankTransfor.length}</small>\n                      </span>\n                    </div>\n                    <div manager-tab=\"payments\" className=\"tab\">\n                      <span>Payments</span>\n                      <span className=\"notify\">\n                        <small>\n                          {\" \"}\n                          {\n                            this.state.allDeposit.filter(\n                              (e) => e.status === \"Pending\"\n                            ).length\n                          }\n                        </small>\n                      </span>\n                    </div>\n                    <div manager-tab=\"subscriptions\" className=\"tab\">\n                      <span>Subscriptions</span>\n                    </div>\n                    <div manager-tab=\"identity\" className=\"tab\">\n                      <span>Identity</span>\n                      <span className=\"notify\">\n                        <small>\n                          {\n                            this.state.allVerify.filter(\n                              (e) => e.status === \"Pending\"\n                            ).length\n                          }\n                        </small>\n                      </span>\n                    </div>\n                    <div\n                      manager-tab=\"users\"\n                      className=\"tab\"\n                      onClick={() => {\n                        this.setState({ displayC: false });\n                      }}\n                    >\n                      <span>Users</span>\n                      <span className=\"notify\">\n                        <small>{this.state.allUsers.length}</small>\n                      </span>\n                    </div>\n                    <div manager-tab=\"orders\" className=\"tab\">\n                      <span>Orders</span>\n                      <span className=\"notify\">\n                        <small>{this.state.orders.length}</small>\n                      </span>\n                    </div>\n                    <div manager-tab=\"withdraw\" className=\"tab\">\n                      <span>Withdraw</span>\n                      <span className=\"notify\">\n                        <small>\n                          {\n                            this.state.allWithdraw.filter(\n                              (e) => e.status === \"Pending\"\n                            ).length\n                          }\n                        </small>\n                      </span>\n                    </div>\n                    <div manager-tab=\"traders-approval\" className=\"tab\">\n                      <span>Traders Approvals</span>\n                    </div>\n                  </div>\n                  <div className=\"manager-tabs-details\">\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"statistics\"\n                    >\n                      <div className=\"dash-row dash-row-centralized\">\n                        <div className=\"split-50\">\n                          <h3 style={{ fontWeight: \"normal\" }}>\n                            Statistics - 04/02/2021 to 13/02/2021\n                          </h3>\n                        </div>\n                        <div className=\"split-50\" />\n                      </div>\n                      <div className=\"chart\" />\n                      <div className=\"dash-row\" style={{ margin: \"15px 0\" }}>\n                        <div className=\"into-6\">\n                          <h5 className=\"text-uppercase\">New user</h5>\n                          <h2>\n                            {this.savedAllusers.allUsers\n                              ? this.savedAllusers.allUsers.length\n                              : 0}\n                          </h2>\n                        </div>\n                        <div className=\"into-6\">\n                          <h5 className=\"text-uppercase\">Deposit</h5>\n                          <h2>\n                            {this.state.allDeposit\n                              ? this.state.allDeposit.length\n                              : 0}\n                          </h2>\n                        </div>\n                        <div className=\"into-6\">\n                          <h5 className=\"text-uppercase\">Withdraw</h5>\n                          <h2>\n                            {this.savedAllwith.allWithdraw\n                              ? this.savedAllwith.allWithdraw.length\n                              : 0}\n                          </h2>\n                        </div>\n                        <div className=\"into-6\">\n                          <h5 className=\"text-uppercase\">\n                            Identity verification\n                          </h5>\n                          <h2>\n                            {/* {this.savedAllver.savedAllver\n                              ? this.savedAllver.allVerify.length\n                              : 0} */}\n                            {this.state.numVerified}\n                          </h2>\n                        </div>\n                        <div className=\"into-6\">\n                          <h5 className=\"text-uppercase\">Order passed</h5>\n                          <h2>\n                            {this.savedAlltrades.savedAlltrades\n                              ? this.savedAlltrades.allTrades.length\n                              : 0}\n                          </h2>\n                        </div>\n                        <div className=\"into-6\">\n                          <h5 className=\"text-uppercase\">New subscription</h5>\n                          <h2>0</h2>\n                        </div>\n                      </div>\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Currency</th>\n                            <th>Total Trade</th>\n                            <th>Total Deposit</th>\n                            <th>Total Withdraw</th>\n                            <th>Fees</th>\n                          </tr>\n                          <tr>\n                            <td>EUR</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                          </tr>\n                          <tr>\n                            <td>EUR</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                          </tr>\n                          <tr>\n                            <td>EUR</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                          </tr>\n                          <tr>\n                            <td>EUR</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                          </tr>\n                          <tr>\n                            <td>EUR</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                            <td>0.00</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"bank-transfers\"\n                    >\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>User</th>\n                            <th>Ref.</th>\n                            <th>Created date</th>\n                            <th>Status</th>\n                            <th>Processed</th>\n                            <th>Amount</th>\n                            <th>Bank Ref.</th>\n                            <th>Proof recieved</th>\n                            <th />\n                          </tr>\n                          {this.state.allBankTransfor.map((e, index) => (\n                            <tr>\n                              <td>\n                                #{index + 1}- {e.name}\n                              </td>\n                              <td className=\"font-weight-bold\">{e.Ref}</td>\n                              <td> {e.time}</td>\n                              <td>\n                                {e.status == \"Pending\" ? (\n                                  <span className=\"pending\">Pending</span>\n                                ) : e.status == \"Approved\" ? (\n                                  <span className=\"validate\">Approved</span>\n                                ) : e.status == \"Declined\" ? (\n                                  <span className=\"btn-danger\">Declined</span>\n                                ) : null}\n                              </td>\n                              <td>\n                                {e.status === \"Pending\" ? (\n                                  <span className=\"not-processed\">\n                                    Not Processed\n                                  </span>\n                                ) : (\n                                  <span className=\"processed\">Processed</span>\n                                )}\n                              </td>\n                              <td>\n                                {e.currency} {e.amount}\n                              </td>\n                              <td>-</td>\n                              <td>No proof received</td>\n                              <td>\n                                <div\n                                  className=\"validate\"\n                                  onClick={(a) => this.approveWithrawal(e._id)}\n                                  style={{\n                                    display: e.status !== \"Pending\" && \"none\",\n                                  }}\n                                >\n                                  Validate\n                                </div>\n                                <div\n                                  style={{\n                                    display: e.status !== \"Pending\" && \"none\",\n                                  }}\n                                  className=\"cancel\"\n                                  onClick={(a) => this.declineWithrawal(e._id)}\n                                >\n                                  Cancel\n                                </div>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"payments\"\n                    >\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>User</th>\n                            <th>Ref.</th>\n                            <th>Created date</th>\n                            <th>Status</th>\n                            <th>Amount paid</th>\n                            <th>Fees</th>\n                            <th>Wallet received</th>\n                            <th>Amount received</th>\n                            <th>Payment gateway</th>\n                            <th>Payment Details</th>\n                            <th />\n                          </tr>\n                          {this.state.allDeposit.map((e, index) => (\n                            <tr key={index}>\n                              <td>\n                                #{index + 1} - {e.name}\n                              </td>\n                              <td className=\"font-weight-bold\">{e.Ref}</td>\n                              <td>{e.time}</td>\n                              <td>\n                                {e.status == \"Pending\" ? (\n                                  <span className=\"pending\">Not Proccesed</span>\n                                ) : e.status == \"Approved\" ? (\n                                  <span className=\"validate\">Paid</span>\n                                ) : e.status == \"Declined\" ? (\n                                  <span className=\"cancel\">Declined</span>\n                                ) : null}\n                              </td>\n                              <td>\n                                {e.amount\n                                  ? new Intl.NumberFormat('en-US').format(e.amount)\n                                  : \"\"}{\" \"}\n                                USD\n                              </td>\n                              <td>{e.fee}USD</td>\n                              <td>USD</td>\n                              <td className=\"font-weight-bold\">\n                                {e.amount} USD\n                              </td>\n                              <td>{e.method}</td>\n                              <td>\n                                {\" \"}\n                                <PaymentDetailsPopOver details={e} />\n                              </td>\n                              <td>\n                                <div\n                                  className=\"validate\"\n                                  onClick={(a) => {\n                                    this.approveDeposit(e._id);\n                                  }}\n                                  style={{\n                                    display: e.status !== \"Pending\" && \"none\",\n                                  }}\n                                >\n                                  Validate\n                                </div>\n                                <div\n                                  className=\"cancel\"\n                                  onClick={(a) => {\n                                    this.declineDeposit(e._id);\n                                  }}\n                                  style={{\n                                    display: e.status !== \"Pending\" && \"none\",\n                                  }}\n                                >\n                                  Cancel\n                                </div>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"subscriptions\"\n                    >\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>ID Subscription</th>\n                            <th>User</th>\n                            <th>Date subscription</th>\n                            <th>Number days</th>\n                            <th>Subscription expire in</th>\n                            <th>Type payment</th>\n                            <th>Charge infos.</th>\n                          </tr>\n                          <tr>\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"identity\"\n                    >\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>User</th>\n                            <th>Submited date</th>\n                            <th>Status</th>\n                            <th>Identity Info</th>\n                            <th>Documents</th>\n                            <th />\n                          </tr>\n                          {this.state.allVerify.map((e, index) => (\n                            <tr key={index}>\n                              {this.state.decline ? (\n                                <section\n                                  className=\"withdraw-modal-box\"\n                                  style={{ display: \"block\" }}\n                                >\n                                  <div\n                                    className=\"withdraw-modal support-modal pb-5\"\n                                    style={{ maxWidth: \"500px\" }}\n                                  >\n                                    <div className=\"header\">\n                                      Decline Identity\n                                    </div>\n                                    <span\n                                      className=\"close\"\n                                      onClick={this.closeDeclineIdentity}\n                                    >\n                                      <svg\n                                        id=\"lnr-cross \"\n                                        viewBox=\"0 0 1024 1024\"\n                                      >\n                                        <title>cross</title>\n                                        <path\n                                          className=\"path1\"\n                                          d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                                        />\n                                      </svg>\n                                    </span>{\" \"}\n                                    <Container fluid>\n                                      <Form className=\"text-left\">\n                                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                          <Form.Label\n                                            className=\"py-4\"\n                                            style={{ color: \"#fff\" }}\n                                          >\n                                            Write below the reason for rejection\n                                          </Form.Label>\n                                          <Form.Control\n                                            value={this.state.declinedMessage}\n                                            onChange={this.setDeclinedMessage}\n                                            as=\"textarea\"\n                                            rows={5}\n                                          />\n                                        </Form.Group>\n                                        <div className=\"text-right\">\n                                          <Button\n                                            variant=\"primary mt-3\"\n                                            onClick={(a) =>\n                                              this.declineVerify(\n                                                e.userId,\n                                                this.state.declinedMessage\n                                              )\n                                            }\n                                          >\n                                            Confirm\n                                          </Button>\n                                        </div>\n                                      </Form>\n                                    </Container>\n                                  </div>\n                                </section>\n                              ) : (\n                                \"\"\n                              )}\n                              <td>\n                                #{index + 1}- {e.name}\n                              </td>\n                              <td>\n                                <Moment format=\"DD/MM/YYYY\">{e.time}</Moment>\n                              </td>\n                              <td>\n                                {e.status == \"Pending\" ? (\n                                  <span className=\"pending\">Not Proccesed</span>\n                                ) : e.status == \"Approved\" ? (\n                                  <span className=\"validate\">Approved</span>\n                                ) : e.status == \"Declined\" ? (\n                                  <span className=\"pending\">Declined</span>\n                                ) : null}\n                              </td>\n                              <td>{<VerifyDetailsPopOver details={e} />}</td>\n                              <td>\n                                <a href=\"#\" className=\"sec-bt\">\n                                  {/* Step 1: Identity */}\n                                  <VerifyDocModal\n                                    text={e.documentName}\n                                    title={e.documentName}\n                                    file={e.documentFile}\n                                    Img={e.Img}\n                                    proofDocument={e.proofDocument}\n                                  />\n                                </a>\n                              </td>\n                              <td>\n                                <div\n                                  style={{\n                                    display: e.status == \"Approved\" && \"none\",\n                                  }}\n                                  className=\"validate \"\n                                  onClick={(a) => this.approveVerify(e.userId)}\n                                >\n                                  Accept\n                                </div>\n                                <div\n                                  className=\"cancel\"\n                                  style={{\n                                    display: e.status == \"Declined\" && \"none\",\n                                  }}\n                                  onClick={this.showDeclineIdentity}\n                                >\n                                  Decline\n                                </div>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                    <div className=\"manager-tab-dtls\" manager-tab-dtls=\"users\">\n                      {!this.state.displayC ? (\n                        <div className=\"first-sec\">\n                          <table>\n                            <tbody>\n                              <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Signin method</th>\n                                <th>Last login</th>\n                                <th>Notifications enabled</th>\n                                <th>Currency</th>\n                                <th>Auto Trade</th>\n                              </tr>\n                              {this.state.allUsers &&\n                                this.state.allUsers.map((user) => (\n                                  <tr\n                                    onClick={() => (\n                                      this.setState({\n                                        userId: user,\n                                        displayC: true,\n                                        yourEmailAddress: user.email,\n                                        yourName: user.name,\n                                        yourWallet: new Intl.NumberFormat('en-US').format(user.wallet),\n                                        estimatedBalance: user.estimatedBalance,\n                                        yourCurrency: user.currency,\n                                        yourLanguage: user.language,\n                                        userLevel: user.isAdmin\n                                          ? \"isAdmin\"\n                                          : user.isManager\n                                          ? \"isManager\"\n                                          : \"none\",\n                                      }),\n                                      this.callBackAutoTrade(user._id)\n                                    )}\n                                  >\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        <div className=\"dash-row dash-row-centralized\">\n                                          <div className=\"profile\" />\n                                          <div className=\"name\">\n                                            <span>{user.name}</span>\n                                          </div>\n                                          <div className=\"active\" />\n                                        </div>\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        {user.email}\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        Standard\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        {\" \"}\n                                        <Moment fromNow ago>\n                                          {user.time}\n                                        </Moment>\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        {user.notificationsEnabled\n                                          ? \"Yes\"\n                                          : \"No\"}\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        {user.currency}\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a dash-action=\"show-users-details\">\n                                        {user.isTrading ? \"ON\" : \"Off\"}\n                                      </a>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                          </table>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n\n                      {this.state.displayC ? (\n                        <div\n                          className=\"second-sec\"\n                          style={{ display: \"block\" }}\n                        >\n                          <div\n                            className=\"user-dtls-tab\"\n                            style={{ display: \"block\" }}\n                          >\n                            <div\n                              className={this.state.card ? \"live\" : \"\"}\n                              onClick={this.setCard}\n                              dash-user-dtls-tab=\"card\"\n                            >\n                              Card\n                            </div>\n                            <div\n                              dash-user-dtls-tab=\"balances\"\n                              onClick={this.setBal}\n                              className={this.state.bal ? \"live\" : \"\"}\n                            >\n                              Balances\n                            </div>\n                            <div\n                              dash-user-dtls-tab=\"balances\"\n                              onClick={this.setExecution}\n                              className={this.state.execution ? \"live\" : \"\"}\n                            >\n                              Auto Copy Trading\n                            </div>\n                            <div\n                              dash-user-dtls-tab=\"balances\"\n                              onClick={this.setPay}\n                              className={this.state.payments ? \"live\" : \"\"}\n                            >\n                              Payments\n                            </div>\n                            <div\n                              dash-user-dtls-tab=\"balances\"\n                              onClick={this.setWith}\n                              className={this.state.with ? \"live\" : \"\"}\n                            >\n                              Withdraw\n                            </div>\n                            <div\n                              dash-user-dtls-tab=\"balances\"\n                              onClick={this.setOrder}\n                              className={this.state.orderT ? \"live\" : \"\"}\n                            >\n                              Orders\n                            </div>\n                            <div\n                              dash-user-dtls-tab=\"balances\"\n                              onClick={this.setSe}\n                              className={this.state.secu ? \"live\" : \"\"}\n                            >\n                              Security\n                            </div>\n                          </div>\n                          <div className=\"user-dtls-tab-dtls\">\n                            {this.state.card ? (\n                              <div dash-user-dtls-tab-dtls=\"card\">\n                                <div className=\"dtls-sec\">\n                                  <div className=\"dash-row dash-row-centralized header\">\n                                    <div className=\"user-detail dash-row dash-row-centralized\">\n                                      <div\n                                        className=\"image\"\n                                        style={{ backgroundImage: \"url()\" }}\n                                      />\n                                      <div className=\"dtls\">\n                                        <div className=\"name font-weight-bold font-size-18\">\n                                          {this.state.userId.name}\n                                        </div>\n                                        <div className=\"email font-size-14\">\n                                          {this.state.userId.email}\n                                        </div>\n                                        <div className=\"dash-row dash-row-centralized font-size-12\">\n                                          <div\n                                            className=\"country-flag\"\n                                            style={{ backgroundImage: \"url()\" }}\n                                          />\n                                          <div className=\"country text-uppercase\">\n                                            {this.state.userId.country\n                                              ? this.state.userId.country\n                                              : \"\"}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"estimate dash-row dash-row-centralized\">\n                                      <div className=\"estimated-card\">\n                                        <div className=\"font-size-14 font-weight-bold\">\n                                          ESTIMATE BALANCE IN{\" \"}\n                                          <span style={{ color: \"#ff7700\" }}>\n                                            USD\n                                          </span>\n                                        </div>\n                                        <div>\n                                          <h2\n                                            style={{\n                                              margin: 0,\n                                              marginTop: \"10px\",\n                                              color: \"#29c359\",\n                                            }}\n                                          >\n                                            {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}\n                                            {\"\"} USD\n                                          </h2>\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          paddingLeft: \"20px\",\n                                          width: \"30%\",\n                                        }}\n                                      >\n                                        {this.state.user.user.user.liveTrade ? (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"green\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn off Live Trade\n                                          </button>\n                                        ) : (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"red\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn on Live Trade\n                                          </button>\n                                        )}\n\n                                        <button\n                                          className=\"edit-profile\"\n                                          style={{ backgroundColor: \"#363c4f\" }}\n                                          onClick={() =>\n                                            this.setState({ editProfile: true })\n                                          }\n                                        >\n                                          Edit profile\n                                        </button>\n                                        <button\n                                          style={{ backgroundColor: \"#e30f0f\" }}\n                                          className=\"delete-profile\"\n                                          onClick={(a) =>\n                                            this.deleteUser(\n                                              this.state.userId._id\n                                            )\n                                          }\n                                        >\n                                          Delete profile\n                                        </button>\n                                      </div>\n                                    </div>\n                                    <div className=\"hr\" />\n                                  </div>\n                                  <div className=\"dash-row white-card\">\n                                    <div className=\"table\">\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Name</div>\n                                        <div className=\"td\">\n                                          {this.state.userId.name}\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Last location</div>\n                                        <div className=\"td\">\n                                          {this.state.userId.country\n                                            ? this.state.userId.country\n                                            : \"\"}\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Phone</div>\n                                        <div className=\"td\">\n                                          {this.state.userId.phone\n                                            ? this.state.userId.phone\n                                            : \"\"}\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Last login</div>\n                                        <div className=\"td\">-</div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Language</div>\n                                        <div className=\"td\">\n                                          {\" \"}\n                                          {this.state.userId.languahe}\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Currency use</div>\n                                        <div className=\"td\">\n                                          {\" \"}\n                                          {this.state.userId.currency}\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"table\">\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Signup with</div>\n                                        <div className=\"td\">Standard</div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">\n                                          Identity verification\n                                        </div>\n                                        <div className=\"td\">\n                                          <span\n                                            style={{\n                                              backgroundColor: \"#0579f8\",\n                                              color: \"#fff\",\n                                              display: \"block\",\n                                              padding: \"2px 5px\",\n                                            }}\n                                          >\n                                            IN VERIFICATION\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Notification</div>\n                                        <div className=\"td\">\n                                          <span\n                                            style={{\n                                              backgroundColor: \"#ef3131\",\n                                              color: \"#fff\",\n                                              display: \"block\",\n                                              padding: \"2px 5px\",\n                                            }}\n                                          >\n                                            DISABLED\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">\n                                          2 Step Authentification\n                                        </div>\n                                        <div className=\"td\">\n                                          <span\n                                            style={{\n                                              backgroundColor: \"#ef3131\",\n                                              color: \"#fff\",\n                                              display: \"block\",\n                                              padding: \"2px 5px\",\n                                            }}\n                                          >\n                                            DISABLED\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">Created date</div>\n                                        <div className=\"td\">\n                                          {this.state.userId.time\n                                            ? this.state.userId.time.slice(\n                                                0,\n                                                10\n                                              )\n                                            : \"\"}\n                                        </div>\n                                      </div>\n                                      <div className=\"dash-row dash-row-centralized\">\n                                        <div className=\"th\">User status</div>\n                                        <div className=\"td\">\n                                          <span\n                                            style={{\n                                              backgroundColor: \"#39d95f\",\n                                              color: \"#fff\",\n                                              display: \"block\",\n                                              padding: \"2px 5px\",\n                                            }}\n                                          >\n                                            ACTIVE\n                                          </span>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"dash-row\">\n                                  <div className=\"login-history\">\n                                    <div className=\"header\">\n                                      <span className=\"text-uppercase font-weight-bold font-size-14\">\n                                        Login History\n                                      </span>\n                                    </div>\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                          <td>\n                                            <div className=\"dash-row dash-row-centralized\">\n                                              <div\n                                                className=\"country-flag\"\n                                                style={{\n                                                  backgroundImage: \"url()\",\n                                                }}\n                                              />\n                                              <div className=\"country-name\">\n                                                Bucharest (Romania)\n                                              </div>\n                                            </div>\n                                          </td>\n                                          <td>86.105.9.12</td>\n                                          <td>23/02/2021 14:07:49</td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </div>\n                                  <div className=\"deposit-history\">\n                                    <div className=\"header\">\n                                      <span className=\"text-uppercase font-weight-bold font-size-14\">\n                                        Deposit History\n                                      </span>\n                                    </div>\n                                    <table>\n                                      <tbody>\n                                        {this.state.curDeposit.map((item) => (\n                                          <tr>\n                                            <td>{item._id}</td>\n                                            <td>{item.time}</td>\n                                            <td></td>\n                                            <td>\n                                              Manager update {item.amount} USD\n                                            </td>\n                                            <td>{item.amount} USD</td>\n                                          </tr>\n                                        ))}\n                                      </tbody>\n                                    </table>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {this.state.bal ? (\n                              <div\n                                dash-user-dtls-tab-dtls=\"balances\"\n                                style={{ display: \"block\" }}\n                              >\n                                <div className=\"dtls-sec\">\n                                  <div className=\"dash-row dash-row-centralized header\">\n                                    <div className=\"user-detail dash-row dash-row-centralized\">\n                                      <div\n                                        className=\"image\"\n                                        style={{ backgroundImage: \"url()\" }}\n                                      />\n                                      <div className=\"dtls\">\n                                        <div className=\"name font-weight-bold font-size-18\">\n                                          {this.state.userId.name}\n                                        </div>\n                                        <div className=\"email font-size-14\">\n                                          {this.state.userId.gmail}\n                                        </div>\n                                        <div className=\"dash-row dash-row-centralized font-size-12\">\n                                          <div\n                                            className=\"country-flag\"\n                                            style={{ backgroundImage: \"url()\" }}\n                                          />\n                                          <div className=\"country text-uppercase\">\n                                            {this.state.userId.country\n                                              ? this.state.userId.country\n                                              : \"\"}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"estimate dash-row dash-row-centralized\">\n                                      <div className=\"estimated-card\">\n                                        <div className=\"font-size-14 font-weight-bold\">\n                                          ESTIMATE BALANCE IN{\" \"}\n                                          <span style={{ color: \"#ff7700\" }}>\n                                            USD\n                                          </span>\n                                        </div>\n                                        <div>\n                                          <h2\n                                            style={{\n                                              margin: 0,\n                                              marginTop: \"10px\",\n                                              color: \"#29c359\",\n                                            }}\n                                          >\n                                            {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}\n                                            {\"\"} USD\n                                          </h2>\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          paddingLeft: \"20px\",\n                                          width: \"30%\",\n                                        }}\n                                      >\n                                        {this.state.user.user.user.liveTrade ? (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"green\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn off Live Trade\n                                          </button>\n                                        ) : (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"red\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn on Live Trade\n                                          </button>\n                                        )}\n                                        <button\n                                          className=\"edit-profile\"\n                                          style={{ backgroundColor: \"#363c4f\" }}\n                                        >\n                                          Edit profile\n                                        </button>\n                                        <button\n                                          style={{ backgroundColor: \"#e30f0f\" }}\n                                          className=\"delete-profile\"\n                                        >\n                                          Delete profile\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div\n                                  className=\"public-card white-card\"\n                                  style={{ marginTop: \"15px\" }}\n                                >\n                                  <div className=\"each-row dash-row\">\n                                    <div className=\"dtls\">\n                                      <h4>Select balance</h4>\n                                    </div>\n                                    <div className=\"actions\">\n                                      <select className=\"dash-select-short\">\n                                        <option value=\"USD\">USD</option>\n                                      </select>\n                                    </div>\n                                  </div>\n                                  <div className=\"each-row dash-row\">\n                                    <div className=\"dtls\">\n                                      <h4>Modification type</h4>\n                                    </div>\n                                    <div className=\"actions\">\n                                      <select\n                                        className=\"dash-select-short\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            credit: JSON.parse(e.target.value),\n                                          });\n                                        }}\n                                      >\n                                        <option value=\"true\">Credit</option>\n                                        <option value=\"false\">Debit</option>\n                                      </select>\n                                    </div>\n                                  </div>\n                                  <div className=\"each-row dash-row\">\n                                    <div className=\"dtls\">\n                                      <h4>Modification value</h4>\n                                    </div>\n                                    <div className=\"actions\">\n                                      <input\n                                        className=\"dash-input\"\n                                        type=\"number\"\n                                        name=\"text\"\n                                        placeholder=\"0.00\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            amount: e.target.value,\n                                          });\n                                        }}\n                                      />\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"save-btn\">\n                                  <button\n                                    onClick={this.updateAmount.bind(this)}\n                                  >\n                                    {this.state.text}\n                                  </button>\n                                </div>\n                                <div className=\"dash-row\">\n                                  <div className=\"width-50\">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                          <td>USD</td>\n                                          <td>250.00000000 USD</td>\n                                          <td>250.00000000 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>Binance Coin (BNB)</td>\n                                          <td>0.00 BNB</td>\n                                          <td>0.00 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>USD</td>\n                                          <td>250.00000000 USD</td>\n                                          <td>250.00000000 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>Binance Coin (BNB)</td>\n                                          <td>0.00 BNB</td>\n                                          <td>0.00 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>USD</td>\n                                          <td>250.00000000 USD</td>\n                                          <td>250.00000000 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>Binance Coin (BNB)</td>\n                                          <td>0.00 BNB</td>\n                                          <td>0.00 USD</td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </div>\n                                  <div className=\"width-50\">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                          <td>USD</td>\n                                          <td>250.00000000 USD</td>\n                                          <td>250.00000000 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>Binance Coin (BNB)</td>\n                                          <td>0.00 BNB</td>\n                                          <td>0.00 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>USD</td>\n                                          <td>250.00000000 USD</td>\n                                          <td>250.00000000 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>Binance Coin (BNB)</td>\n                                          <td>0.00 BNB</td>\n                                          <td>0.00 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>USD</td>\n                                          <td>250.00000000 USD</td>\n                                          <td>250.00000000 USD</td>\n                                        </tr>\n                                        <tr>\n                                          <td>Binance Coin (BNB)</td>\n                                          <td>0.00 BNB</td>\n                                          <td>0.00 USD</td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {this.state.execution ? (\n                              <Row\n                                className=\"px-3\"\n                                style={{ marginBottom: \"10%\" }}\n                              >\n                                <Col md={4} className=\"mt-5\">\n                                  <Card style={{ background: \"#fff\" }}>\n                                    <Card.Body>\n                                      <h6>\n                                        Current Balance:{\" \"}\n                                        <span\n                                          style={{\n                                            fontSize: \"1.2rem\",\n                                            color: \"green\",\n                                            fontWeight: \"bold\",\n                                          }}\n                                        >\n                                          $\n                                          {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}\n                                        </span>\n                                      </h6>\n                                      <h6>\n                                        Name:\n                                        {this.state.userId.name}\n                                      </h6>\n                                      <h6>\n                                        Email:\n                                        {this.state.userId.email}\n                                      </h6>\n\n                                      <Form className=\"user-form\">\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">\n                                            Amount\n                                          </Form.Label>\n                                          <Form.Control\n                                            type=\"number\"\n                                            onChange={(e) =>\n                                              this.setState({\n                                                amount: e.target.value,\n                                              })\n                                            }\n                                            value={this.state.amount}\n                                          />\n                                        </Form.Group>\n                                        <Row>\n                                          <Col md={6}>\n                                            <Form.Check\n                                              onChange={(e) =>\n                                                this.setState({\n                                                  profitLoss: true,\n                                                })\n                                              }\n                                              type=\"radio\"\n                                              label=\"Profit\"\n                                              id=\"default-radio\"\n                                              name=\"profitloss\"\n\n                                              //   onChange={e=>this.setState({ profit:e.target.checked})}\n                                              //  checked={this.state.profit}\n                                            />\n                                          </Col>\n                                          <Col md={6}>\n                                            <Form.Check\n                                              onChange={(e) =>\n                                                this.setState({\n                                                  profitLoss: false,\n                                                })\n                                              }\n                                              type=\"radio\"\n                                              label=\"Loss\"\n                                              id=\"default-radio\"\n                                              name=\"profitloss\"\n                                              // checked={this.state.Loss}\n                                            />\n                                          </Col>\n                                        </Row>\n                                        <Form.Group className=\"d-flex align-items-center mt-3\">\n                                          <Form.Label\n                                            htmlFor=\"markets\"\n                                            className=\"mr-3\"\n                                          >\n                                            Markets\n                                          </Form.Label>\n                                          <Form.Control\n                                            as=\"select\"\n                                            id=\"markets\"\n                                            custom\n                                            onChange={(e) =>\n                                              this.setState({\n                                                market: e.target.value,\n                                              })\n                                            }\n                                            value={this.state.market}\n                                          >\n                                            <option value=\"stocks\">\n                                              Stocks\n                                            </option>\n                                            <option value=\"forex\">Forex</option>\n                                            <option value=\"indices\">\n                                              Indices\n                                            </option>\n                                            <option value=\"commodities\">\n                                              Commodities\n                                            </option>\n                                            <option value=\"cryptocurrency\">\n                                              Cryptocurrency\n                                            </option>\n                                          </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">\n                                            Assets\n                                          </Form.Label>\n                                          <Form.Control\n                                            type=\"text\"\n                                            onChange={(e) =>\n                                              this.setState({\n                                                assets: e.target.value,\n                                              })\n                                            }\n                                            value={this.state.assets}\n                                          />\n                                        </Form.Group>\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">\n                                            Time\n                                          </Form.Label>\n                                          <Row>\n                                            <Col md={6}>\n                                              {/* <Form.Check\n                                                type=\"radio\"\n                                                label=\"Schedule\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                              /> */}\n\n                                              <Form.Check\n                                                type=\"radio\"\n                                                label=\"Schedule\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                                onChange={(e) =>\n                                                  this.setState({\n                                                    schdule: true,\n                                                    copytradeBtn: true,\n                                                    scheduledTime: null,\n                                                  })\n                                                }\n                                              />\n                                            </Col>\n                                            <Col md={6}>\n                                              <Form.Check\n                                                type=\"radio\"\n                                                label=\"Now\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                                onChange={(e) =>\n                                                  this.setState({\n                                                    schdule: false,\n                                                    checkDate: e.target.checked,\n                                                    copytradeBtn:\n                                                      e.target.checked === true\n                                                        ? false\n                                                        : true,\n                                                    scheduledTime:\n                                                      e.target.checked === true\n                                                        ? new Date()\n                                                        : null,\n                                                  })\n                                                }\n                                              />\n                                            </Col>\n                                          </Row>\n                                        </Form.Group>\n                                        {this.state.schdule ? (\n                                          <Form.Group>\n                                            <Row>\n                                              <span className=\"autoTSpan\">\n                                                Calender\n                                              </span>\n                                              <DatePicker\n                                                showTime\n                                                onChange={this.onChangeDate}\n                                                onOk={this.onOkDate}\n                                              />\n                                            </Row>\n                                          </Form.Group>\n                                        ) : (\n                                          \"\"\n                                        )}\n                                        <div className=\"text-right\">\n                                          <Button\n                                            disabled={this.state.copytradeBtn}\n                                            type=\"primary\"\n                                            type=\"button\"\n                                            onClick={() =>\n                                              this.submitAutoCopyTrade(\n                                                this.state.userId._id\n                                              )\n                                            }\n                                          >\n                                            {this.state\n                                              .submitAutoCopyTradeLoading ? (\n                                              <>\n                                                <i className=\"fa fa-spin fa-spinner\"></i>\n                                                Applying...\n                                              </>\n                                            ) : (\n                                              \"Apply\"\n                                            )}\n                                          </Button>\n                                        </div>\n                                      </Form>\n                                    </Card.Body>\n                                  </Card>\n                                </Col>\n                                <Col md={8} className=\"mt-5\">\n                                  <div className=\"autoT\">\n                                    <div\n                                      style={{\n                                        marginTop: \"7%\",\n                                      }}\n                                    >\n                                      <h4 style={{ color: \"white\" }}>\n                                        {\" \"}\n                                        AutoCopy Trader - Queue :{\" \"}\n                                      </h4>\n                                    </div>\n                                    <div>\n                                      <h3\n                                        style={{ color: \"white\" }}\n                                      >{`$ ${new Intl.NumberFormat('en-US').format(this.state.estimatedBalance)}`}</h3>\n                                      <p>Estimated balance on</p>\n                                      <p>\n                                        <Moment format=\"DD MMMM YYYY\">\n                                          {this.state.userId.lastAutoTradeDate}\n                                        </Moment>{\" \"}\n                                      </p>\n                                    </div>\n                                  </div>\n\n                                  <Table responsive hover>\n                                    <thead>\n                                      <tr>\n                                        <th>S/N</th>\n                                        <th>Market</th>\n                                        <th>Asset</th>\n                                        <th>Amount</th>\n                                        <th>P/L</th>\n                                        <th>Date</th>\n                                        <th>Action</th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {this.state.userAutoCopyTradedata.map(\n                                        (data, index) => (\n                                          <tr key={index}>\n                                            <td>{index + 1}</td>\n                                            <td>{data.market}</td>\n                                            <td>{data.assets}</td>\n                                            <td>\n                                              $\n                                              {new Intl.NumberFormat('en-US').format(data.amount)}\n                                            </td>\n                                            <td>\n                                              {data.profitLoss\n                                                ? \"Profit\"\n                                                : \"Loss\"}\n                                            </td>\n                                            <td>\n                                              <Moment format=\"hh:mm - DD MMMM YYYY\">\n                                                {data.scheduledTime}\n                                              </Moment>\n                                            </td>\n                                            <td>\n                                              <EditAutoCopyTrade\n                                                id={data._id}\n                                                callback={() =>\n                                                  this.callBackAutoTrade(\n                                                    data.userId\n                                                  )\n                                                }\n                                              >\n                                                <Tag\n                                                  color=\"blue\"\n                                                  style={{ cursor: \"pointer\" }}\n                                                >\n                                                  Edit\n                                                </Tag>\n                                              </EditAutoCopyTrade>\n                                              <Tag\n                                                style={{ cursor: \"pointer\" }}\n                                                onClick={() =>\n                                                  this.deleteAutoCopyTrade(\n                                                    data._id,\n                                                    data.userId\n                                                  )\n                                                }\n                                                color=\"red\"\n                                              >\n                                                {this.state.deleteLoading ? (\n                                                  <i className=\"fa fa-spin fa-spinner\"></i>\n                                                ) : (\n                                                  \"Delete\"\n                                                )}\n                                              </Tag>\n                                            </td>\n                                          </tr>\n                                        )\n                                      )}\n                                    </tbody>\n                                  </Table>\n                                </Col>\n                              </Row>\n                            ) : (\n                              \"\"\n                            )}\n                            {this.state.payments ? (\n                              <div\n                                dash-user-dtls-tab-dtls=\"payments\"\n                                style={{ display: \"block\" }}\n                              >\n                                <div className=\"dtls-sec\">\n                                  <div className=\"dash-row dash-row-centralized header\">\n                                    <div className=\"user-detail dash-row dash-row-centralized\">\n                                      <div\n                                        className=\"image\"\n                                        style={{ backgroundImage: \"url()\" }}\n                                      />\n                                      <div className=\"dtls\">\n                                        <div className=\"name font-weight-bold font-size-18\">\n                                          {this.state.userId.name}\n                                        </div>\n                                        <div className=\"email font-size-14\">\n                                          {this.state.userId.email}\n                                        </div>\n                                        <div className=\"dash-row dash-row-centralized font-size-12\">\n                                          <div\n                                            className=\"country-flag\"\n                                            style={{ backgroundImage: \"url()\" }}\n                                          />\n                                          <div className=\"country text-uppercase\">\n                                            {this.state.userId.country\n                                              ? this.state.country\n                                              : \"\"}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"estimate dash-row dash-row-centralized\">\n                                      <div className=\"estimated-card\">\n                                        <div className=\"font-size-14 font-weight-bold\">\n                                          ESTIMATE BALANCE IN{\" \"}\n                                          <span style={{ color: \"#ff7700\" }}>\n                                            USD\n                                          </span>\n                                        </div>\n                                        <div>\n                                          <h2\n                                            style={{\n                                              margin: 0,\n                                              marginTop: \"10px\",\n                                              color: \"#29c359\",\n                                            }}\n                                          >\n                                            {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}{\" \"}\n                                            USD\n                                          </h2>\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          paddingLeft: \"20px\",\n                                          width: \"30%\",\n                                        }}\n                                      >\n                                        {this.state.user.user.user.liveTrade ? (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"green\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn off Live Trade\n                                          </button>\n                                        ) : (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"red\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn on Live Trade\n                                          </button>\n                                        )}\n                                        <button\n                                          className=\"edit-profile\"\n                                          style={{ backgroundColor: \"#363c4f\" }}\n                                        >\n                                          Edit profile\n                                        </button>\n                                        <button\n                                          style={{ backgroundColor: \"#e30f0f\" }}\n                                          className=\"delete-profile\"\n                                        >\n                                          Delete profile\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <table>\n                                    <tbody>\n                                      <tr>\n                                        <th>User</th>\n                                        <th>Ref.</th>\n                                        <th>Created date</th>\n                                        <th>Status</th>\n                                        <th>Amount paid</th>\n                                        <th>Fees</th>\n                                        <th>Wallet received</th>\n                                        <th>Amount received</th>\n                                        <th>Payment gateway</th>\n                                        <th>Proof</th>\n                                        <th />\n                                      </tr>\n                                      <tr>\n                                        <td>#89 - Makin Chris</td>\n                                        <td className=\"font-weight-bold\">\n                                          linkinvest-4OU7-3798\n                                        </td>\n                                        <td>08/02/2021 06:32:53</td>\n                                        <td>\n                                          <span className=\"validate\">Paid</span>\n                                        </td>\n                                        <td>306.00000000 USD</td>\n                                        <td>0.00 USD</td>\n                                        <td>USD</td>\n                                        <td className=\"font-weight-bold\">\n                                          306.00000000 USD\n                                        </td>\n                                        <td></td>\n                                        <td>-</td>\n                                        <td>\n                                          <a className=\"cancel\" href=\"#\">\n                                            Cancel\n                                          </a>\n                                        </td>\n                                      </tr>\n                                      <tr>\n                                        <td>#89 - Makin Chris</td>\n                                        <td className=\"font-weight-bold\">\n                                          linkinvest-4OU7-3798\n                                        </td>\n                                        <td>08/02/2021 06:32:53</td>\n                                        <td>\n                                          <span className=\"validate\">Paid</span>\n                                        </td>\n                                        <td>306.00000000 USD</td>\n                                        <td>0.00 USD</td>\n                                        <td>USD</td>\n                                        <td className=\"font-weight-bold\">\n                                          306.00000000 USD\n                                        </td>\n                                        <td></td>\n                                        <td>-</td>\n                                        <td>\n                                          <a className=\"cancel\" href=\"#\">\n                                            Cancel\n                                          </a>\n                                        </td>\n                                      </tr>\n                                      <tr>\n                                        <td>#89 - Makin Chris</td>\n                                        <td className=\"font-weight-bold\">\n                                          linkinvest-4OU7-3798\n                                        </td>\n                                        <td>08/02/2021 06:32:53</td>\n                                        <td>\n                                          <span className=\"validate\">Paid</span>\n                                        </td>\n                                        <td>306.00000000 USD</td>\n                                        <td>0.00 USD</td>\n                                        <td>USD</td>\n                                        <td className=\"font-weight-bold\">\n                                          306.00000000 USD\n                                        </td>\n                                        <td></td>\n                                        <td>-</td>\n                                        <td>\n                                          <a className=\"cancel\" href=\"#\">\n                                            Cancel\n                                          </a>\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {this.state.with ? (\n                              <div\n                                dash-user-dtls-tab-dtls=\"withdraw\"\n                                style={{ display: \"block\" }}\n                              >\n                                <div className=\"dtls-sec\">\n                                  <div className=\"dash-row dash-row-centralized header\">\n                                    <div className=\"user-detail dash-row dash-row-centralized\">\n                                      <div\n                                        className=\"image\"\n                                        style={{ backgroundImage: \"url()\" }}\n                                      />\n                                      <div className=\"dtls\">\n                                        <div className=\"name font-weight-bold font-size-18\">\n                                          {this.state.userId.name}\n                                        </div>\n                                        <div className=\"email font-size-14\">\n                                          {this.state.userId.email}\n                                        </div>\n                                        <div className=\"dash-row dash-row-centralized font-size-12\">\n                                          <div\n                                            className=\"country-flag\"\n                                            style={{ backgroundImage: \"url()\" }}\n                                          />\n                                          <div className=\"country text-uppercase\">\n                                            {this.state.userId.country\n                                              ? this.state.country\n                                              : \"\"}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"estimate dash-row dash-row-centralized\">\n                                      <div className=\"estimated-card\">\n                                        <div className=\"font-size-14 font-weight-bold\">\n                                          ESTIMATE BALANCE IN{\" \"}\n                                          <span style={{ color: \"#ff7700\" }}>\n                                            USD\n                                          </span>\n                                        </div>\n                                        <div>\n                                          <h2\n                                            style={{\n                                              margin: 0,\n                                              marginTop: \"10px\",\n                                              color: \"#29c359\",\n                                            }}\n                                          >\n                                            {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}{\" \"}\n                                            USD\n                                          </h2>\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          paddingLeft: \"20px\",\n                                          width: \"30%\",\n                                        }}\n                                      >\n                                        {this.state.user.user.user.liveTrade ? (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"green\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn off Live Trade\n                                          </button>\n                                        ) : (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"red\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn on Live Trade\n                                          </button>\n                                        )}\n                                        <button\n                                          className=\"edit-profile\"\n                                          style={{ backgroundColor: \"#363c4f\" }}\n                                        >\n                                          Edit profile\n                                        </button>\n                                        <button\n                                          style={{ backgroundColor: \"#e30f0f\" }}\n                                          className=\"delete-profile\"\n                                        >\n                                          Delete profile\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {this.state.orderT ? (\n                              <div\n                                dash-user-dtls-tab-dtls=\"orders\"\n                                style={{ display: \"block\" }}\n                              >\n                                <div className=\"dtls-sec\">\n                                  <div className=\"dash-row dash-row-centralized header\">\n                                    <div className=\"user-detail dash-row dash-row-centralized\">\n                                      <div\n                                        className=\"image\"\n                                        style={{ backgroundImage: \"url()\" }}\n                                      />\n                                      <div className=\"dtls\">\n                                        <div className=\"name font-weight-bold font-size-18\">\n                                          {this.state.userId.name}\n                                        </div>\n                                        <div className=\"email font-size-14\">\n                                          {this.state.userId.email}\n                                        </div>\n                                        <div className=\"dash-row dash-row-centralized font-size-12\">\n                                          <div\n                                            className=\"country-flag\"\n                                            style={{ backgroundImage: \"url()\" }}\n                                          />\n                                          <div className=\"country text-uppercase\">\n                                            {this.state.userId.country\n                                              ? this.state.country\n                                              : \"\"}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"estimate dash-row dash-row-centralized\">\n                                      <div className=\"estimated-card\">\n                                        <div className=\"font-size-14 font-weight-bold\">\n                                          ESTIMATE BALANCE IN{\" \"}\n                                          <span style={{ color: \"#ff7700\" }}>\n                                            USD\n                                          </span>\n                                        </div>\n                                        <div>\n                                          <h2\n                                            style={{\n                                              margin: 0,\n                                              marginTop: \"10px\",\n                                              color: \"#29c359\",\n                                            }}\n                                          >\n                                            {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}{\" \"}\n                                            USD\n                                          </h2>\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          paddingLeft: \"20px\",\n                                          width: \"30%\",\n                                        }}\n                                      >\n                                        {this.state.user.user.user.liveTrade ? (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"green\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn off Live Trade\n                                          </button>\n                                        ) : (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"red\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn on Live Trade\n                                          </button>\n                                        )}\n                                        <button\n                                          className=\"edit-profile\"\n                                          style={{ backgroundColor: \"#363c4f\" }}\n                                        >\n                                          Edit profile\n                                        </button>\n                                        <button\n                                          style={{ backgroundColor: \"#e30f0f\" }}\n                                          className=\"delete-profile\"\n                                        >\n                                          Delete profile\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {this.state.secu ? (\n                              <div\n                                dash-user-dtls-tab-dtls=\"security\"\n                                style={{ display: \"block\" }}\n                              >\n                                <div className=\"dtls-sec\">\n                                  <div className=\"dash-row dash-row-centralized header\">\n                                    <div className=\"user-detail dash-row dash-row-centralized\">\n                                      <div\n                                        className=\"image\"\n                                        style={{ backgroundImage: \"url()\" }}\n                                      />\n                                      <div className=\"dtls\">\n                                        <div className=\"name font-weight-bold font-size-18\">\n                                          {this.state.userId.name}\n                                        </div>\n                                        <div className=\"email font-size-14\">\n                                          {this.state.userId.email}\n                                        </div>\n                                        <div className=\"dash-row dash-row-centralized font-size-12\">\n                                          <div\n                                            className=\"country-flag\"\n                                            style={{ backgroundImage: \"url()\" }}\n                                          />\n                                          <div className=\"country text-uppercase\">\n                                            {this.state.userId.country\n                                              ? this.state.country\n                                              : \"\"}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"estimate dash-row dash-row-centralized\">\n                                      <div className=\"estimated-card\">\n                                        <div className=\"font-size-14 font-weight-bold\">\n                                          ESTIMATE BALANCE IN{\" \"}\n                                          <span style={{ color: \"#ff7700\" }}>\n                                            USD\n                                          </span>\n                                        </div>\n                                        <div>\n                                          <h2\n                                            style={{\n                                              margin: 0,\n                                              marginTop: \"10px\",\n                                              color: \"#29c359\",\n                                            }}\n                                          >\n                                            {new Intl.NumberFormat('en-US').format(this.state.userId.wallet)}{\" \"}\n                                            USD\n                                          </h2>\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          paddingLeft: \"20px\",\n                                          width: \"30%\",\n                                        }}\n                                      >\n                                        {this.state.user.user.user.liveTrade ? (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"green\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn off Live Trade\n                                          </button>\n                                        ) : (\n                                          <button\n                                            className=\"autotrader\"\n                                            style={{\n                                              backgroundColor: \"red\",\n                                            }}\n                                            onClick={this.handleLiveTrade.bind(\n                                              this\n                                            )}\n                                          >\n                                            Turn on Live Trade\n                                          </button>\n                                        )}\n                                        <button\n                                          className=\"edit-profile\"\n                                          style={{ backgroundColor: \"#363c4f\" }}\n                                        >\n                                          Edit profile\n                                        </button>\n                                        <button\n                                          style={{ backgroundColor: \"#e30f0f\" }}\n                                          className=\"delete-profile\"\n                                        >\n                                          Delete profile\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </div>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                    <div className=\"manager-tab-dtls\" manager-tab-dtls=\"orders\">\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Ref</th>\n                            <th>Order date</th>\n                            <th>Exchange</th>\n                            <th>Type</th>\n                            <th>Amount</th>\n\n                            <th>Total deducted</th>\n                            <th>Total received</th>\n                            <th>Profit/Loss</th>\n                            <th>Open Rate </th>\n                          </tr>\n                          {this.state.allTrades.map((item, i) => (\n                            <tr>\n                              <td className=\"font-weight-bold\">\n                                ORDR-00{i + 1}\n                              </td>\n                              <td>{item.time}</td>\n                              <td>{item.stockName}</td>\n                              <td>\n                                <span className=\"validate\">{item.tag}</span>\n                              </td>\n                              <td>\n                                {item.stockAmount}. {item.stockName}\n                              </td>\n                              <td>\n                                <span className=\"pending\">- 4.53748 USD</span>\n                              </td>\n                              <td>\n                                <span className=\"validate\">\n                                  + 0.98 {item.stockName}\n                                </span>\n                              </td>\n                              <td>0.40899999999988</td>\n                              <td>{item.buyW}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"withdraw\"\n                    >\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Ref.</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Withdraw method</th>\n                            <th>Withdraw infos</th>\n                            <th>Date</th>\n                            <th>Amount</th>\n                            <th>Fees</th>\n                            <th>Total</th>\n                            <th>Status</th>\n                            <th>Actions</th>\n                          </tr>\n\n                          {this.state.allWithdraw.map((e) => (\n                            <tr key={e.Ref}>\n                              <td>{e.Ref}</td>\n                              <td>{e.name}</td>\n                              <td>{e.email}</td>\n                              <td>{e.tag}</td>\n                              <td>\n                                <WithdrawDetailsModal\n                                  details={e.methodDetails}\n                                />\n                              </td>\n                              <td>{e.time}</td>\n                              <td>{e.amount}</td>\n                              <td>{e.fees}</td>\n                              <td>{e.total}</td>\n                              <td>\n                                {e.status == \"Pending\" ? (\n                                  <div className=\"btn-warning\">{e.status}</div>\n                                ) : e.status == \"Approved\" ? (\n                                  <div className=\"btn-success\">{e.status}</div>\n                                ) : e.status == \"Declined\" ? (\n                                  <div className=\"btn-danger\">{e.status}</div>\n                                ) : null}\n                              </td>\n                              <td>\n                                <div\n                                  className=\"validate\"\n                                  onClick={(a) => this.approveWithrawal(e._id)}\n                                  style={{\n                                    display: e.status !== \"Pending\" && \"none\",\n                                  }}\n                                >\n                                  Validate\n                                </div>\n                                <div\n                                  style={{\n                                    display: e.status !== \"Pending\" && \"none\",\n                                  }}\n                                  className=\"cancel\"\n                                  onClick={(a) => this.declineWithrawal(e._id)}\n                                >\n                                  Cancel\n                                </div>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                    <div\n                      className=\"manager-tab-dtls\"\n                      manager-tab-dtls=\"traders-approval\"\n                    >\n                      <table>\n                        <tbody>\n                          <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Asking date</th>\n                            <th>Signup date</th>\n                            <th>Trades</th>\n                            <th>Rebalance</th>\n                            <th>Status</th>\n                          </tr>\n                          <tr>\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                            <td />\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {this.state.editProfile ? (\n                <section\n                  className=\"withdraw-modal-box personal-data-modal\"\n                  style={{ display: \"block\" }}\n                >\n                  <div className=\"withdraw-modal personal-modal\">\n                    <div className=\"header\">Edit Profile</div>\n                    <div className=\"dash-row\">\n                      <div className=\"content\">\n                        <div className=\"billing-form text-left\">\n                          <Row>\n                            <Col xs={12} md={6}>\n                              <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Your Name\"\n                                  name=\"yourName\"\n                                  id=\"yourName\"\n                                  defaultValue={this.state.yourName}\n                                  onChange={(e) =>\n                                    this.setState({ yourName: e.target.value })\n                                  }\n                                />\n                              </Form.Group>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <Form.Group controlId=\"exampleForm.ControlInput2\">\n                                <Form.Control\n                                  type=\"email\"\n                                  placeholder=\"Your Email Address\"\n                                  name=\"yourEmailAddress\"\n                                  id=\"yourEmailAddress\"\n                                  value={this.state.yourEmailAddress}\n                                  onChange={(e) =>\n                                    this.setState({\n                                      yourEmailAddress: e.target.value,\n                                    })\n                                  }\n                                />\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Form.Group controlId=\"exampleForm.ControlSelect5\">\n                            <Form.Control\n                              as=\"select\"\n                              value={this.state.userCountry}\n                              onChange={(e) =>\n                                this.setState({ userCountry: e.target.value })\n                              }\n                            >\n                              {profileCountryList.map((country) => (\n                                <option>{country}</option>\n                              ))}\n                            </Form.Control>\n                          </Form.Group>\n                          <Row>\n                            <Col xs={12} md={6}>\n                              <Form.Group controlId=\"exampleForm.ControlSelect3\">\n                                <Form.Control\n                                  as=\"select\"\n                                  id={\"language\"}\n                                  value={this.state.yourLanguage}\n                                  onChange={(e) =>\n                                    this.setState({\n                                      yourLanguage: e.target.value,\n                                    })\n                                  }\n                                >\n                                  <option>Select Language</option>\n                                  <option value=\"Hindi\">Hindi</option>\n                                  <option value=\"English\">English</option>\n                                  <option value=\"French\">French</option>\n                                </Form.Control>\n                              </Form.Group>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <Form.Group controlId=\"exampleForm.ControlSelect4\">\n                                <Form.Control\n                                  as=\"select\"\n                                  defaultValue={this.state.yourCurrency}\n                                  onChange={(e) =>\n                                    this.setState({\n                                      yourCurrency: e.target.value,\n                                    })\n                                  }\n                                >\n                                  <option>Select Currency</option>\n                                  <option value=\"BSD\">\n                                    Bahamian Dollars (BSD)\n                                  </option>\n                                  <option value=\"USD\">US Dollars</option>\n                                </Form.Control>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Form.Group controlId=\"exampleForm.ControlSelect5\">\n                            <Form.Control\n                              as=\"select\"\n                              value={this.state.userLevel}\n                              onChange={(e) =>\n                                this.setState({ userLevel: e.target.value })\n                              }\n                            >\n                              <option value=\"none\">Select User Level</option>\n                              <option value=\"none\">Standard User</option>\n                              <option value=\"isManager\">Manager</option>\n                              <option value=\"isAdmin\">Admin User</option>\n                            </Form.Control>\n                          </Form.Group>\n                          <div className=\"text-right\">\n                            <Button\n                              type={\"dashed\"}\n                              // style={{ background: web.yourMainColor }}\n                              onClick={() =>\n                                this.editUserProfile(this.state.userId._id)\n                              }\n                              variant=\"primary\"\n                              className=\"mb-4\"\n                            >\n                              Save\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <span\n                      className=\"close\"\n                      onClick={() => this.setState({ editProfile: false })}\n                    >\n                      <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                        <title>cross</title>\n                        <path\n                          className=\"path1\"\n                          d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                        />\n                      </svg>\n                    </span>{\" \"}\n                  </div>\n                </section>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Manager;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Trading.js",["568","569","570","571","572","573","574","575","576","577","578"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport { message } from \"antd\";\nimport { Switch as AntSwitch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Trading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n      liveTrade: \"\",\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n\n  handleChange1(e) {\n    this.setState({ liveTrade: !this.state.liveTrade });\n  }\n\n  handleChange(e) {\n    // e.preventDefault();\n\n    fetch(\n      \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/users/liveTrade\",\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          liveTrade: !this.state.liveTrade,\n        }),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Live trading updated\");\n        } else message.error(\"Problem updating live trading\");\n      })\n\n      .then((data) => {\n        console.log(this.state.liveTrade);\n      });\n  }\n\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    let getSiteData = async () => {\n      const res = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/site/livetrade`\n      );\n      let siteData = await res.json();\n      console.log(siteData);\n      this.setState({ liveTrade: siteData });\n    };\n\n    getSiteData();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav\n      // this.title.innerHTML = this.web.siteTitle\n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable live trading</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              id=\"native-trading-one\"\n                              name=\"native-trading\"\n                              checked={this.state.liveTrade}\n                              onChange={this.handleChange1.bind(this)}\n                              onClick={this.handleChange.bind(this)}\n                            />\n                          </div>\n\n                          {/* <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"native-trading-one\"\n                              name=\"native-trading\"\n                              value={this.state.isLiveTradeActive}\n                              checked={this.state.isLiveTradeActive}\n                              onChange={this.handleChange.bind(this)}\n                            />\n                            <label htmlFor=\"native-trading-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"native-trading-two\"\n                              name=\"native-trading\"\n                              value={this.state.isLiveTradeActive}\n                             \n                            />\n                            <label htmlFor=\"native-trading-two\">OFF</label>\n                          </div> */}\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            User can choose between live trading and no-live\n                            trading\n                          </h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              defaultChecked\n                            />\n\n                            {/* <input\n                              type=\"radio\"\n                              id=\"no-native-trading-one\"\n                              name=\"no-native-trading\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"no-native-trading-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"no-native-trading-two\"\n                              name=\"no-native-trading\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"no-native-trading-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable native trading without exchange</h4>\n                          <p>\n                            Warning !<br />\n                            This option is more risky, because you need to\n                            manage by yourself the liquidy\n                          </p>\n                          <p>\n                            You need to active the exchanges you want for fetch\n                            data from exchange\n                          </p>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              defaultChecked\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"without-exchange-one\"\n                              name=\"without-exchange\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"without-exchange-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"without-exchange-two\"\n                              name=\"without-exchange\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"without-exchange-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Balance configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Balance configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Show balance estimation</h4>\n                          <p>Based on all wallet</p>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              defaultChecked\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"balance-estimation-one\"\n                              name=\"balance-estimation\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"balance-estimation-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"balance-estimation-two\"\n                              name=\"balance-estimation\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"balance-estimation-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>User user currency select</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              defaultChecked\n                            />\n\n                            {/* <input\n                              type=\"radio\"\n                              id=\"currency-select-one\"\n                              name=\"currency-select\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"currency-select-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"currency-select-two\"\n                              name=\"currency-select\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"currency-select-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Show balance estimation in</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <select className=\"dash-select-short\">\n                            <option value=\"USD\">USD</option>\n                            <option value=\"NAV\">NAV</option>\n                            <option value=\"PHB\">PHB</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Leaderboard */}\n                    <h3 className=\"font-weight-normal\">Leaderboard</h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Enable leaderboard (native trading need to be\n                            enabled)\n                          </h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"enable-leaderboard-one\"\n                              name=\"enable-leaderboard\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"enable-leaderboard-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-leaderboard-two\"\n                              name=\"enable-leaderboard\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"enable-leaderboard-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Markets */}\n                    <h3 className=\"font-weight-normal\">Markets</h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Enable referral (native trading need to be enabled)\n                          </h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"enable-referal-one\"\n                              name=\"enable-referal\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"enable-referal-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-referal-two\"\n                              name=\"enable-referal\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"enable-referal-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Referral commission (in $, fixed amount)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Deposit configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Deposit configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Deposit fees (in %)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Deposit currencies allowed</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Deposit wallet receive (if wallet real currency not\n                            available)\n                          </h4>\n                        </div>\n                        <div className=\"actions\">\n                          <select className=\"dash-select-short\">\n                            <option value=\"USD\">USD</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank transfer deposit agreement</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea\n                            className=\"dash-textarea\"\n                            defaultValue={\"\"}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Withdraw configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Withdraw configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable automatic cryptocurrencies withdraw</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"auto-withdraw-one\"\n                              name=\"auto-withdraw\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"auto-withdraw-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"auto-withdraw-two\"\n                              name=\"auto-withdraw\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"auto-withdraw-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Configure exchange needed for each cryptocurrencies\n                          </h4>\n                        </div>\n                        <div className=\"actions\"></div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Configure exchange needed for each cryptocurrencies\n                          </h4>\n                          <p>\n                            You can define each exchange will be used for the\n                            withdraw for each cryptocurrency\n                          </p>\n                          <p>\n                            Ex : BTC = Binance\n                            <br />\n                            Ex : ETH = Okcoin\n                            <br />\n                            Ex : LTC = Btcmarkets\n                          </p>\n                        </div>\n                        <div className=\"actions\">\n                          <a\n                            className=\"dash-success-btn\"\n                            href=\"configure-exchange.html\"\n                          >\n                            Configure Exchanges\n                          </a>\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Withdraw processing time (in days)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Withdraw fees (in %)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Withdraw reference pattern</h4>\n                          <p>\n                            $ : Random number (0-9)\n                            <br />* : Random Letter (A-Z)\n                          </p>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Bank transfer alert when withdraw currency is not\n                            crypto-currency\n                          </h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea\n                            className=\"dash-textarea\"\n                            defaultValue={\"\"}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            Cryptocurrencies allowed for bank transfer withdraw\n                          </h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Trading configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Trading configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Trading fees (in %)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Order reference pattern</h4>\n                          <p>\n                            $ : Random number (0-9)\n                            <br />* : Random Letter (A-Z)\n                          </p>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Real account configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Real account configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable real account</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              defaultChecked\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"enable-real-account-one\"\n                              name=\"enable-real-account\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"enable-real-account-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-real-account-two\"\n                              name=\"enable-real-account\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"enable-real-account-two\">OFF</label> */}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Practice account configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Practice account configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable practice account</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <AntSwitch\n                              className=\"ant-switch\"\n                              checkedChildren=\"ON\"\n                              unCheckedChildren=\"OFF\"\n                              defaultChecked\n                            />\n                            {/* <input\n                              type=\"radio\"\n                              id=\"enable-practice-account-one\"\n                              name=\"enable-practice-account\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"enable-practice-account-one\">\n                              ON\n                            </label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-practice-account-two\"\n                              name=\"enable-practice-account\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"enable-practice-account-two\">\n                              OFF\n                            </label> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Maximum free deposit (in $)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Free deposit wallet receive</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <select className=\"dash-select-short\">\n                            <option value=\"USD\">USD</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"save-btn\">\n                      <button>Save</button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Trading;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Bank.js",["579","580","581","582","583","584","585","586","587"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Bank extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav \n      // this.title.innerHTML = this.web.siteTitle \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    {/* Add new bank account */}\n                    <h3 className=\"font-weight-normal\">Add new bank account</h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank account name</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank account currency</h4>\n                          <p>* This is optional</p>\n                        </div>\n                        <div className=\"actions\">\n                          <select className=\"dash-select-short\">\n                            <option value=\"---\">---</option>\n                            <option value=\"ALL\">ALL</option>\n                            <option value=\"USD\">USD</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank account IBAN</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank account BIC/SWIFT</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank account address</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Bank account owner name</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"save-btn\">\n                      <button className=\"dash-success-btn\">Add New</button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Bank;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Search.js",["588","589","590","591","592","593","594","595","596","597","598","599","600"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  \n  \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav \n      // this.title.innerHTML = this.web.siteTitle \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    {/* General appearance */}\n                    <h3 className=\"font-weight-normal\">General appearance</h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Your main color</h4>\n                          <p>You need to refresh the page after change</p>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Menu type</h4>\n                          <p>You need to refresh the page after change</p>\n                        </div>\n                        <div className=\"actions\">\n                          <select className=\"dash-select-short\">\n                            <option value=\"Left, vertical\">\n                              Left, vertical\n                            </option>\n                            <option value=\"Top, horizontal\">\n                              Top, horizontal\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button>Save</button>\n                      </div>\n                    </div>\n                    {/* Chart configuration */}\n                    <h3 className=\"font-weight-normal\">Chart configuration</h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Default type graph</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <select className=\"dash-select-short\">\n                            <option value=\"Candlestick\">Candlestick</option>\n                            <option value=\"Line\">Line</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Candlestick positive color</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Candlestick negative color</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Line color</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Volume upper color</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Volume lower color</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Volume bars opacity</h4>\n                          <p>0 = No visible, 100 = Full visible (in %)</p>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button>Save</button>\n                      </div>\n                    </div>\n                    {/* Login page configuration */}\n                    <h3 className=\"font-weight-normal\">\n                      Login page configuration\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable Slider</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"enable-slider-one\"\n                              name=\"enable-slider\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"enable-slider-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-slider-two\"\n                              name=\"enable-slider\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"enable-slider-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Login background video</h4>\n                          <p>\n                            Insert a Youtube link here if you want show a\n                            background video in the login page\n                          </p>\n                          <p>Put this field empty for not show video</p>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button>Save</button>\n                      </div>\n                    </div>\n                    {/* Login slider list */}\n                    <h3 className=\"font-weight-normal\">Login slider list</h3>\n                    <div className=\"hr\" />\n                    <table>\n                      <tbody>\n                        <tr>\n                          <th width=\"20%\">Picture</th>\n                          <th>Title</th>\n                        </tr>\n                        <tr>\n                          <td>\n                            <img\n                              style={{\n                                width: 100,\n                                height: 100,\n                                display: \"block\",\n                              }}\n                              src=\"images/1.jpg\"\n                            />\n                          </td>\n                          <td>\n                            Mon text de fou\n                            <a\n                              style={{\n                                float: \"right\",\n                                display: \"block\",\n                                margin: \"0 3px\",\n                              }}\n                              className=\"sec-btn\"\n                              href=\"#\"\n                            >\n                              Down\n                            </a>\n                            <a\n                              style={{\n                                float: \"right\",\n                                display: \"block\",\n                                margin: \"0 3px\",\n                              }}\n                              className=\"validate\"\n                              href=\"#\"\n                            >\n                              Up\n                            </a>\n                            <a\n                              style={{\n                                float: \"right\",\n                                display: \"block\",\n                                margin: \"0 3px\",\n                              }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Search;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Payment.js",["601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport { Select, message } from \"antd\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n\nconst Payment = (props) => {\n  const [orders, setOrders] = useState();\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n  const myRef3 = props.user.user ? React.createRef() : \"\";\n  const textInput = props.user.user ? React.createRef() : \"\";\n\n  const manager = false;\n  const admin = true;\n\n  const [paymentSuccessText, setpaymentSuccessText] = useState(\"\");\n  const [paymentRefPattern, setpaymentRefPattern] = useState(\"\");\n  const [paymentMinDeposit, setPaymentMinDeposit] = useState(\"\");\n  const [paymentMaxDeposit, setPaymentMaxDeposit] = useState(\"\");\n  const [paymentMinWithdraw, setPaymentMinWithdraw] = useState(\"\");\n  const [paymentMaxWithdraw, setPaymentMaxWithdraw] = useState(\"\");\n  const [paymentNeedsApproval, setpaymentNeedsApproval] = useState(null);\n  const [masterCardStatus, setmasterCardStatus] = useState(null);\n  const [bitCoinStatus, setbitCoinStatus] = useState(null);\n  const [btcHeaderText, setbtcHeaderText] = useState(\"\");\n  const [btcAddress, setbtcAddress] = useState(\"\");\n  const [buyBTCLink, setbuyBTCLink] = useState(\"\");\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const dataAll = {\n    paymentSuccessText: paymentSuccessText,\n    paymentRefPattern: paymentRefPattern,\n    paymentMinDeposit: paymentMinDeposit,\n    paymentMaxDeposit: paymentMaxDeposit,\n    paymentMinWithdraw: paymentMinWithdraw,\n    paymentMaxWithdraw: paymentMaxWithdraw,\n    paymentNeedsApproval: paymentNeedsApproval,\n    masterCardStatus: masterCardStatus,\n    bitCoinStatus: bitCoinStatus,\n    buyBTCLink: buyBTCLink,\n    btcAddress: btcAddress,\n    btcHeaderText: btcHeaderText,\n  };\n\n  const onSaved = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(\n      `${endpoint}/api/site/paymentsettings`,\n      dataAll\n    );\n\n    if (res.data) {\n      message.success(\"Settings successfully updated\");\n      setSubmitLoading(false);\n    }\n  };\n  useState(() => {\n    if (props.site) {\n      setpaymentSuccessText(props.web.web.paymentSuccessText);\n      setpaymentRefPattern(props.web.web.paymentRefPattern);\n      setpaymentNeedsApproval(props.web.web.paymentNeedsApproval);\n      setPaymentMinDeposit(props.web.web.paymentMinDeposit);\n      setPaymentMaxDeposit(props.web.web.paymentMaxDeposit);\n      setPaymentMinWithdraw(props.web.web.paymentMinWithdraw);\n      setPaymentMaxWithdraw(props.web.web.paymentMaxWithdraw);\n      setmasterCardStatus(props.web.web.masterCardStatus);\n      setbitCoinStatus(props.web.web.bitCoinStatus);\n      setbtcHeaderText(props.web.web.btcHeaderText);\n      setbtcAddress(props.web.web.btcAddress);\n      setbuyBTCLink(props.web.web.buyBTCLink);\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      setOrders(data);\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let CurrentUser = await response.json();\n\n      setUser(CurrentUser);\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  }, []);\n\n  if (props.user.length === 0) {\n    return <Redirect to=\"/\" />;\n  } else {\n    // console.log(state.orderIsh);\n\n    return (\n      <div ref={myRef3}>\n        {/* Beggining of navbar */}\n\n        {/* Ending of navbar */}\n        {/* Beginning of contents */}\n        <section className=\"dash-contents\" onClick={closeForex}>\n          <div className=\"dash-row\">\n            <Sidebar user={props.user} site={props.site} />\n\n            {/* start route */}\n\n            {/* start route */}\n            {admin ? (\n              <div\n                className=\"full-width dash-row\"\n                style={{\n                  paddingLeft: 0,\n                  paddingBottom: 35,\n                  overflow: \"hidden\",\n                }}\n              >\n                <AdminSidebar />\n\n                <div className=\"admin-content\">\n                  <div\n                    className=\"public-card\"\n                    style={{ paddingLeft: 0, paddingRight: 0 }}\n                  >\n                    <div className=\"dash-row dash-row-centralized payment-integration\">\n                      <div className=\"platform\">\n                        <img src=\"https://www.pngfind.com/pngs/m/328-3281030_mastercard-logo-png-mastercard-png-transparent-png.png\" />\n                      </div>\n                      <div className=\"subscription\">\n                        <a\n                          className=\"icon mdi mdi-information-outline\"\n                          href=\"https://help.ovrley.com/help-center/articles/6/fortumo\"\n                          target=\"_blank\"\n                        />{\" \"}\n                        <span className=\"font-size-13 text-fade\">\n                          This payment gateway is only available for\n                          subscription system\n                        </span>\n                      </div>\n                      <div className=\"action\">\n                        {masterCardStatus === true ? (\n                          <span className=\"enabled text-uppercase\">\n                            Enabled\n                          </span>\n                        ) : (\n                          <span className=\"disabled text-uppercase\">\n                            Disabled\n                          </span>\n                        )}\n\n                        <NavLink to=\"/mastercard\" className=\"configure\">\n                          Configure\n                        </NavLink>\n                      </div>\n                    </div>\n                    <div className=\"dash-row dash-row-centralized payment-integration\">\n                      <div className=\"platform\">\n                        <img\n                          style={{ width: \"50%\" }}\n                          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1200px-Bitcoin.svg.png\"\n                        />\n                      </div>\n                      <div className=\"subscription\">\n                        <a\n                          className=\"icon mdi mdi-information-outline\"\n                          href=\"https://help.ovrley.com/help-center/articles/6/fortumo\"\n                          target=\"_blank\"\n                        />{\" \"}\n                        <span className=\"font-size-13 text-fade\">\n                          This payment gateway is only available for\n                          subscription system\n                        </span>\n                      </div>\n                      <div className=\"action\">\n                        {bitCoinStatus === true ? (\n                          <span className=\"enabled text-uppercase\">\n                            Enabled\n                          </span>\n                        ) : (\n                          <span className=\"disabled text-uppercase\">\n                            Disabled\n                          </span>\n                        )}\n                        <NavLink to=\"/bitcoin\" className=\"configure\">\n                          Configure\n                        </NavLink>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"public-card\">\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Payment success</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={paymentSuccessText}\n                          onChange={(e) =>\n                            setpaymentSuccessText(e.target.value)\n                          }\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Deposit minimum (in $)</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"number\"\n                          name=\"text\"\n                          value={paymentMinDeposit}\n                          onChange={(e) => setPaymentMinDeposit(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Deposit maximum (in $)</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"number\"\n                          name=\"text\"\n                          value={paymentMaxDeposit}\n                          onChange={(e) => setPaymentMaxDeposit(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Withdraw minimum (in $)</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"number\"\n                          name=\"text\"\n                          value={paymentMinWithdraw}\n                          onChange={(e) =>\n                            setPaymentMinWithdraw(e.target.value)\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Withdraw maximum (in $)</h4>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          className=\"dash-input\"\n                          type=\"number\"\n                          name=\"text\"\n                          value={paymentMaxWithdraw}\n                          onChange={(e) =>\n                            setPaymentMaxWithdraw(e.target.value)\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Payment reference pattern</h4>\n                        <p>\n                          $ : Random number (0-9)\n                          <br />* : Random Letter (A-Z)\n                        </p>\n                      </div>\n                      <div className=\"actions\">\n                        <input\n                          value={paymentRefPattern}\n                          onChange={(e) => setpaymentRefPattern(e.target.value)}\n                          className=\"dash-input\"\n                          type=\"text\"\n                          name=\"text\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"each-row dash-row\">\n                      <div className=\"dtls\">\n                        <h4>Payment need to be approved</h4>\n                      </div>\n                      <div className=\"actions switch-field\">\n                        <div className=\"switch-field-round\">\n                          <input\n                            type=\"radio\"\n                            id=\"approved-payment-one\"\n                            name=\"approved-payment\"\n                            defaultValue=\"yes\"\n                            onChange={(e) =>\n                              setpaymentNeedsApproval(\n                                e.target.checked ? true : false\n                              )\n                            }\n                            checked={\n                              paymentNeedsApproval === true ? true : false\n                            }\n                          />\n                          <label htmlFor=\"approved-payment-one\">ON</label>\n                          <input\n                            type=\"radio\"\n                            id=\"approved-payment-two\"\n                            name=\"approved-payment\"\n                            defaultValue=\"no\"\n                            onChange={(e) =>\n                              setpaymentNeedsApproval(\n                                e.target.checked ? false : true\n                              )\n                            }\n                            checked={\n                              paymentNeedsApproval === false ? true : false\n                            }\n                          />\n                          <label htmlFor=\"approved-payment-two\">OFF</label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"save-btn\">\n                    <button disabled={submitLoading} onClick={onSaved}>\n                      Save\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {/* {state.admin ? () : ''\n\n             } */}\n\n            {/* storrrrrp */}\n          </div>\n        </section>\n      </div>\n    );\n  }\n};\n\nexport default Payment;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Subscription.js",["619","620","621","622","623","624","625","626","627"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Subscription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  \n  \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav \n      // this.title.innerHTML = this.web.siteTitle \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n\n\n                >\n\n                  <AdminSidebar />\n                 \n                  <div className=\"admin-content\">\n  <div className=\"public-card\">\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Enable subscriptions</h4>\n      </div>\n      <div className=\"actions\">\n        <div style={{backgroundColor: '#e54747', color: '#fff', padding: '15px 25px'}}>\n          <center>\n            <span>Credit card or Paypal payment need to be enabled !</span>\n          </center>\n        </div>\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Enable free trial</h4>\n      </div>\n      <div className=\"actions switch-field\">\n        <div className=\"switch-field-round\">\n          <input type=\"radio\" id=\"enable-free-trial-one\" name=\"enable-free-trial\" defaultValue=\"yes\" defaultChecked />\n          <label htmlFor=\"enable-free-trial-one\">ON</label>\n          <input type=\"radio\" id=\"enable-free-trial-two\" name=\"enable-free-trial\" defaultValue=\"no\" />\n          <label htmlFor=\"enable-free-trial-two\">OFF</label>\n        </div>\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Free trial duration (in day)</h4>\n      </div>\n      <div className=\"actions\">\n        <input type=\"text\" name=\"text\" className=\"dash-input\" />\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Premium features</h4>\n      </div>\n      <div className=\"actions\">\n        <textarea className=\"dash-text-area\" defaultValue={\"\"} />\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Free users features</h4>\n      </div>\n      <div className=\"actions switch-field\">\n        <div className=\"switch-field-inline\">\n          <span>Blockfolio</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"blockfolio-one\" name=\"blockfolio\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"blockfolio-one\">ON</label>\n            <input type=\"radio\" id=\"blockfolio-two\" name=\"blockfolio\" defaultValue=\"no\" />\n            <label htmlFor=\"blockfolio-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Marketanalytic</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"marketanalytic-one\" name=\"marketanalytic\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"marketanalytic-one\">ON</label>\n            <input type=\"radio\" id=\"marketanalytic-two\" name=\"marketanalytic\" defaultValue=\"no\" />\n            <label htmlFor=\"marketanalytic-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>News</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"news-one\" name=\"news\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"news-one\">ON</label>\n            <input type=\"radio\" id=\"news-two\" name=\"news\" defaultValue=\"no\" />\n            <label htmlFor=\"news-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Social</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"social-one\" name=\"social\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"social-one\">ON</label>\n            <input type=\"radio\" id=\"social-two\" name=\"social\" defaultValue=\"no\" />\n            <label htmlFor=\"social-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Tradinglive</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"tradinglive-one\" name=\"tradinglive\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"tradinglive-one\">ON</label>\n            <input type=\"radio\" id=\"tradinglive-two\" name=\"tradinglive\" defaultValue=\"no\" />\n            <label htmlFor=\"tradinglive-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Notifications Phone</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"notify-phone-one\" name=\"notify-phone\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"notify-phone-one\">ON</label>\n            <input type=\"radio\" id=\"notify-phone-two\" name=\"notify-phone\" defaultValue=\"no\" />\n            <label htmlFor=\"notify-phone-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Googleauthenticator</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"googleauthenticator-one\" name=\"googleauthenticator\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"googleauthenticator-one\">ON</label>\n            <input type=\"radio\" id=\"googleauthenticator-two\" name=\"googleauthenticator\" defaultValue=\"no\" />\n            <label htmlFor=\"googleauthenticator-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Heat Map</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"heat-map-one\" name=\"heat-map\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"heat-map-one\">ON</label>\n            <input type=\"radio\" id=\"heat-map-two\" name=\"heat-map\" defaultValue=\"no\" />\n            <label htmlFor=\"heat-map-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Calculator</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"calculator-one\" name=\"calculator\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"calculator-one\">ON</label>\n            <input type=\"radio\" id=\"calculator-two\" name=\"calculator\" defaultValue=\"no\" />\n            <label htmlFor=\"calculator-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Livemarket</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"livemarket-one\" name=\"livemarket\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"livemarket-one\">ON</label>\n            <input type=\"radio\" id=\"livemarket-two\" name=\"livemarket\" defaultValue=\"no\" />\n            <label htmlFor=\"livemarket-two\">OFF</label>\n          </div>\n        </div>\n        <div className=\"switch-field-inline\">\n          <span>Exportgraph</span>\n          <div className=\"switch-field-round\">\n            <input type=\"radio\" id=\"exportgraph-one\" name=\"exportgraph\" defaultValue=\"yes\" defaultChecked />\n            <label htmlFor=\"exportgraph-one\">ON</label>\n            <input type=\"radio\" id=\"exportgraph-two\" name=\"exportgraph\" defaultValue=\"no\" />\n            <label htmlFor=\"exportgraph-two\">OFF</label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"save-btn\">\n      <button>Save</button>\n    </div>\n  </div>\n  {/* Add a new plan */}\n  <h3 className=\"font-weight-normal\">Add a new plan</h3>\n  <div className=\"hr\" />\n  <div className=\"public-card\">\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Name plan</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Price total</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Duration in days</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"save-btn\">\n      <button>Add this plan</button>\n    </div>\n  </div>\n  {/* Plans available */}\n  <h3 className=\"font-weight-normal\">Plans available</h3>\n  <div className=\"hr\" />\n  <table>\n    <tbody><tr>\n        <th>Name plan</th>\n        <th>Price plan</th>\n        <th>Duration in days</th>\n        <th>Duration in month</th>\n        <th>Price per month</th>\n      </tr>\n      <tr>\n      </tr>\n    </tbody></table>\n</div>\n\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Subscription;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/New.js",["628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass New extends Component {\n  constructor(props) {\n    super(props); \n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  \n  \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n\n\n                >\n\n                  <AdminSidebar />\n                 \n                  <div className=\"admin-content\">\n  {/* General configuration */}\n  <h3 className=\"font-weight-normal\">General configuration</h3>\n  <div className=\"hr\" />\n  <div className=\"public-card\">\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Enable news / calendar / twitter</h4>\n        <p>Put this off for hide the left News icon in the menu</p>\n      </div>\n      <div className=\"actions switch-field\">\n        <div className=\"switch-field-round\">\n          <input type=\"radio\" id=\"enable-multiple-one\" name=\"enable-multiple\" defaultValue=\"yes\" defaultChecked />\n          <label htmlFor=\"enable-multiple-one\">ON</label>\n          <input type=\"radio\" id=\"enable-multiple-two\" name=\"enable-multiple\" defaultValue=\"no\" />\n          <label htmlFor=\"enable-multiple-two\">OFF</label>\n        </div>\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Rss converter API Key</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"password\" name=\"password\" />\n      </div>\n    </div>\n    <div className=\"save-btn\">\n      <button>Save</button>\n    </div>\n  </div>\n  {/* Calendar credentials */}\n  <h3 className=\"font-weight-normal\">Calendar credentials</h3>\n  <div className=\"hr\" />\n  <div className=\"public-card\">\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Enable calendar</h4>\n      </div>\n      <div className=\"actions switch-field\">\n        <div className=\"switch-field-round\">\n          <input type=\"radio\" id=\"enable-calendar-one\" name=\"enable-calendar\" defaultValue=\"yes\" defaultChecked />\n          <label htmlFor=\"enable-calendar-one\">ON</label>\n          <input type=\"radio\" id=\"enable-calendar-two\" name=\"enable-calendar\" defaultValue=\"no\" />\n          <label htmlFor=\"enable-calendar-two\">OFF</label>\n        </div>\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Calendar Client ID</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Calendar Client Secret</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Only show events in relation to enabled coins</h4>\n      </div>\n      <div className=\"actions switch-field\">\n        <div className=\"switch-field-round\">\n          <input type=\"radio\" id=\"enable-coins-one\" name=\"enable-coins\" defaultValue=\"yes\" defaultChecked />\n          <label htmlFor=\"enable-coins-one\">ON</label>\n          <input type=\"radio\" id=\"enable-coins-two\" name=\"enable-coins\" defaultValue=\"no\" />\n          <label htmlFor=\"enable-coins-two\">OFF</label>\n        </div>\n      </div>\n    </div>\n    <div className=\"save-btn\">\n      <button>Save</button>\n    </div>\n  </div>\n  {/* News feed */}\n  <h3 className=\"font-weight-normal\">News feed</h3>\n  <div className=\"hr\" />\n  <div className=\"public-card\">\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Add news feed</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"save-btn\">\n      <button>Add</button>\n    </div>\n  </div>\n  <table style={{marginTop: 15}}>\n    <tbody><tr>\n        <th>Name feed</th>\n        <th>Url</th>\n        <th />\n      </tr>\n      <tr>\n        <td>Bitcoin - The Currency of the Internet</td>\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td />\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td />\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td />\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td />\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td />\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td />\n        <td>https://www.reddit.com/r/Bitcoin/.rss?format=xml</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n      <tr>\n        <td>CNN.com - RSS Channel - World</td>\n        <td>http://rss.cnn.com/rss/edition_world.rss</td>\n        <td>\n          <a style={{float: 'right', display: 'block', margin: '0 3px'}} className=\"sec-btn\" href=\"#\">Delete</a>\n        </td>\n      </tr>\n    </tbody></table>\n  {/* Twitter accounts */}\n  <h3 className=\"font-weight-normal\">Twitter accounts</h3>\n  <div className=\"hr\" />\n  <div className=\"public-card\">\n    <div className=\"each-row dash-row\">\n      <div className=\"dtls\">\n        <h4>Add twitter account</h4>\n      </div>\n      <div className=\"actions\">\n        <input className=\"dash-input\" type=\"text\" name=\"text\" />\n      </div>\n    </div>\n    <div className=\"save-btn\">\n      <button>Add</button>\n    </div>\n  </div>\n  <table style={{marginTop: 15}}>\n    <tbody><tr>\n        <th>Social name</th>\n        <th>Url</th>\n      </tr>\n      <tr>\n        <td />\n        <td />\n      </tr>\n    </tbody></table>\n</div>\n\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default New;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Identity.js",["645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport axios from \"axios\"\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { message} from 'antd';\nconst endpoint=\"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\"\n\nconst Identity=(props)=>{\nconst[user, setUser]=useState(props.user ? props.user : null);\nconst[orders,setOrders]=useState([])\nconst [site, setSite] = useState(props.site ? props.site : null);\nconst [admin, setAdmin] = useState(true);\n\n  const[enableIdentitySystem ,setEnableIdentitySystem] = useState(null)\n  const[blockTradingWithoutIdentity,setBlockTradingWithoutIdentity] = useState(null)\n  const[blockDepositeWithoutIdentityVerification,setBlockDepositeWithoutIdentityVerification] = useState(null)\n  const[blockWithdrawWithoutIdentity,setBlockWithdrawWithoutIdentity]  = useState(null)\n  const[newIdentityWizardTitle, setNewIdentityWizardTitle] = useState(\"\")\n  const[newIdentityStartButton , setNewIdentityStartButton]= useState(\"\")\n  const[identityStepName,setIdentityStepName] = useState(\"\")\n  const[identityStepType,setIdentityStepType ] = useState(\"\")\n  const[identityStepDescription,setIdentityStepDescription] = useState(\"\")\n  const[enableIdentityUploadWithWebCam,setEnableIdentityUploadWithWebCam] =useState(null)\n  const[newIdentityWizardAdvert, setNewIdentityWizardAdvert]=useState(\"\")\n  const[newIdentityTitle, setNewIdentityTitle]=useState(\"\")\n  const[webCamDocumentRatio,setWebCamDocumentRatio] = useState();\n  const[identityDocumentName,setIdentityDocumentName] = useState();\n  const[documentIdentityList,setDocumentIdentityList] = useState()\n  const [submitLoading, setSubmitLoading]=useState(false)\n\n\n  let dataAll={\n    enableIdentitySystem:enableIdentitySystem,\n    blockTradingWithoutIdentity:blockTradingWithoutIdentity,\n    blockDepositeWithoutIdentityVerification:blockDepositeWithoutIdentityVerification,\n  blockWithdrawWithoutIdentity:blockWithdrawWithoutIdentity,\n  newIdentityWizardTitle:newIdentityWizardTitle,\n  newIdentityStartButton:newIdentityStartButton,\n  identityStepName:identityStepName,\n  identityStepType:identityStepType,\n  identityStepDescription:identityStepDescription,\n  enableIdentityUploadWithWebCam:enableIdentityUploadWithWebCam,\n  webCamDocumentRatio:webCamDocumentRatio,\n  documentIdentityList:documentIdentityList,\n  identityDocumentName:identityDocumentName,\n  newIdentityTitle: newIdentityTitle\n  };  \n\n\n\n\n\n\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n\n  const onSaved = async () => {\n    setSubmitLoading(true)\n    const res = await axios.put(\n      `${endpoint}/api/site/siteidentitysettings`,\n     dataAll\n    );\n    if(res.data){\n      message.success('Settings successfully updated');\n      setSubmitLoading(false)\n    }\n    }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     user: this.props.user,\n  //     redirect: \"/\",\n  //     data: {},\n  //     orders: [],\n  //     disA1: true,\n  //     disA2: true,\n  //     btcP: [],\n  //     market: false,\n  //     board: false,\n  //     port: false,\n  //     manager: false,\n  //     levIsh: false,\n  //     admin: true,\n  //   };\n\n  // }\n\n\n   const  myRef3 = props.user.user ? React.createRef() : \"\";\n    const  textInput = props.user.user ? React.createRef() : \"\";\n    const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n// const  fav = document.getElementById(\"favicon\");\n//  const title = document.getElementById(\"title\");\n\n    useEffect(()=>{\n      if (props.web) {\n        console.log(props.web.web.enableIdentitySystem,'jjjj')\nsetEnableIdentitySystem(props.web.web.enableIdentitySystem)\nsetBlockTradingWithoutIdentity(props.web.web.blockTradingWithoutIdentity)\nsetBlockDepositeWithoutIdentityVerification(props.web.web.blockDepositeWithoutIdentityVerification)\nsetBlockWithdrawWithoutIdentity(props.web.web.blockWithdrawWithoutIdentity)\nsetNewIdentityWizardTitle(props.web.web.newIdentityWizardTitle)\nsetNewIdentityStartButton(props.web.web.newIdentityStartButton)\nsetIdentityStepName(props.web.web.identityStepName)\nsetIdentityStepType(props.web.web.identityStepType)\nsetEnableIdentityUploadWithWebCam(props.web.web.enableIdentityUploadWithWebCam)\nsetIdentityStepDescription(props.web.web.setIdentityStepDescription)\nsetWebCamDocumentRatio(props.web.web.webCamDocumentRatio)\nsetIdentityDocumentName(props.web.web.identityDocumentName)\nsetDocumentIdentityList(props.web.web.documentIdentityList)\nsetNewIdentityTitle(props.web.web.newIdentityTitle)\n\n      }\n \n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n     setOrders(data)\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let userRef = await response.json();\nsetUser(userRef)\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  },[])\n\n  \n  \n\n\n    if (props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={props.user} site={props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable identity system</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setEnableIdentitySystem(e.target.checked?true:false)}\n\n                              type=\"radio\"\n                              id=\"enable-id-system-one\"\n                              name=\"enable-id-system\"\n                              defaultValue=\"yes\"\n                              checked={enableIdentitySystem===true?true:false}\n\n                            />\n                            <label htmlFor=\"enable-id-system-one\">ON</label>\n                            <input\n                              onChange={e=>setEnableIdentitySystem(e.target.checked?false:true)}\n\n                              type=\"radio\"\n                              id=\"enable-id-system-two\"\n                              name=\"enable-id-system\"\n                              defaultValue=\"no\"\n                              checked={enableIdentitySystem===false?true:false}\n\n\n                            />\n                            <label htmlFor=\"enable-id-system-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Block trading without identity verification</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setBlockTradingWithoutIdentity(e.target.checked?true:false)}\n                              type=\"radio\"\n                              id=\"block-trading-one\"\n                              name=\"block-trading\"\n                              defaultValue=\"yes\"\n                              \n                              checked={blockTradingWithoutIdentity===true?true:false}\n\n                            />\n                            <label htmlFor=\"block-trading-one\">ON</label>\n                            <input\n                               onChange={e=>setBlockTradingWithoutIdentity(e.target.checked?false:true)}\n                              type=\"radio\"\n                              id=\"block-trading-two\"\n                              name=\"block-trading\"\n                              defaultValue=\"no\"\n                              checked={blockTradingWithoutIdentity===false?true:false}\n                            />\n                            <label htmlFor=\"block-trading-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Block deposit without identity verification</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"block-deposit-one\"\n                              name=\"block-deposit\"\n                              defaultValue=\"yes\"\n                              onChange={e=>setBlockDepositeWithoutIdentityVerification(e.target.checked?true:false)}\n                              checked={blockDepositeWithoutIdentityVerification===true?true:false}\n                            />\n                            <label htmlFor=\"block-deposit-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"block-deposit-two\"\n                              name=\"block-deposit\"\n                              defaultValue=\"no\"\n                              onChange={e=>setBlockDepositeWithoutIdentityVerification(e.target.checked?false:true)}\n                              checked={blockDepositeWithoutIdentityVerification==false?true:false}\n                            />\n                            <label htmlFor=\"block-deposit-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Block withdraw without identity verification</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"block-withdraw-one\"\n                              name=\"block-withdraw\"\n                              defaultValue=\"yes\"\n                              onChange={e=>setBlockWithdrawWithoutIdentity(e.target.checked?true:false)}\n                              checked={blockWithdrawWithoutIdentity===true?true:false}\n                            />\n                            <label htmlFor=\"block-withdraw-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"block-withdraw-two\"\n                              name=\"block-withdraw\"\n                              defaultValue=\"no\"\n                              onChange={e=>setBlockWithdrawWithoutIdentity(e.target.checked?false:true)}\n                              checked={blockWithdrawWithoutIdentity==false?true:false}\n                            />\n                            <label htmlFor=\"block-withdraw-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>New identity wizard title</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            onChange={e=>setNewIdentityWizardTitle(e.target.value)}\n                            value={newIdentityWizardTitle}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>New identity title</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            onChange={e=>setNewIdentityTitle(e.target.value)}\n                            value={newIdentityTitle}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>New identity wizard advertisement</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          onChange={e=>setNewIdentityWizardAdvert(e.target.value)}\n                          value={newIdentityWizardAdvert}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>New identity start button</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            onChange={e=>setNewIdentityStartButton(e.target.value)}\n                            value={newIdentityStartButton}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button onClick={onSaved} style={{ backgroundColor: \"#29c359\" }}>\n                          Save\n                        </button>\n                      </div>\n                    </div>\n                    <table style={{ marginTop: 20 }}>\n                      <tbody>\n                        <tr>\n                          <th>Identity step name</th>\n                          <th>Identity step description</th>\n                          <th>Identity order</th>\n                          <th />\n                        </tr>\n                        <tr>\n                          <td>Select your document</td>\n                          <td />\n                          <td>1</td>\n                          <td style={{ textAlign: \"right\" }}>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"primary-btn\"\n                              href=\"#\"\n                            >\n                              Down Order\n                            </a>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Step 1: Identity</td>\n                          <td>\n                            <ul>\n                              <li>Name (ex : Steve)</li>\n                              <li>Surname (ex : Smith)</li>\n                              <li>Address (ex : 123 Bull Street)</li>\n                            </ul>\n                          </td>\n                          <td>2</td>\n                          <td style={{ textAlign: \"right\" }}>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"validate\"\n                              href=\"#\"\n                            >\n                              Up Order\n                            </a>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"primary-btn\"\n                              href=\"#\"\n                            >\n                              Down Order\n                            </a>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Step 2: Upload Your Documents</td>\n                          <td />\n                          <td>3</td>\n                          <td style={{ textAlign: \"right\" }}>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"validate\"\n                              href=\"#\"\n                            >\n                              Up Order\n                            </a>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    {/* Add new identity step */}\n                    <h3 className=\"font-weight-normal\">\n                      Add new identity step\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Identity step name</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            onChange={e=>setIdentityStepName(e.target.value)}\n                            value={identityStepName}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Identity step type</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <select onChange={e=>setIdentityStepType(e.target.value)} \n                          value={identityStepType}\n                          className=\"dash-select-short\">\n                            <option value=\"Upload a new document\">\n                              Upload a new document\n                            </option>\n                            <option value=\"Choose documents from document list\">\n                              Choose documents from document list\n                            </option>\n                            <option value=\"EUR\">EUR</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Identity step description</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            onChange={e=>setIdentityStepDescription(e.target.value)}\n                            value={identityStepDescription}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable identity upload with webcam</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"webcam-upload-one\"\n                              name=\"webcam-upload\"\n                              defaultValue=\"yes\"\n                              onChange={e=>setEnableIdentityUploadWithWebCam(e.target.checked?true:false)}\n                              checked={enableIdentityUploadWithWebCam===true?true:false}\n                            />\n                            <label htmlFor=\"webcam-upload-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"webcam-upload-two\"\n                              name=\"webcam-upload\"\n                              defaultValue=\"no\"\n                              onChange={e=>setEnableIdentityUploadWithWebCam(e.target.checked?false:true)}\n                              checked={enableIdentityUploadWithWebCam==false?true:false}\n                            />\n                            <label htmlFor=\"webcam-upload-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Webcam document ratio</h4>\n                          <p>Ratio (Width / Height)</p>\n                        </div>\n                        <div className=\"actions\">\n                          <select onChange={e=>setWebCamDocumentRatio(e.target.value)} value={webCamDocumentRatio} className=\"dash-select-short\">\n                            <option value=\"1/1\">1/1</option>\n                            <option value=\"1/2\">1/2</option>\n                            <option value=\"1/3\">1/3</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button onChange={onSaved} style={{ backgroundColor: \"#29c359\" }}>\n                          Add new\n                        </button>\n                      </div>\n                    </div>\n                    {/* Document identity list */}\n                    <h3 className=\"font-weight-normal\">\n                      Document identity list\n                    </h3>\n                    <div className=\"hr\" />\n                    <table style={{ marginTop: 20 }}>\n                      <tbody>\n                        <tr>\n                          <th>Document name</th>\n                          <th />\n                        </tr>\n                        <tr>\n                          <td>Passport</td>\n                          <td>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Driving license</td>\n                          <td>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>ID Card</td>\n                          <td>\n                            <a\n                              style={{ margin: \"0 3px\" }}\n                              className=\"cancel\"\n                              href=\"#\"\n                            >\n                              Delete\n                            </a>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    {/* Add new identity document */}\n                    <h3 className=\"font-weight-normal\">\n                      Add new identity document\n                    </h3>\n                    <div className=\"hr\" />\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Document name</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button style={{ backgroundColor: \"#29c359\" }}>\n                          Add new\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n\n\nexport default Identity;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Intro.js",["674","675","676","677","678","679","680","681","682"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Intro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n  \n  \n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable news popup</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"news-popup-one\"\n                              name=\"news-popup\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"news-popup-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"news-popup-two\"\n                              name=\"news-popup\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"news-popup-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>News popup title</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>\n                            News popup video (put blank for not show video)\n                          </h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>News popup description</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea\n                            className=\"dash-textarea\"\n                            defaultValue={\"\"}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Advert users</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"advert-users-one\"\n                              name=\"advert-users\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"advert-users-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"advert-users-two\"\n                              name=\"advert-users\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"advert-users-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Enable intro</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"enable-intro-one\"\n                              name=\"enable-intro\"\n                              defaultValue=\"yes\"\n                              defaultChecked\n                            />\n                            <label htmlFor=\"enable-intro-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"enable-intro-two\"\n                              name=\"enable-intro\"\n                              defaultValue=\"no\"\n                            />\n                            <label htmlFor=\"enable-intro-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"select\">\n                          <select className=\"dash-select\">\n                            <option value=\"Watching list\">Watching list</option>\n                            <option value=\"Board\">Board</option>\n                            <option value=\"News\">News</option>\n                          </select>\n                        </div>\n                        <div className=\"input\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                        <div className=\"desc\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"select\">\n                          <select className=\"dash-select\">\n                            <option value=\"Watching list\">Watching list</option>\n                            <option value=\"Board\">Board</option>\n                            <option value=\"News\">News</option>\n                          </select>\n                        </div>\n                        <div className=\"input\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                        <div className=\"desc\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"select\">\n                          <select className=\"dash-select\">\n                            <option value=\"Watching list\">Watching list</option>\n                            <option value=\"Board\">Board</option>\n                            <option value=\"News\">News</option>\n                          </select>\n                        </div>\n                        <div className=\"input\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                        <div className=\"desc\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"select\">\n                          <select className=\"dash-select\">\n                            <option value=\"Watching list\">Watching list</option>\n                            <option value=\"Board\">Board</option>\n                            <option value=\"News\">News</option>\n                          </select>\n                        </div>\n                        <div className=\"input\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                        <div className=\"desc\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"save-btn\">\n                      <button>Save</button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Intro;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/LoginSignup.js",["683","684","685","686","687","688","689","690","691","692","693","694","695","696","697"],"import React, { useState, useEffect} from \"react\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport axios from \"axios\"\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport {message} from 'antd';\n\nconst endpoint=\"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\"\nconst LoginSIgnup =(props)=> {\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const [admin, setAdmin] = useState(true);\n  const [orders, setOrders] = useState();\n  const[allowsignup,setAlowSignup] = useState()\n  const[phoneNumberRequired, setPhoneNumberRequired]= useState() \n  const[userNeedVerifyAccount, setUserVerifiedAccount] = useState()\n  const[needCaptchaSignup,setNeedRecaptcha] = useState()\n  const[googleRecaptchaSiteKey , setGoogleRecaptchaSiteKey]= useState() \n  const[googleRecaptchaSiteKeySecret, setGoogleRecaptchaSiteKeySecret] = useState() \n  const[signWithGoogle,setSignWithGoogle] = useState()\n  const[googleAppID,setGoogleAppID] = useState() \n  const[googleAppSecret,setGoogleAppSecret]  = useState() \n  const[authorizationRedirectUrl,setAuthorizationRedirectUrl] = useState() \n  const[signInFacebook,setSignInFacebook ] = useState()\n  const[facebookAppId,setFacebookAppId ]= useState()\n  const[facebookAppSecret,setFacebookAppSecret] = useState() \n  const[URIOauthValid, setURIOauthValid]= useState() \n  const [submitLoading, setSubmitLoading]=useState(false)\n\n\n\n    // this.state = {\n    //   user: this.props.user,\n    //   redirect: \"/\",\n    //   data: {},\n    //   orders: [],\n    //   disA1: true,\n    //   disA2: true,\n    //   btcP: [],\n    //   market: false,\n    //   board: false,\n    //   port: false,\n    //   manager: false,\n    //   levIsh: false,\n    //   admin: true,\n\n   \n    const saveData=async()=>{\n      setSubmitLoading(true)\n    const res = await axios.put(\n      `${endpoint}/api/site/loginAppearance`,\n      {\n        allowsignup :allowsignup,\n        phoneNumberRequired :phoneNumberRequired,\n        userNeedVerifyAccount :userNeedVerifyAccount,\n        needCaptchaSignup :needCaptchaSignup,\n        googleRecaptchaSiteKey :googleRecaptchaSiteKey,\n        googleRecaptchaSiteKeySecret:googleRecaptchaSiteKeySecret,\n        signWithGoogle :signWithGoogle,\n        googleAppID :googleAppID,\n        googleAppSecret :googleAppSecret,\n        authorizationRedirectUrl :authorizationRedirectUrl,\n        signInFacebook:signInFacebook,\n        facebookAppId :facebookAppId,\n        facebookAppSecret :facebookAppSecret,\n        URIOauthValid :URIOauthValid\n       }\n   );\n \n   const{response}=res\n   console.log(response)\n     if (res.data) {\n      message.success('Settings successfully updated');\n      setSubmitLoading(false)\n    }\n    else(message.error(\"Settings update failed\"))\n    }\n\n\n    const myRef3 = props.user.user ? React.createRef() : \"\";\n   const textInput = props.user.user ? React.createRef() : \"\";\n\n  const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\nconst  fav = document.getElementById(\"favicon\");\n const title = document.getElementById(\"title\");\n\n  const closeForex=()=>{\n    console.log(\"Perform an action\")\n  }\n  useEffect(()=>{\n    if (props.site) {\nsetAlowSignup(props.web.web.allowsignup)\nsetPhoneNumberRequired(props.web.web.phoneNumberRequired)\nsetUserVerifiedAccount(props.web.web.userNeedVerifyAccount)\nsetNeedRecaptcha(props.web.web.needCaptchaSignup)\nsetGoogleRecaptchaSiteKey(props.web.web.googleRecaptchaSiteKey)    \nsetGoogleRecaptchaSiteKeySecret(props.web.web.googleRecaptchaSiteKeySecret)\nsetSignWithGoogle(props.web.web.signWithGoogle)\nsetSignInFacebook(props.web.web.signInFacebook)\nsetGoogleAppSecret(props.web.web.googleAppSecret)\nsetGoogleAppID(props.web.web.googleAppID)\nsetAuthorizationRedirectUrl(props.web.web.authorizationRedirectUrl)\nsetFacebookAppId(props.web.web.facebookAppId)\nsetFacebookAppSecret(props.web.web.facebookAppSecret)\nsetURIOauthValid(props.web.web.URIOauthValid)\n}\n\n\n\n\n  \n},[])\n\nuseEffect(()=>{\n\n\n\n  (async () => {\n    let response = await fetch(\n      `${endpoint}/api/trade/${\n        user.user && user.user!==null? user.user.user._id : \"\"\n      }`\n    );\n    let data = await response.json();\n   setOrders(data)\n  })();\n\n  (async () => {\n    let response = await fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n        user.user!== null &&user.user.user? user.user.user._id : \"\"\n      }`\n    );\n    let userRef = await response.json();\n\n    setUser(userRef);\n  })();\n\n  if (props.user.user) {\n    const script3 = document.createElement(\"script\");\n    script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n    script3.async = true;\n\n    myRef3.current.appendChild(script3);\n  }\n},[user])\n  \n\n\n    if (props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={props.user} site={props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Allow signup</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setAlowSignup(e.target.checked?true:false)}\n\n                              type=\"radio\"\n                              id=\"allow-signup-one\"\n                              name=\"allow-signup\"\n                              defaultValue=\"yes\"\n                              // defaultChecked\n                              checked={allowsignup===true?true:false}\n                            />\n                            <label htmlFor=\"allow-signup-one\">ON</label>\n                            <input\n                              onChange={e=>setAlowSignup(e.target.checked?false:true)}\n\n                              type=\"radio\"\n                              id=\"allow-signup-two\"\n                              name=\"allow-signup\"\n                              defaultValue=\"no\"\n                              checked={allowsignup===false?true:false}\n                            />\n                            <label htmlFor=\"allow-signup-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Phone number required</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setPhoneNumberRequired(e.target.checked?true:false)}\n                              type=\"radio\"\n                              id=\"phone-number-one\"\n                              name=\"phone-number\"\n                              defaultValue=\"yes\"\n                              // defaultChecked\n                              checked={phoneNumberRequired===true?true:false}\n\n                            />\n                            <label htmlFor=\"phone-number-one\">ON</label>\n                            <input\n                              onChange={e=>setPhoneNumberRequired(e.target.checked?false:true)}\n\n                              type=\"radio\"\n                              id=\"phone-number-two\"\n                              name=\"phone-number\"\n                              defaultValue=\"no\"\n                              checked={phoneNumberRequired===false?true:false}\n\n                            />\n                            <label htmlFor=\"phone-number-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>User need verify account</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setUserVerifiedAccount(e.target.checked?true:false)}\n                              type=\"radio\"\n                              id=\"verify-account-one\"\n                              name=\"verify-account\"\n                              defaultValue=\"yes\"\n                              checked={userNeedVerifyAccount===true?true:false}\n\n                              // defaultChecked\n                            />\n                            <label htmlFor=\"verify-account-one\">ON</label>\n                            <input\n                            onChange={e=>setUserVerifiedAccount(e.target.checked?false:true)}\n\n                              type=\"radio\"\n                              id=\"verify-account-two\"\n                              name=\"verify-account\"\n                              defaultValue=\"no\"\n                              checked={userNeedVerifyAccount===false?true:false}\n\n                            />\n                            <label htmlFor=\"verify-account-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Need captcha signup</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setNeedRecaptcha(e.target.checked?true:false)}\n\n                              type=\"radio\"\n                              id=\"need-captcha-one\"\n                              name=\"need-captcha\"\n                              defaultValue=\"yes\"\n                              checked={needCaptchaSignup===true?true:false}\n\n                            />\n                            <label htmlFor=\"need-captcha-one\">ON</label>\n                            <input\n                              onChange={e=>setNeedRecaptcha(e.target.checked?false:true)}\n                              type=\"radio\"\n                              id=\"need-captcha-two\"\n                              name=\"need-captcha\"\n                              defaultValue=\"no\"\n                              checked={needCaptchaSignup===false?true:false}\n\n                            />\n                            <label htmlFor=\"need-captcha-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Google Recaptcha Site Key</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                          onChange={e=>setGoogleRecaptchaSiteKey(e.target.value)}\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            value={googleRecaptchaSiteKey}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Google Recaptcha Secret Key</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                          onChange={e=>setGoogleRecaptchaSiteKeySecret(e.target.value)}\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            value={googleRecaptchaSiteKeySecret}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Authorised redirect url</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <small className=\"text-fade\">\n                            https://linkinvest.pro/app/modules/kr-googleoauth/src/actions/callback.php\n                          </small>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Sigin with Facebook</h4>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              onChange={e=>setSignInFacebook(e.target.checked?true:false)}\n                              type=\"radio\"\n                              id=\"facebook-signin-one\"\n                              name=\"facebook-signin\"\n                              defaultValue=\"yes\"\n                              checked={signInFacebook===true?true:false}\n\n                            />\n                            <label htmlFor=\"facebook-signin-one\">ON</label>\n                            <input\n                              onChange={e=>setSignInFacebook(e.target.checked?false:true)}\n\n                              type=\"radio\"\n                              id=\"facebook-signin-two\"\n                              name=\"facebook-signin\"\n                              defaultValue=\"no\"\n                              checked={signInFacebook===false?true:false}\n\n\n                            />\n                            <label htmlFor=\"facebook-signin-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Facebook App ID</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                          onChange={e=>setFacebookAppId(e.target.value)}\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            value={facebookAppId}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Facebook App Secret</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                          onChange={e=>setFacebookAppSecret(e.target.value)}\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                            value={facebookAppSecret}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Facebook URI Oauth Valid</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <small className=\"text-fade\">\n                            https://linkinvest.pro/app/modules/kr-facebookoauth/src/actions/callback.php\n                          </small>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"save-btn\">\n                      <button onClick={saveData}>Save</button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n\n\nexport default LoginSIgnup;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/ForgotPassword.js",[],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Additional.js",["698","699","700","701","702","703","704","705","706"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\n\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Additional extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n\n\n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav \n      // this.title.innerHTML = this.web.siteTitle \n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={this.myRef3}>\n          {/* Beggining of navbar */}\n          \n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Add additional page</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                          <br />\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                          <br />\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                          <span className=\"font-size-12\">\n                            You can choose beetween 'Page icon' and 'Page icon\n                            svg' (Page icon is priority) - List icons available\n                            here :{\" \"}\n                            <a href=\"https://linearicons.com/free\">\n                              https://linearicons.com/free\n                            </a>\n                          </span>\n                          <br />\n                          <br />\n                          <input\n                            type=\"text\"\n                            name=\"text\"\n                            className=\"dash-input\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"save-btn\">\n                        <button>Add</button>\n                      </div>\n                    </div>\n                    <table style={{ marginTop: 15 }}>\n                      <tbody>\n                        <tr>\n                          <th>Name</th>\n                          <th>Url</th>\n                          <th>Icon</th>\n                          <th>SVG Picture</th>\n                          <th />\n                        </tr>\n                        <tr>\n                          <td />\n                          <td />\n                          <td />\n                          <td />\n                          <td />\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Additional;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/AutoTrading.js",["707","708","709","710","711","712","713"],"import React, { Component } from \"react\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { Table, Tag, Space } from \"antd\";\nimport EditAutoTrade from \"../Component/EditAutotradeModal\";\nclass AutoTrading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: [],\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      levIsh: false,\n      admin: true,\n\n      allUsers: [],\n      allVerify: [],\n      allDeposit: [],\n      allWithdraw: [],\n      allTrades: [],\n      userId: {},\n      displayC: false,\n      curDeposit: [],\n      card: true,\n      bal: false,\n      payments: false,\n      secu: false,\n      with: false,\n      orderT: false,\n      updateAmount: \"\",\n      userName: \"\",\n      profitPercentage: \"\",\n      subscriptionFee: \"\",\n      data: [],\n      getLoading: false,\n    };\n    this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n    this.textInput = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  componentDidMount() {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade`\n      );\n      let data = await response.json();\n      this.setState({\n        data: data,\n      });\n    })();\n    (async () => {\n      this.setState({ getLoading: true });\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n        getLoading: false,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allUser`\n      );\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allUsers: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allWithdraw`\n      );\n      let data = await response.json();\n\n      console.log(data);\n      this.setState({\n        allWithdraw: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allDeposit`\n      );\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allDeposit: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allTrade`\n      );\n\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allTrades: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/allVerify`\n      );\n      let data = await response.json();\n      console.log(data);\n\n      this.setState({\n        allVerify: data,\n      });\n    })();\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      this.setState({\n        orders: data,\n      });\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          this.state.user.user ? this.state.user.user.user._id : \"\"\n        }`\n      );\n      let user = await response.json();\n\n      this.setState({\n        user: user,\n      });\n    })();\n\n    if (this.props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      this.myRef3.current.appendChild(script3);\n    }\n  }\n  delete = (id) => {\n    axios\n      .delete(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade/${id}`)\n      .then(\n        (response) => {\n          (async () => {\n            let res = await fetch(\n              `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade`\n            );\n            let data = await res.json();\n            this.setState({\n              data: data,\n            });\n          })();\n          message.success(\"successfully deleted auto-trade\");\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error deleting auto-trade\");\n        }\n      );\n  };\n  submit = () => {\n    let data = {\n      subscriptionFee: this.state.subscriptionFee,\n      profitPercentage: this.state.profitPercentage,\n      userName: this.state.userName,\n    };\n\n    axios\n      .post(\"https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade\", data)\n      .then(\n        (response) => {\n          (async () => {\n            let res = await fetch(\n              `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade`\n            );\n            let data = await res.json();\n            this.setState({\n              data: data,\n            });\n          })();\n          this.setState({\n            subscriptionFee: \"\",\n            profitPercentage: \"\",\n            userName: \"\",\n          });\n          message.success(\"successfully added auto-trade\");\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error adding auto-trade\");\n        }\n      );\n  };\n\n  getAll = () => {\n    (async () => {\n      this.setState({ getLoading: true });\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade`\n      );\n      let data = await response.json();\n      this.setState({\n        data: data,\n        getLoading: false,\n      });\n    })();\n  };\n  columns = [\n    {\n      title: \"Username\",\n      dataIndex: \"userName\",\n      key: \"userName\",\n      render: (text) => <b>{text}</b>,\n    },\n\n    {\n      title: \"Profit (in percentage)\",\n      dataIndex: \"profitPercentage\",\n      key: \"profitPercentage\",\n    },\n    {\n      title: \"Subscription Fee\",\n      dataIndex: \"subscriptionFee\",\n      key: \"subscriptionFee\",\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <EditAutoTrade id={record._id} callback={this.getAll}>\n            <Tag color=\"blue\" style={{ cursor: \"pointer\" }}>\n              Edit\n            </Tag>\n          </EditAutoTrade>\n          <Tag\n            onClick={() => this.delete(record._id)}\n            color=\"red\"\n            style={{ cursor: \"pointer\" }}\n          >\n            Delete\n          </Tag>\n        </Space>\n      ),\n    },\n  ];\n\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return (\n        <div ref={this.myRef3}>\n          <section className=\"dash-contents\" onClick={this.closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={this.props.user} site={this.props.site} />\n              {this.state.admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Username</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            onChange={(e) =>\n                              this.setState({ userName: e.target.value })\n                            }\n                            value={this.state.userName}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Profit (in percentage)</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"number\"\n                            name=\"text\"\n                            onChange={(e) =>\n                              this.setState({\n                                profitPercentage: e.target.value,\n                              })\n                            }\n                            value={this.state.profitPercentage}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Subscription Fee</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"number\"\n                            name=\"text\"\n                            onChange={(e) =>\n                              this.setState({ subscriptionFee: e.target.value })\n                            }\n                            value={this.state.subscriptionFee}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                        <button onClick={this.submit}>Add</button>\n                      </div>\n                    </div>\n                    <div className=\"container-fluid mt-5\">\n\n                      <Table\n                        loading={this.state.getLoading}\n                        columns={this.columns}\n                        dataSource={this.state.data}\n                        pagination={false}\n                        scroll={{ y: 240 }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\nexport default AutoTrading;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/Templates.js",["714","715","716","717","718","719","720","721","722","723","724","725","726"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport { Select, message } from \"antd\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\nconst Templates=(props)=>{\n  const [orders, setOrders] = useState();\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const closeForex = () => {\n    console.log(\"input a function here to close forex\");\n  };\n\n   const myRef3 = props.user.user ? React.createRef() : \"\";\n   const textInput = props.user.user ? React.createRef() : \"\";\n\n  const[privacyPolicy,setprivacyPolicy]=useState(\"\")\n  const[termsOfServices,settermsOfServices]=useState(\"\")\n  const[newUserWelcomeMail,setnewUserWelcomeMail]=useState(\"\")\n  const[activateUserAccountMail,setactivateUserAccountMail]=useState(\"\")\n  const[adminWithdrawRequestMail,setadminWithdrawRequestMail]=useState(\"\")\n  const[confirmWithdrawRequestMail,setconfirmWithdrawRequestMail]=useState(\"\")\n  const[wthdrawRequestProcessedMail,setwthdrawRequestProcessedMail]=useState(\"\")\n  const[userResetPasswordMail,setuserResetPasswordMail]=useState(\"\")\n  const[userResetPasswordConfirmationMail ,setuserResetPasswordConfirmationMail]=useState(\"\")\n  const[userSubscriptionEExpirationMail ,setuserSubscriptionEExpirationMail]=useState(\"\")\n  const[userNewIPDetectedMail,setuserNewIPDetectedMail]=useState(\"\")\n  const [submitLoading, setSubmitLoading] = useState(false);\nconst admin=true\nconst manager=true\n//   const  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n// const  fav = document.getElementById(\"favicon\");\n//  const title = document.getElementById(\"title\");\nuseState(()=>{\n  if (props.site) {\n    setprivacyPolicy(props.web.web.privacyPolicy);\n    settermsOfServices(props.web.web.termsOfServices);\n    setnewUserWelcomeMail(props.web.web.newUserWelcomeMail);\n    setactivateUserAccountMail(props.web.web.activateUserAccountMail);\n    setadminWithdrawRequestMail(props.web.web.adminWithdrawRequestMail);\n    setconfirmWithdrawRequestMail(props.web.web.confirmWithdrawRequestMail);\n    setadminWithdrawRequestMail(props.web.web.adminWithdrawRequestMail);\n    setwthdrawRequestProcessedMail(props.web.web.wthdrawRequestProcessedMail);\n    setuserResetPasswordMail(props.web.web.userResetPasswordMail);\n    setuserResetPasswordConfirmationMail (props.web.web.userResetPasswordConfirmationMail );\n    setuserSubscriptionEExpirationMail(props.web.web.userSubscriptionEExpirationMail);\n    setuserNewIPDetectedMail(props.web.web.userNewIPDetectedMail);\n    \n  }\n})\n\nlet dataAll = {\n  privacyPolicy :privacyPolicy,\n    termsOfServices :termsOfServices,\n    newUserWelcomeMail :newUserWelcomeMail,\n    activateUserAccountMail :activateUserAccountMail,\n    adminWithdrawRequestMail :adminWithdrawRequestMail,\n    confirmWithdrawRequestMail :confirmWithdrawRequestMail,\n    wthdrawRequestProcessedMail :wthdrawRequestProcessedMail,\n    userResetPasswordMail :userResetPasswordMail,\n    userResetPasswordConfirmationMail :userResetPasswordConfirmationMail,\n    userSubscriptionEExpirationMail :userSubscriptionEExpirationMail,\n    userNewIPDetectedMail :userNewIPDetectedMail\n};\nconst onSaved = async () => {\n  setSubmitLoading(true);\n  const res = await axios.put(\n    `${endpoint}/api/site/mailtemplates`,\n    dataAll\n  );\n\n  if (res.data) {\n    message.success(\"Settings successfully updated\");\n    setSubmitLoading(false);\n  }\n};\n\n\nuseEffect(()=>{\n\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n      setOrders(data)\n    })();\n\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user ? user.user.user._id : \"\"\n        }`\n      );\n      let CurrentUser = await response.json();\n\n    setUser(CurrentUser)\n    })();\n\n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n\n      myRef3.current.appendChild(script3);\n    }\n  },[])\n\n\n    if (props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // console.log(this.state.orderIsh);\n\n      return (\n        <div ref={myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={props.user} site={props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <h3>Page configuration</h3>\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Privacy policy</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={privacyPolicy} onChange={e=>setprivacyPolicy(e.target.value)}  className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                        <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Terms of service</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={termsOfServices} onChange={e=>settermsOfServices(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <h3>Templates configuration</h3>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>New user account, welcome email</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={newUserWelcomeMail} onChange={e=>setnewUserWelcomeMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Active user account</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={activateUserAccountMail} onChange={e=>setactivateUserAccountMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Admin withdraw request</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={adminWithdrawRequestMail} onChange={e=>setadminWithdrawRequestMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Confirm withdraw request</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={confirmWithdrawRequestMail} onChange={e=>setconfirmWithdrawRequestMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Withdraw request processed</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea  value={wthdrawRequestProcessedMail} onChange={e=>setwthdrawRequestProcessedMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>User reset password</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={userResetPasswordMail} onChange={e=>setuserResetPasswordMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>User reset password done</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={userResetPasswordConfirmationMail} onChange={e=>setuserResetPasswordConfirmationMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Subscription expiration user</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={userSubscriptionEExpirationMail} onChange={e=>setuserSubscriptionEExpirationMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>New login IP detected for a user</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <textarea value={userNewIPDetectedMail} onChange={e=>setuserNewIPDetectedMail(e.target.value)} className=\"dash-text-area\" />\n                        </div>\n                      </div>\n\n                      <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={onSaved}>Save</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n\n\nexport default Templates;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Foot.js",["727","728","729","730","731"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  OverlayTrigger,\n  Tooltip,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport {\n  ChatTextFill,\n  VolumeUpFill,\n  GearFill,\n  ArrowsFullscreen,\n} from \"react-bootstrap-icons\";\nimport axios from \"axios\";\nimport \"../AccountsAsset/Foot.css\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\nexport default function Foot() {\n  const [currentDate] = useState(Date().toLocaleString());\n  const [support, setSupport] = useState(false);\n  const [DPOEmail, setDPOEmail] = useState(\"\");\n  const [DPOPhone, setDPOPhone] = useState(\"\");\n  const [supportAddress, setsupportAddress] = useState(\"\");\n  const [supportMail, setsupportMail] = useState(\"\");\n  const [supportPhone, setsupportPhone] = useState(\"\");\n\n  useEffect(() => {\n    const res = axios.get(`${endpoint}/api/site`);\n    res.then((response) => {\n      setDPOPhone(response.data.DPOPhone);\n      setDPOEmail(response.data.DPOEmail);\n      setsupportAddress(response.data.supportAddress);\n      setsupportMail(response.data.supportMail);\n      setsupportPhone(response.data.supportPhone);\n    });\n  }, []);\n  return (\n    <footer className=\"foot\">\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex align-items-center\">\n          <Button\n            variant=\"primary\"\n            className=\"btn-support\"\n            onClick={() => setSupport(!support)}\n          >\n            <ChatTextFill className=\"mr-2\" />\n            Support\n          </Button>\n          <p className=\"ml-2\">Everyday, around the clock</p>\n        </div>\n        <div className=\"footer-right d-flex align-items-center\">\n          {/* <OverlayTrigger overlay={<Tooltip id=\"sound-tooltip\">Sound</Tooltip>}>\n                        <span>\n                            <VolumeUpFill className=\"ml-2\" />\n                        </span>\n                    </OverlayTrigger>\n                    <OverlayTrigger overlay={<Tooltip id=\"settings-tooltip\">Settings</Tooltip>}>\n                        <span>\n                            <GearFill className=\"ml-2\" />\n                        </span>\n                    </OverlayTrigger> */}\n          <p className=\"ml-2\">\n            Current Time: <span>{currentDate}</span>\n          </p>\n          {/* <OverlayTrigger overlay={<Tooltip id=\"fullscreen-tooltip\">Switch to fullscreen mode</Tooltip>}>\n                        <span>\n                            <ArrowsFullscreen className=\"ml-2 fullscreen\" />\n                        </span>  \n                    </OverlayTrigger> */}\n        </div>\n      </div>\n\n      {support ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal support-modal\">\n            <div className=\"header\">Contact Support</div>\n            <span className=\"close\" onClick={() => setSupport(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <Container fluid>\n              <Row>\n                <Col xs={12} md={6}>\n                  <div className=\"support-image\"></div>\n                </Col>\n                <Col xs={12} md={6}>\n                  <div className=\"support-wrapper\">\n                    <h6 className=\"text-left\">SUPPORT</h6>\n                    <hr />\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>EMAIL</p>\n                      </div>\n                      <div>\n                        <p>\n                          <a href={`mailto:${supportMail}`}>{supportMail}</a>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>PHONE</p>\n                      </div>\n                      <div>\n                        <p>\n                          <a href=\"tel:+234800000000\">{supportPhone}</a>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>ADDRESS</p>\n                      </div>\n                      <div>\n                        <p>{supportAddress}</p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4\">\n                      <h6 className=\"text-left\">CONTACT DPO</h6>\n                      <hr />\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <p>EMAIL</p>\n                        </div>\n                        <div>\n                          <p>\n                            <a href={`mailto:${DPOEmail}`}>{DPOEmail}</a>\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <p>PHONE</p>\n                        </div>\n                        <div>\n                          <p>\n                            <a href=\"tel:+234800000000\">{DPOPhone}</a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n    </footer>\n  );\n}\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/RunningAutoTrade.js",["732"],"import React from \"react\";\nimport Favicon from \"react-favicon\";\n\n// import axios from \"axios\";\n\nconst RunningAutoTrade = ({ children }) => {\n  // const [autotradingResponded, setAutotradResponded] = useState(\"\");\n  // useEffect(() => {\n  //   axios\n  //     .get(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade`)\n  //     .then((response) => {\n  //       response.data.forEach((trade) => Trade(trade._id));\n  //     });\n  // }, [autotradingResponded]);\n\n  // const Trade = (_id) => {\n  //   axios\n  //     .put(\n  //       `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/trade/${_id}`\n  //     )\n  //     .then((response) => {\n  //       setAutotradResponded(true);\n  //     });\n  // };\n  return (\n    <>\n      {/* <Favicon url={web.length > 0 ? web.web.siteFav : \"\"} />\n      <Favicon url={web.length > 0 ? web.siteFav : \"\"} /> */}\n      {children}\n    </>\n  );\n};\n\nexport default RunningAutoTrade;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Pages/MailS.js",["733","734","735","736","737","738","739","740","741","742","743","744","745","746"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport Sidebar from \"../Component/Sidebar\";\nimport axios from \"axios\"\nimport AdminSidebar from \"../Component/AdminSidebar\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\nimport {message} from 'antd';\nconst endpoint=\"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\"\nconst MailS=(props)=>{\n  const [user, setUser] = useState(props.user ? props.user : null);\n  const [admin, setAdmin] = useState(true);\n  const [orders, setOrders] = useState();\n  const[smtp, setSMTP]=useState(true)\n\n  const[mailEngine,setmailEngine]=useState(\"\")\n  const[mailForm,setmailForm]=useState(\"\")\n  const[SMTPServer, setSMTPServer]=useState(\"\")\n  const[SMTPPort, setSMTPPort]=useState(\"\")\n  const[SMTPMail,setSMTPMail]=useState(\"\")\n  const[SMTPPassword,setSMTPPassword]=useState(\"\")\n  const[EmailSenderName,setEmailSenderName]=useState(\"\")\n  const[emailSendName,setemailSendName]=useState(\"\")\n  const[supportMail,setsupportMail]=useState(\"\")\n  const[supportPhone,setsupportPhone]=useState(\"\")\n  const[supportAddress,setsupportAddress]=useState(\"\")\n  const[DPOPhone,setDPOPhone]=useState(\"\")\n  const[DPOEmail,setDPOEmail]=useState(\"\")\n  const[sendWelcomeMail,setsendWelcomeMail]=useState(false)\n  const[welcomeMail,setwelcomeMail]=useState(\"\")\n  const[newUserWelcomeMailTitle,setnewUserWelcomeMailTitle]=useState(false)\n  const [submitLoading, setSubmitLoading]=useState(false)\n\n    const myRef3 = props.user.user ? React.createRef() : \"\";\n   const textInput = props.user.user ? React.createRef() : \"\";\n\n\n   const saveData=async()=>{\n    setSubmitLoading(true)\n  const res = await axios.put(\n    `${endpoint}/api/site/mailsettings`,\n    {\n      mailEngine :mailEngine,\n      SMTPServer:SMTPServer,\n      SMTPPort:SMTPPort,\n      SMTPMail:SMTPMail,\n      SMTPPassword:SMTPPassword,\n      EmailSenderName:EmailSenderName,\n      mailForm :mailForm,\n      emailSendName :emailSendName,\n      supportMail :supportMail,\n      supportPhone :supportPhone,\n      supportAddress :supportAddress,\n      DPOPhone :DPOPhone,\n      DPOEmail :DPOEmail,\n      sendWelcomeMail :sendWelcomeMail,\n      welcomeMail :welcomeMail,\n      newUserWelcomeMailTitle :newUserWelcomeMailTitle,\n     }\n );\n\n const{response}=res\n console.log(response)\n   if (res.data) {\n    message.success('Settings successfully updated');\n    setSubmitLoading(false)\n  }\n  else(message.error(\"Settings update failed\"))\n  }\n  useEffect(()=>{\n    if (props.site) {\n      console.log(props.web.web)\n      setmailEngine(props.web.web.mailEngine)\n      setSMTPPort(props.web.web.SMTPPort)\n      setSMTPServer(props.web.web.SMTPServer)\n      setSMTPMail(props.web.web.SMTPMail)\n      setSMTPPassword(props.web.web.SMTPPassword)\n      setEmailSenderName(props.web.web.EmailSenderName)\n      setmailForm(props.web.web.mailForm)\n      setemailSendName(props.web.web.emailSendName)\n      setsupportMail(props.web.web.supportMail)\n      setsupportPhone(props.web.web.supportPhone)    \n      setsupportAddress(props.web.web.supportAddress)\n      setDPOPhone(props.web.web.DPOPhone)\n      setDPOEmail(props.web.web.DPOEmail)\n      setsendWelcomeMail(props.web.web.sendWelcomeMail)\n      setwelcomeMail(props.web.web.welcomeMail)\n      setnewUserWelcomeMailTitle(props.web.web.newUserWelcomeMailTitle,)\n\n}\n  },[])\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     user: this.props.user,\n  //     redirect: \"/\",\n  //     data: {},\n  //     orders: [],\n  //     disA1: true,\n  //     disA2: true,\n  //     btcP: [],\n  //     market: false,\n  //     board: false,\n  //     port: false,\n  //     manager: false,\n  //     levIsh: false,\n  //     admin: true,\n  //     smtp: false,\n  //   };\n  //   this.myRef3 = this.props.user.user ? React.createRef() : \"\";\n  //   this.textInput = this.props.user.user ? React.createRef() : \"\";\n  // }\n  \n\n  // componentDidMount() {\n  //   (async () => {\n  //     let response = await fetch(\n  //       `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${\n  //         this.state.user.user ? this.state.user.user.user._id : \"\"\n  //       }`\n  //     );\n  //     let data = await response.json();\n  //     this.setState({\n  //       orders: data,\n  //     });\n  //   })();\n\n  //   (async () => {\n  //     let response = await fetch(\n  //       `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n  //         this.state.user.user ? this.state.user.user.user._id : \"\"\n  //       }`\n  //     );\n  //     let user = await response.json();\n\n  //     this.setState({\n  //       user: user,\n  //     });\n  //   })();\n\n  //   if (this.props.user.user) {\n  //     const script3 = document.createElement(\"script\");\n  //     script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n  //     script3.async = true;\n\n  //     this.myRef3.current.appendChild(script3);\n  //   }\n  // }\n  // switch = (e) => {\n  //   if (e.target.value === \"Send emails with SMTP credentials\") {\n  //     this.setState({ smtp: true });\n  //   } else {\n  //     this.setState({ smtp: false });\n  //   }\n  // };\n  useEffect(()=>{\n\n\n\n    (async () => {\n      let response = await fetch(\n        `${endpoint}/api/trade/${\n          user.user && user.user!==null? user.user.user._id : \"\"\n        }`\n      );\n      let data = await response.json();\n     setOrders(data)\n    })();\n  \n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${\n          user.user!== null &&user.user.user? user.user.user._id : \"\"\n        }`\n      );\n      let userRef = await response.json();\n  \n      setUser(userRef);\n    })();\n  \n    if (props.user.user) {\n      const script3 = document.createElement(\"script\");\n      script3.src = \"https://cdn.jsdelivr.net/gh/codabae/hostjs/dashUPPER15.js\";\n      script3.async = true;\n  \n      myRef3.current.appendChild(script3);\n    }\n  },[user])\n    \n  \n  \n      if (props.user.length === 0) {\n        return <Redirect to=\"/\" />;\n      } else {\n        // console.log(this.state.orderIsh);\n  \n        const closeForex=()=>{\n          console.log(\"Perform an action\")\n        }\n      return (\n        <div ref={myRef3}>\n          {/* Beggining of navbar */}\n\n          {/* Ending of navbar */}\n          {/* Beginning of contents */}\n          <section className=\"dash-contents\" onClick={closeForex}>\n            <div className=\"dash-row\">\n              <Sidebar user={props.user} site={props.site} />\n\n              {/* start route */}\n\n              {/* start route */}\n              {admin ? (\n                <div\n                  className=\"full-width dash-row\"\n                  style={{\n                    paddingLeft: 0,\n                    paddingBottom: 35,\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <AdminSidebar />\n\n                  <div className=\"admin-content\">\n                    <div className=\"public-card\">\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Mail engine</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <select\n                          value={mailEngine}\n                            className=\"dash-select-short\"\n                            onChange={(e)=>setmailEngine(e.target.value)}\n                          >\n                            <option value=\"Send emails with default mail function of the server\">\n                              Send emails with default mail function of the\n                              server\n                            </option>\n                            <option value=\"Send emails with SMTP credentials\">\n                              Send emails with SMTP credentials\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n\n                      {smtp ? (\n                        <>\n                          <div className=\"each-row dash-row\">\n                            <div className=\"dtls\">\n                              <h4>SMTP Server</h4>\n                              <p>your smtp host</p>\n                            </div>\n                            <div className=\"actions\">\n                              <input\n                                className=\"dash-input\"\n                                type=\"text\"\n                                name=\"text\"\n                                value={SMTPServer}\n                                onChange={e=>setSMTPServer(e.target.value)}\n                                placeholder=\"your sending mails address\"\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"each-row dash-row\">\n                            <div className=\"dtls\">\n                              <h4>SMTP Port</h4>\n                              <p>your smtp port</p>\n                            </div>\n                            <div className=\"actions\">\n                              <input\n                                className=\"dash-input\"\n                                type=\"text\"\n                                name=\"text\"\n                                value={SMTPPort}\n                                onChange={e=>setSMTPPort(e.target.value)}\n                                placeholder=\"your sending mails address\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"each-row dash-row\">\n                            <div className=\"dtls\">\n                              <h4>SMTP Mail</h4>\n                              <p>your smtp mail</p>\n                            </div>\n                            <div className=\"actions\">\n                              <input\n                                className=\"dash-input\"\n                                type=\"text\"\n                                name=\"text\"\n                                placeholder=\"your sending mails address\"\n                                value={SMTPMail}\n                                onChange={e=>setSMTPMail(e.target.value)}\n                              />\n                            </div>\n                          </div>\n                          <div className=\"each-row dash-row\">\n                            <div className=\"dtls\">\n                              <h4>SMTP Password</h4>\n                              <p>your smtp password</p>\n                            </div>\n                            <div className=\"actions\">\n                              <input\n                                className=\"dash-input\"\n                                type=\"password\"\n                                name=\"text\"\n                                placeholder=\"your sending mails address\"\n                                value={SMTPPassword}\n                                onChange={e=>setSMTPPassword(e.target.value)}\n                              />\n                            </div>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"each-row dash-row\">\n                          <div className=\"dtls\">\n                            <h4>Mail from</h4>\n                            <p>Exemple : no-reply@mycompany.com</p>\n                          </div>\n                          <div className=\"actions\">\n                            <input\n                              className=\"dash-input\"\n                              type=\"text\"\n                              name=\"text\"\n                              placeholder=\"your sending mails address\"\n                            />\n                          </div>\n                        </div>\n                      )}\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Email sender name</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Trade\"\n                            value={EmailSenderName}\n                            onChange={e=>setEmailSenderName(e.target.value)}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Support mail</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Support mail\n                            \"\n                            value={supportMail}\n                            onChange={e=>setsupportMail(e.target.value)}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Support Phone</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Support Phone\n\n                            \"\n                            value={supportPhone}\n                            onChange={e=>setsupportPhone(e.target.value)}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Support Address</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Support Address\"\n                            value={supportAddress}\n                            onChange={e=>setsupportAddress(e.target.value)}\n                            />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>DPO mail</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"DPO mail\n\n\n\n                            \"\n                            value={DPOEmail}\n                            onChange={e=>setDPOEmail(e.target.value)}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>DPO Phone</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"DPO Phone\n\n\n\n\n                            \"\n                            value={DPOPhone}\n                            onChange={e=>setDPOPhone(e.target.value)}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Send welcome mail</h4>\n                          <p>You need to refresh the page after change</p>\n                        </div>\n                        <div className=\"actions switch-field\">\n                          <div className=\"switch-field-round\">\n                            <input\n                              type=\"radio\"\n                              id=\"footer-bar-one\"\n                              name=\"footer-bar\"\n                              defaultValue=\"yes\"\n                              onChange={e=>setsendWelcomeMail(e.target.checked?true:false)}\n                              checked={sendWelcomeMail===true?true:false}\n                            />\n                            <label htmlFor=\"footer-bar-one\">ON</label>\n                            <input\n                              type=\"radio\"\n                              id=\"footer-bar-two\"\n                              name=\"footer-bar\"\n                              defaultValue=\"no\"\n                              onChange={e=>setsendWelcomeMail(e.target.checked?false:true)}\n                              checked={sendWelcomeMail===false?true:false}\n\n                            />\n                            <label htmlFor=\"footer-bar-two\">OFF</label>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Welcome mail subject</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Welcome mail subject \"\n                            value={newUserWelcomeMailTitle}\n                            onChange={e=>setnewUserWelcomeMailTitle(e.target.value)}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"each-row dash-row\">\n                        <div className=\"dtls\">\n                          <h4>Welcome mail message</h4>\n                        </div>\n                        <div className=\"actions\">\n                          <input\n                            className=\"dash-input\"\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Welcome mail subject \"\n                            value={welcomeMail}\n                            onChange={e=>setwelcomeMail(e.target.value)}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"save-btn\">\n                      <button disabled={submitLoading} onClick={saveData}>Save</button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {this.state.admin ? () : ''\n\n             } */}\n\n              {/* storrrrrp */}\n            </div>\n          </section>\n        </div>\n      );\n    }\n  }\n\nexport default MailS;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Nav.js",["747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794"],"import React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport {\n  Card,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Button,\n  Container,\n  Row,\n  Col,\n  Form,\n  Tabs,\n  Tab,\n  NavLink,\n  Spinner,\n} from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport axios from \"axios\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport NumberFormat from \"react-number-format\";\nimport visacard from \"../AccountsAsset/images/visa.png\";\nimport coingate from \"../AccountsAsset/images/coingate.png\";\nimport mastercard from \"../AccountsAsset/images/mastercard.svg\";\nimport discover from \"../AccountsAsset/images/discover-network.jpeg\";\nimport americanexpress from \"../AccountsAsset/images/american-express.png\";\nimport nortonsecure from \"../AccountsAsset/images/norton-secure.png\";\nimport mcafeesecure from \"../AccountsAsset/images/mcafee-secure.jpeg\";\nimport securessl from \"../AccountsAsset/images/secure-ssl-encryption.png\";\nimport { countryList as profileCountryList } from \"../Component/CountryList/CountryList\";\n\nimport { Upload, message as messageAnt, Button as ButtonAnt } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport {\n  X,\n  Plus,\n  CameraFill,\n  Pen,\n  PlusCircle,\n  WalletFill,\n  QuestionCircleFill,\n  ArrowRepeat,\n  ArrowClockwise,\n  GearFill,\n  BoxArrowDownRight,\n} from \"react-bootstrap-icons\";\nimport \"./NavBar/NavBar.css\";\nimport transfer from \"../AccountsAsset/images/bank-transfer.svg\";\nimport crypto from \"../AccountsAsset/images/crypto-currencies.svg\";\nimport Notification from \"./Notification\";\nimport { message } from \"antd\";\nimport Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\nimport qrcode from \"../AccountsAsset/images/qrcode.png\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n\n//AntDesign upload function\n\n//add upload endpoint to action\nconst properties = {\n  name: \"file\",\n  action: \"\",\n  headers: {\n    authorization: \"authorization-text\",\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      messageAnt.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      messageAnt.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nfunction NavbarC(props) {\n  const history = useHistory();\n  const { location } = props;\n  const [credit, setCredit] = useState(false);\n  const [withdraw, setWithdraw] = useState(false);\n  const [personalData, setPersonalData] = useState(false);\n  const [support, setSupport] = useState(false);\n  const [withdrawSettings, setWithdrawSettings] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [bankTransfer, setBankTransfer] = useState(false);\n  const [notify, setNotify] = useState(false);\n  const [autoTrade, setAutoTrade] = useState(false);\n  const [cryptoCurrency, setCryptoCurrency] = useState(false);\n  const [yourName, setYourName] = useState(\"\");\n  const [yourEmailAddress, setYourEmailAddress] = useState(\"\");\n  const [profileCountry, setProfileCountry] = useState(\"Nigeria\");\n  const [yourLastName, setYourLastName] = useState(\"\");\n\n  const [yourLanguage, setYourLanguage] = useState(\"\");\n  const [yourCurrency, setYourCurrency] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardCvv, setCardCvv] = useState(\"\");\n  const [cardExpiryDate, setCardExpiryDate] = useState(\"\");\n  const [cardHolderName, setCardHolder] = useState(\"\");\n  const [cardYear, setCardYear] = useState(\"\");\n  const [cardDepositAmount, setCardDepositAmount] = useState(\"\");\n  const [cardCurrency, setCardCurrency] = useState(\"\");\n  const [bankName, setBankName] = useState(\"\");\n  const [bankAddress, setBankAddress] = useState(\"\");\n  const [bankCity, setBankCity] = useState(\"\");\n  const [bankCountry, setBankCountry] = useState(\"\");\n  const [accountNumber, setaccountNumber] = useState(\"\");\n  const [swiftCode, setSwiftCode] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [yourAddress, setYourAddress] = useState(\"\");\n  const [yourCountry, setYourCountry] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [yourState, setYourState] = useState(\"\");\n  const [userCountry, setUserCountry] = useState(\"\");\n  const [billingAddress, setBillingAddress] = useState(\"\");\n  const [yourCity, setYourCity] = useState(\"\");\n  const [cryptoAddress, setCryptoAddress] = useState(\"\");\n  const [cryptoCurrencyName, setCryptoCurrencyName] = useState(\"BTC\");\n  const [withValue, setWitValue] = useState(1000);\n  const [total, setTotal] = useState(0);\n  const [wallet, setWallet] = useState(0);\n  const [withdrawMethod, setWithdrawMethod] = useState(\"\");\n  const [wMethod, setWMethod] = useState(\"\");\n  const [methodDetails, setMethodDetails] = useState({});\n  const [userID, setUser] = useState(\"\");\n  let user1 = { user: props.user };\n  const [user, setU] = useState(user1);\n\n  const [payMethod, setPayMethod] = useState(\"\");\n  const [autoTradeStatus, setAutoTradeStatus] = useState(null);\n  const [payMethodBoth, setPayMethodBoth] = useState();\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [Img, setImg] = useState(\"\");\n  const [imgLoading, setSubmiImgtLoading] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [yourPhoneNumber, setYourPhoneNumber] = useState(\"\");\n  const [yourPassword, setYourPassword] = useState(\"\");\n  const [yourPasswordComfirm, setYourPasswordComfirm] = useState(\"\");\n  const [submitProfile, setSubmitProfile] = useState(\"\");\n  const [btcAmount, setBtcAmount] = useState(\"\");\n  const [stepOne, setStepOne] = useState(true);\n  const [stepTwo, setStepTwo] = useState(false);\n  const [stepThree, setStepThree] = useState(false);\n  const [stepFour, setStepFour] = useState(false);\n\n  const [uploadProof, setUploadProof] = useState(false);\n\n  const [stepFive, setStepFive] = useState(false);\n  const [creditStepOne, setCreditStepOne] = useState(true);\n  const [creditStepTwo, setCreditStepTwo] = useState(false);\n  const [creditStepThree, setCreditStepThree] = useState(false);\n  const [creditStepFour, setCreditStepFour] = useState(false);\n  const [creditStepFive, setCreditStepFive] = useState(false);\n  const options = useMemo(() => countryList().getData(), []);\n  const copyToClipboard = () => {\n    setCopied(true);\n  };\n  const [siteUData, setData] = useState({});\n\n  const [DPOEmail, setDPOEmail] = useState(\"\");\n  const [DPOPhone, setDPOPhone] = useState(\"\");\n  const [supportAddress, setsupportAddress] = useState(\"\");\n  const [supportMail, setsupportMail] = useState(\"\");\n  const [supportPhone, setsupportPhone] = useState(\"\");\n\n  useEffect(() => {\n    if (copied === true) {\n      message.success(\"Copied\");\n    }\n  }, []);\n  const disableAutoTrade = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(`${endpoint}/api/profile/autoTrade`, {\n      id: userID,\n      autoTrade: false,\n      isTrading: false,\n    });\n\n    if (res.data) {\n      message.success(\"Auto trades has been disabled\");\n\n      setSubmitLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const res = axios.get(`${endpoint}/api/site`);\n    res.then((response) => {\n      setDPOPhone(response.data.DPOPhone);\n      setDPOEmail(response.data.DPOEmail);\n      setsupportAddress(response.data.supportAddress);\n      setsupportMail(response.data.supportMail);\n      setsupportPhone(response.data.supportPhone);\n    });\n  }, []);\n\n  useEffect(() => {\n    let getSiteData = async () => {\n      const res = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/site`\n      );\n      let siteData = await res.json();\n      setData(siteData);\n    };\n\n    getSiteData();\n  }, []);\n\n  useEffect(() => {\n    const funcE = async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/user/${props.user.user.user._id}`\n      );\n      let user = await response.json();\n      setU({\n        user: user,\n      });\n\n      let a = { user: user };\n      localStorage.setItem(\"user\", JSON.stringify(a));\n    };\n    funcE();\n  }, [user]);\n\n  const autoTradeEnable = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(`${endpoint}/api/profile/autoTrade`, {\n      id: userID,\n      autoTrade: true,\n      isTrading: false,\n    });\n\n    if (res.data) {\n      message.success(\"Auto trades has been enabled\");\n      setAutoTrade(!autoTrade);\n      setSubmitLoading(false);\n    }\n  };\n\n  const handleAmount = (e) => {\n    e.preventDefault();\n    if (btcAmount !== \"\") {\n      setStepOne(false);\n      setStepTwo(true);\n    }\n  };\n\n  const handleNext = (e) => {\n    e.preventDefault();\n    setStepTwo(false);\n    setStepThree(true);\n  };\n\n  const showProofUpload = (e) => {\n    e.preventDefault();\n    setStepThree(false);\n    setUploadProof(true);\n  };\n\n  const handleConfirmation = (e) => {\n    e.preventDefault();\n    setUploadProof(false);\n    setStepFour(true);\n  };\n\n  const handleCreditStepOne = (e) => {\n    e.preventDefault();\n    setCreditStepOne(false);\n    setCreditStepTwo(true);\n  };\n\n  const handleCreditStepTwo = (e) => {\n    e.preventDefault();\n    setCreditStepTwo(false);\n    setCreditStepThree(true);\n  };\n\n  const handleCreditStepThree = (e) => {\n    e.preventDefault();\n    setCreditStepThree(false);\n    setCreditStepFour(true);\n  };\n\n  const handleCreditStepFour = (e) => {\n    e.preventDefault();\n    setCreditStepFour(false);\n    setCreditStepFive(true);\n  };\n\n  const goBackToStepOne = () => {\n    setStepTwo(false);\n    setStepOne(true);\n  };\n\n  const goBackToStepTwo = () => {\n    setStepThree(false);\n    setStepTwo(true);\n  };\n\n  const goBackToStepThree = () => {\n    setUploadProof(false);\n    setStepThree(true);\n  };\n\n  const goBackToUpload = () => {\n    setStepFour(false);\n    setUploadProof(true);\n  };\n\n  const goBackToCreditStepOne = () => {\n    setCreditStepTwo(false);\n    setCreditStepOne(true);\n  };\n\n  const goBackToCreditStepTwo = () => {\n    setCreditStepThree(false);\n    setCreditStepTwo(true);\n  };\n\n  const goBackToCreditStepThree = () => {\n    setCreditStepFour(false);\n    setCreditStepThree(true);\n  };\n\n  const goBackToCreditStepFour = () => {\n    setCreditStepFive(false);\n    setCreditStepFour(true);\n  };\n\n  // handles credit card month limit\n  function limit(val, max) {\n    if (val.length === 1 && val[0] > max[0]) {\n      val = \"0\" + val;\n    }\n\n    if (val.length === 2) {\n      if (Number(val) === 0) {\n        val = \"01\";\n\n        //this can happen when user paste number\n      } else if (val > max) {\n        val = max;\n      }\n    }\n\n    return val;\n  }\n\n  const cardExpiry = (val) => {\n    let month = limit(val.substring(0, 2), \"12\");\n    let year = val.substring(2, 4);\n\n    return month + (year.length ? \"/\" + year : \"\");\n  };\n  // handles credit card month limit\n\n  useEffect(() => {\n    setImg(Img);\n  }, []);\n\n  useEffect(() => {\n    switch (withdrawMethod) {\n      case withdrawMethod:\n        // console.log(\"withdraw\", payMethod[withdrawMethod]);\n\n        setWMethod(\n          payMethod[withdrawMethod] && payMethod[withdrawMethod].tag\n            ? payMethod[withdrawMethod].tag\n            : null\n        );\n        setMethodDetails(payMethod[withdrawMethod]);\n\n        break;\n      default:\n        setWMethod(\n          payMethod[withdrawMethod].tag === undefined\n            ? \"non was selected\"\n            : payMethod[withdrawMethod].tag\n        );\n        setMethodDetails(payMethod[withdrawMethod]);\n    }\n  }, [withdrawMethod]);\n\n  const saveCryptoCurrency = () => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/paymentDetails/${userID}`\n      );\n      let data = await response.json();\n      setPayMethod(data);\n    })();\n    let bankDetails = {\n      id: userID,\n      cryptoCurrencyName: cryptoCurrencyName,\n      cryptoCurrencyAddress: cryptoAddress,\n    };\n    console.log(bankDetails);\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/usercryptodetails`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bankDetails),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your Crypto currency Details saved successful\");\n          setCryptoCurrency(false);\n        } else message.error(\"problems saving cryptocurrency details, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  const saveBankDetails = () => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/paymentDetails/${userID}`\n      );\n      let data = await response.json();\n      // setPayMethod(data)\n      let a = data.banks;\n      let b = data.crypto;\n      setPayMethodBoth(data);\n      // console.log(a.concat(b))\n      setPayMethod(a.concat(b));\n    })();\n    //08035011120\n    let bankDetails = {\n      id: userID,\n      bankName: bankName,\n      bankCity: bankCity,\n      bankCountrybankAccountNumber: bankCountry,\n      bankSwiftCode: swiftCode,\n      userBankfULLName: fullName,\n      userAddress: yourAddress,\n      userCity: yourCity,\n      userCountry: yourCountry,\n    };\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/userbankdetails`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bankDetails),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your Bank Details saved successful\");\n          setBankTransfer(false);\n        } else message.error(\"problems saving bank details, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  const percentToGet = 3;\n  const percent = (percentToGet * withValue) / 100;\n  const amount = withValue - percent;\n\n  const subWithdraw = () => {\n    let withdraw = {\n      id: userID,\n      currency: cardCurrency,\n      fees: percent,\n      method: wMethod,\n      amount: amount,\n      currency: yourCountry,\n      methodDetails: methodDetails,\n    };\n\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/withdraw`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(withdraw),\n    })\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your withdrawal request was successful\");\n          setWithdraw(false);\n        } else message.error(\"Your withdrawal request was not successful, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n  const BuyCoin = () => {\n    let deposit = {\n      id: userID,\n      fee: 0.0,\n      method: \"Cryptocurrency\",\n      amount: btcAmount,\n      name: yourName,\n    };\n\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(deposit),\n    })\n      .then(function (res) {\n        if (res.ok) {\n          setStepTwo(false);\n          //message.success(\"Your deposit was successful\");\n          setStepFive(true);\n          setCredit(false);\n        } else message.error(\"Your deposit was not successful, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  const subDeposite = () => {\n    let deposit = {\n      id: userID,\n      fee: 0.0,\n      method: \"Card Deposit\",\n      cardNumber: cardNumber,\n      cardCvv: cardCvv,\n      cardMonth: `${cardExpiryDate[0]}${cardExpiryDate[1]}`,\n      cardYear: `20${cardExpiryDate[3]}${cardExpiryDate[4]}`,\n      amount: btcAmount,\n      cardName: cardHolderName,\n      zipCode: zipCode,\n      homeAddress: billingAddress,\n      yourCountry: userCountry.label,\n      yourState: yourState,\n    };\n\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(deposit),\n    })\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your deposite was successful\");\n          setCredit(false);\n        } else {\n          message.error(\"Your deposit was not successful, try again\");\n          console.log(res);\n        }\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n  useEffect(() => {\n    if (props && props.user) {\n      const func2 = async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/paymentDetails/${user.user.user.user._id}`\n        );\n        let data = await response.json();\n        // console.log(\"payment\", data);\n        let a = data.banks;\n        let b = data.crypto;\n        setPayMethodBoth(data);\n        setPayMethod(a.concat(b));\n      };\n\n      func2();\n\n      setYourName(\n        user.user.user.user.name === undefined\n          ? user.user.user.user.name\n          : user.user.user.user.name\n      );\n      setYourEmailAddress(\n        user.user.user.user.email === undefined\n          ? user.user.user.user.email\n          : user.user.user.user.email\n      );\n      setYourCurrency(\n        user.user.user.user.currency === undefined\n          ? user.user.user.user.currency\n          : user.user.user.user.currency\n      );\n      // setYourAddress(user.user.user.user.address===undefined?user.user.user.user.address:user.user.user.user.address)\n\n      setUser(\n        user.user.user.user._id === undefined\n          ? user.user.user.user._id\n          : user.user.user.user._id\n      );\n\n      setWallet(\n        user.user.user.user.wallet === undefined\n          ? new Intl.NumberFormat('en-US').format(user.user.user.user.wallet)\n          : new Intl.NumberFormat('en-US').format(user.user.user.user.wallet)\n      );\n\n      setAutoTradeStatus(\n        user.user.user.user.autoTrade === undefined\n          ? user.user.user.user.autoTrade\n          : user.user.user.user.autoTrade\n      );\n\n      setImg(\n        user.user.user.user.img === undefined\n          ? user.user.user.user.img\n          : user.user.user.user.img\n      );\n\n      setYourPhoneNumber(\n        user.user.user.user.phoneNumber === undefined\n          ? user.user.user.user.phoneNumber\n          : user.user.user.user.phoneNumber\n      );\n\n      // setYourPassword(\n      //   user.user.user.user.newPassword === undefined\n      //     ? user.user.user.user.newPassword\n      //     : user.user.user.user.newPassword\n      // );\n    }\n  }, []);\n  const openBankTransfer = () => {\n    setWithdrawSettings(false);\n    setBankTransfer(!bankTransfer);\n  };\n\n  const openCrypto = () => {\n    setWithdrawSettings(false);\n    setCryptoCurrency(!cryptoCurrency);\n  };\n\n  const checkMaxLength = (object) => {\n    if (object.target.value.length > object.target.maxLength) {\n      object.target.value = object.target.value.slice(\n        0,\n        object.target.maxLength\n      );\n    }\n  };\n\n  const handleImageChange = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = async () => {\n        setSubmiImgtLoading(true);\n        const res = await axios.put(`${endpoint}/api/profile/passport`, {\n          id: userID,\n          Img: reader.result,\n        });\n        if (res.data) {\n          setImg(res.data.img);\n          message.success(\"Your image was successfully updated\");\n          setSubmiImgtLoading(false);\n        }\n      };\n    }\n  };\n  const updateProfile = () => {\n    if (yourPassword !== yourPasswordComfirm) {\n      message.error(\"Password must match\");\n    } else\n      fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/update/user`, {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: userID,\n          name: yourName,\n          email: yourEmailAddress,\n          password: yourPassword,\n          phoneNumber: yourPhoneNumber,\n        }),\n      })\n        .then(function (res) {\n          if (res.ok) {\n            message.success(\"Profile was successfully updated\");\n            setPersonalData(false);\n          } else message.error(\"peoblems updating profile\");\n        })\n        .then((data) => {\n          if (data) {\n            console.log(\"good\", data);\n          } else {\n            console.log(\"bad\", data);\n          }\n        });\n  };\n\n  //logout\n  const handleLogout = () => {\n    console.log(\"logout\");\n\n    history.push(\"/\");\n  };\n  let web = props.web.web;\n\n  if (user.user) {\n    // console.log(\n    //   user.user.user.user,\n    //   \"fin\"\n    // );\n  }\n\n  const addComma = (value) => {\n    if (value !== null && value !== undefined) {\n      return new Intl.NumberFormat('en-US').format(value);\n    }\n    return;\n  };\n\n  return (\n    <>\n      <Navbar variant=\"dark\" style={{ marginTop: \"5%\" }} className=\"topI\">\n        <Navbar.Brand>\n          <img\n            style={{ width: \" 100%\", height: \"4.5ch\" }}\n            src={\n              web ? (web.useWhiteLogo ? web.siteLogoWhite : web.siteLogo) : \"\"\n            }\n            alt=\"logo\"\n          />\n        </Navbar.Brand>\n        <Nav activeKey={location.pathname} className=\"mr-3 options-nav\">\n          <div className=\"d-flex x-auto\">\n            <Nav.Link href=\"/dashboard\">\n              <div className=\"stock-box\">\n                <div className=\"icon-wrapper mr-1\">\n                  <X />\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  <img\n                    src=\"https://cryptologos.cc/logos/bitcoin-btc-logo.png\"\n                    alt=\"\"\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                  />\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\">BTCUSD</span>\n                    <span className=\"currency\">Crypto</span>\n                  </div>\n                </div>\n              </div>\n            </Nav.Link>\n            <Nav.Link href=\"/dashboard\">\n              <div className=\"stock-box\">\n                <div className=\"icon-wrapper mr-1\">\n                  <X />\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  <img\n                    src=\"https://st2.depositphotos.com/4160903/6037/i/950/depositphotos_60374771-stock-photo-golden-shiny-dollar-symbol-isolated.jpg\"\n                    alt=\"\"\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                  />\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\">Gas</span>\n                    <span className=\"currency\">Commodity</span>\n                  </div>\n                </div>\n              </div>\n            </Nav.Link>\n            <Nav.Link href=\"/dashboard\">\n              <div className=\"stock-box\">\n                <div className=\"icon-wrapper\">\n                  <X />\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  <img\n                    src=\"https://cryptologos.cc/logos/ethereum-eth-logo.png\"\n                    alt=\"\"\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                  />\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\">ETHUSD</span>\n                    <span className=\"currency\">Crypto</span>\n                  </div>\n                </div>\n              </div>\n            </Nav.Link>\n            <Nav.Link href=\"/dashboard\">\n              <div className=\"stock-box\">\n                <div className=\"icon-wrapper\">\n                  <X />\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  <img\n                    src=\"https://storage.googleapis.com/iex/api/logos/TSLA.png\"\n                    alt=\"\"\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                  />\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\">Tesla</span>\n                    <span className=\"currency\">Stock</span>\n                  </div>\n                </div>\n              </div>\n            </Nav.Link>\n            <Nav.Link href=\"/dashboard\">\n              <div className=\"stock-box\">\n                <div className=\"icon-wrapper\">\n                  <X />\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  <img\n                    src=\"https://storage.googleapis.com/iex/api/logos/AAPL.png\"\n                    alt=\"\"\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                  />\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\">AAPL</span>\n                    <span className=\"currency\">Stock</span>\n                  </div>\n                </div>\n              </div>\n            </Nav.Link>\n          </div>\n          <Button variant=\"link\" className=\"btn-plus\">\n            <Plus\n              onClick={() => message.error(\"Only allow on the Board Page\")}\n            />\n          </Button>\n        </Nav>\n\n        <div onClick={props.closeForex} className=\"emptyDIV\"></div>\n\n        <Notification setNotify={setNotify} notify={notify} user={props.user} />\n        <Nav className=\"ml-auto align-items-center\" onClick={props.closeForex}>\n          <NavDropdown\n            title={\n              <div className=\"camera-wrapper\">\n                {/* <CameraFill /> */}\n\n                {props.user.user.user.verify ||\n                props.user.user.user.isPendingVerification ||\n                Img.length > 0 ? (\n                  <img src={Img} className=\"camera-wrapper\" />\n                ) : (\n                  <X />\n                )}\n              </div>\n            }\n            id=\"collasible-nav-dropdown\"\n          >\n            <div className=\"profile-wrapper\">\n              <h6 className=\"mb-1\">{yourName}</h6>\n              <p>{yourEmailAddress}</p>\n              <div className=\"tour-wrapper\">\n                <div className=\"d-flex\">\n                  <div></div>\n                  <div>\n                    <p className=\"mb-0\">\n                      {user.user.user.user.isPendingVerification\n                        ? \"Kindly wait for verification feedback, to enable you perform your first trade\"\n                        : null}\n                      {user.user.user.user.verify == false &&\n                      user.user.user.user.isPendingVerification === false\n                        ? \"Kindly verify your account\"\n                        : null}\n                      {user.user.user.user.verify == true &&\n                      user.user.user.user.isPendingVerification === false\n                        ? \"You are verified\"\n                        : null}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <NavDropdown.Divider className=\"mt-3\" />\n              <p></p>\n              <div className=\"date-wrapper d-flex justify-content-between\">\n                <div>\n                  <span>Date Registered</span>\n                  <p>14 Feb 2021</p>\n                </div>\n                <div>\n                  <span>User ID</span>\n                  <p>93220945</p>\n                </div>\n              </div>\n              {props.user.user.user.verify ||\n              props.user.user.user.isPendingVerification ? (\n                <div className=\"verify ver \" onClick={props.openVer}>\n                  <a id=\"verify-me \" href=\"#\">\n                    Verified\n                  </a>\n                </div>\n              ) : (\n                <div className=\"verify ver redNavbar\" onClick={props.openVer}>\n                  <a id=\"verify-me \" href=\"#\">\n                    Not Verified\n                  </a>\n                </div>\n              )}\n            </div>\n\n            <div className=\"features-wrapper\">\n              {/* {imgLoading === false ? (\n                <div className=\"fileUpload1\">\n                  <CameraFill style={{ marginTop: \"2%\" }} className=\"mr-2\" />\n                  <input\n                    type=\"file\"\n                    className=\"upload1 input\"\n                    onChange={handleImageChange}\n                  />\n                  <span style={{ cursor: \"pointer\" }}>Upload Profile</span>\n                </div>\n              ) : (\n                <div class=\"fileUpload1\">\n                  <i className=\"fa fa-spin fa-spinner\"></i>\n                  <span>Upload Profile</span>\n                </div>\n              )} */}\n\n              <NavDropdown.Item onClick={() => setPersonalData(!personalData)}>\n                <Pen className=\"mr-2\" />\n                Personal Data\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setCredit(!credit)}>\n                <PlusCircle className=\"mr-2\" />\n                Deposit\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setWithdraw(!withdraw)}>\n                <WalletFill className=\"mr-2\" />\n                Withdraw Funds\n              </NavDropdown.Item>\n\n              <NavDropdown.Item\n                onClick={() => setWithdrawSettings(!withdrawSettings)}\n              >\n                <GearFill className=\"mr-2\" style={{ width: \"6rem\" }} />\n                Withdraw Settings\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={() => setSupport(!support)}>\n                <QuestionCircleFill className=\"mr-2\" />\n                Contact Support\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={handleLogout}>\n                <BoxArrowDownRight className=\"mr-2\" />\n                Logout\n              </NavDropdown.Item>\n            </div>\n          </NavDropdown>\n          <NavDropdown\n            title={\n              <div className=\"account-wrapper\">\n                <h6 className=\"mb-0\">\n                  $\n                  {user.user.user.user.wallet\n                    ? new Intl.NumberFormat('en-US').format(user.user.user.user.wallet)\n                    : 0.0}\n                </h6>\n                {/* <p className=\"mb-0\">\n                  Total: ${props.totalUp.toString().slice(0, 8)}\n                </p> */}\n              </div>\n            }\n            id=\"collasible-nav-dropdown\"\n            className=\"ml-2 balance-wrapper\"\n          >\n            <div className=\"profile-wrapper\">\n              <h6 className=\"mb-1\">{user.user.user.user.name}</h6>\n              <p>{user.user.user.user.email}</p>\n              {/* <div className=\"tour-wrapper\">\n                <div className=\"d-flex\">\n                  <div></div>\n                  <div>\n                    <p className=\"mb-0\">\n                      Finish the guided tour to your first real trade\n                    </p>\n                  </div>\n                </div>\n              </div> */}\n              <NavDropdown.Divider className=\"mt-3\" />\n              <p></p>\n              <div className=\"date-wrapper d-flex justify-content-between\">\n                <div>\n                  <span>Date Registered</span>\n                  <p>14 Feb 2021</p>\n                </div>\n                <div>\n                  <span>User ID</span>\n                  <p>93220945</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"features-wrapper p-2 pt-3\">\n              <div className=\"d-flex justify-content-between mb-1\">\n                <div>\n                  <h6 className=\"pl-2\">MY BALANCES</h6>\n                </div>\n                <div>\n                  <p>Always show the \"Total\" amount</p>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between p-3 real-account\">\n                <div>\n                  <h6>REAL ACCOUNT</h6>\n                  <p className=\"amount mb-0\">\n                    $\n                    {user.user.user.user.wallet\n                      ? new Intl.NumberFormat('en-US').format(user.user.user.user.wallet)\n                      : \"\"}\n                  </p>\n                </div>\n                <div>\n                  <Button\n                    variant=\"secondary\"\n                    className=\"btn-deposit\"\n                    onClick={() => setCredit(!credit)}\n                  >\n                    Deposit\n                  </Button>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between p-3 practice-account\">\n                <div>\n                  <h6>\n                    Total ACCOUNT{\" \"}\n                    <span>\n                      = $\n                      {user.user.user.user.wallet\n                        ? new Intl.NumberFormat('en-US').format(user.user.user.user.wallet)\n                        : \"\"}\n                    </span>\n                  </h6>\n                  <p className=\"amount mb-0\">\n                    $\n                    {user.user.user.user.wallet\n                      ? new Intl.NumberFormat('en-US').format(user.user.user.user.wallet)\n                      : \"\"}\n                  </p>\n                </div>\n                <div>\n                  <Button\n                    variant=\"secondary\"\n                    className=\"btn-deposit\"\n                    onClick={() => setWithdraw(!credit)}\n                  >\n                    Withdraw\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </NavDropdown>\n          <Button\n            variant=\"outline-success d-flex align-items-center deposit ml-3 \"\n            onClick={() => setCredit(!credit)}\n          >\n            <ArrowRepeat className=\"mr-3\" />\n            Deposit\n          </Button>\n        </Nav>\n      </Navbar>\n\n      {credit ? (\n        <section className=\"credit-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"credit-modal\">\n            <div className=\"header\">Fund Your Wallet</div>\n            <div className=\"dash-row\">\n              <Tab.Container\n                defaultActiveKey=\"credit\"\n                id=\"uncontrolled-tab-example\"\n              >\n                <div className=\"sidebar\">\n                  <div className=\"links\">\n                    <Nav className=\"flex-column\">\n                      <Nav.Item>\n                        {web.masterCardStatus ? (\n                          <Nav.Link eventKey=\"credit\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  style={{\n                                    width: \"40px\",\n                                    paddingRight: \"15px\",\n                                  }}\n                                  src={mastercard}\n                                />\n                              </div>\n                              <div>\n                                <span className=\"font-size-15\">\n                                  Credit/Debit\n                                </span>\n                                <span className=\"font-size-10\">Instant</span>\n                              </div>\n                            </div>\n                          </Nav.Link>\n                        ) : (\n                          \"\"\n                        )}\n                      </Nav.Item>\n                      <Nav.Item>\n                        {web.bitCoinStatus ? (\n                          <Nav.Link eventKey=\"crypto\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  style={{\n                                    width: \"40px\",\n                                    paddingRight: \"15px\",\n                                  }}\n                                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1200px-Bitcoin.svg.png\"\n                                />\n                              </div>\n                              <div>\n                                <span className=\"font-size-15\">Bitcoin</span>\n                                <span className=\"font-size-10\">Instant</span>\n                              </div>\n                            </div>\n                          </Nav.Link>\n                        ) : (\n                          \"\"\n                        )}\n                      </Nav.Item>\n                    </Nav>\n                  </div>\n                </div>\n                <div className=\"content\">\n                  <Tab.Content>\n                    {web.masterCardStatus ? (\n                      <Tab.Pane eventKey=\"credit\">\n                        {creditStepOne ? (\n                          <div\n                            className=\"process dash-row dash-row-centralized\"\n                            style={{\n                              justifyContent: \"space-around\",\n                              marginTop: \"15%\",\n                            }}\n                          >\n                            <h5 style={{ marginBottom: \"15%\", color: \"white\" }}>\n                              Please specify the amount you would like to\n                              deposit into your account using your card\n                            </h5>\n                            <div\n                              className=\"currency\"\n                              style={{ display: \"none\" }}\n                            >\n                              <select\n                                value={cardCurrency}\n                                onChange={(e) => {\n                                  setCardCurrency(e.target.value);\n                                }}\n                              >\n                                <option value=\"USD\">$ USD</option>\n                              </select>\n                            </div>\n\n                            <div\n                              className=\"process dash-row dash-row-centralized\"\n                              style={{\n                                justifyContent: \"space-around\",\n                                marginTop: \"-30px\",\n                                width: \"100%\",\n                              }}\n                            >\n                              <Col md={6} className=\"px-0\">\n                                <input\n                                  id=\"depositAmount\"\n                                  min={siteUData.minDepositAmount}\n                                  max={siteUData.maxDepositAmount}\n                                  type=\"number\"\n                                  name=\"digit\"\n                                  id=\"depositAmount\"\n                                  placeholder=\"Amount\"\n                                  value={btcAmount}\n                                  onChange={(e) => {\n                                    setCardDepositAmount(e.target.value);\n                                    setBtcAmount(e.target.value);\n                                  }}\n                                />\n                              </Col>\n                              <Col md={6} className=\"pr-0\">\n                                <div className=\"d-flex justify-content-between\">\n                                  <div>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-amount\"\n                                      onClick={() =>\n                                        setBtcAmount(web.BTCAmount1)\n                                      }\n                                    >\n                                      ${web.BTCAmount1}\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-amount\"\n                                      onClick={() =>\n                                        setBtcAmount(web.BTCAmount2)\n                                      }\n                                    >\n                                      $\n                                      {new Intl.NumberFormat('en-US').format(web.BTCAmount2)}\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-amount\"\n                                      onClick={() =>\n                                        setBtcAmount(web.BTCAmount3)\n                                      }\n                                    >\n                                      $\n                                      {new Intl.NumberFormat('en-US').format(web.BTCAmount3)}\n                                    </button>\n                                  </div>\n                                </div>\n                              </Col>\n                            </div>\n                            <div\n                              className=\"process\"\n                              style={{ display: \"block\", width: \"100%\" }}\n                            >\n                              <div className=\"btn\">\n                                <button\n                                  onClick={handleCreditStepOne}\n                                  type=\"button\"\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                            <br />\n                            <div className=\"mt-5 d-flex align-items-center justify-content-between w-75\">\n                              <div>\n                                <img\n                                  src={visacard}\n                                  alt=\"visa card logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={mastercard}\n                                  alt=\"master card logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={discover}\n                                  alt=\"discover network logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={americanexpress}\n                                  alt=\"american express logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepTwo ? (\n                          <div className=\"process dash-row dash-row-centralized\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepOne}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div className=\"credit-card dash-row\">\n                              <div className=\"front\">\n                                <div className=\"dtls\">\n                                  <NumberFormat\n                                    format=\"#### #### #### ####\"\n                                    name=\"number\"\n                                    placeholder=\"Card number\"\n                                    className=\"card-number\"\n                                    value={cardNumber}\n                                    onChange={(e) => {\n                                      setCardNumber(e.target.value);\n                                    }}\n                                  />\n                                  <div\n                                    className=\"dash-row dash-row-centralized\"\n                                    style={{ justifyContent: \"flex-end\" }}\n                                  >\n                                    <div className=\"valid-thru\">\n                                      <span className=\"text-uppercase\">\n                                        Valid\n                                        <br />\n                                        thru\n                                      </span>\n                                    </div>\n                                    <div className=\"mm\">\n                                      <NumberFormat\n                                        format={cardExpiry}\n                                        className=\"short\"\n                                        name=\"number\"\n                                        placeholder=\"MM/YY\"\n                                        value={cardExpiryDate}\n                                        onChange={(e) => {\n                                          setCardExpiryDate(e.target.value);\n                                        }}\n                                      />\n                                    </div>\n                                    {/* <div className=\"slash\">\n                                    <span>/</span>\n                                  </div>\n                                  <div className=\"yy\">\n                                    <input\n                                      className=\"short\"\n                                      type=\"number\"\n                                      minLength={0}\n                                      maxLength={4}\n                                      onInput={checkMaxLength}\n                                      name=\"number\"\n                                      placeholder=\"YY\"\n                                      value={cardYear}\n                                      onChange={(e) => {\n                                        setCardYear(e.target.value);\n                                      }}\n                                    />\n                                  </div> */}\n                                  </div>\n                                  <input\n                                    className=\"card-holder\"\n                                    type=\"text\"\n                                    name=\"text\"\n                                    placeholder=\"Card holder\"\n                                    value={cardHolderName}\n                                    onChange={(e) => {\n                                      setCardHolder(e.target.value);\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div className=\"reverse\">\n                                <div className=\"stripe\" />\n                                <div className=\"cvc\">\n                                  <input\n                                    minLength={0}\n                                    maxLength={3}\n                                    onInput={checkMaxLength}\n                                    className=\"short\"\n                                    type=\"number\"\n                                    name=\"number\"\n                                    placeholder=\"CVC\"\n                                    value={cardCvv}\n                                    onChange={(e) => setCardCvv(e.target.value)}\n                                  />\n                                  <small className=\"font-size-10\">\n                                    The last three digits on the reverse\n                                  </small>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"text-right w-100 mt-4\">\n                              <div className=\"btn\">\n                                <button\n                                  onClick={handleCreditStepTwo}\n                                  type=\"button\"\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                            <div className=\"mt-5 d-flex align-items-center justify-content-between w-75 mx-auto\">\n                              <div>\n                                <img\n                                  src={nortonsecure}\n                                  alt=\"norton secure logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={mcafeesecure}\n                                  alt=\"mcafee secure logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={securessl}\n                                  alt=\"secure ssl logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepThree ? (\n                          <div className=\"process dash-row dash-row-centralized\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepTwo}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div className=\"billing-form w-100 mt-3 text-left\">\n                              <div>\n                                <Form.Group>\n                                  <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Billing Address\"\n                                    name=\"billingAddress\"\n                                    id=\"billingAddress\"\n                                    value={billingAddress}\n                                    onChange={(e) =>\n                                      setBillingAddress(e.target.value)\n                                    }\n                                  />\n                                </Form.Group>\n                                <Form.Group>\n                                  <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Zip Code\"\n                                    name=\"zipCode\"\n                                    id=\"zipCode\"\n                                    value={zipCode}\n                                    onChange={(e) => setZipCode(e.target.value)}\n                                  />\n                                </Form.Group>\n                                <Row>\n                                  <Col xs={12} md={6}>\n                                    <Form.Group>\n                                      <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Your State\"\n                                        name=\"yourState\"\n                                        id=\"yourState\"\n                                        value={yourState}\n                                        onChange={(e) =>\n                                          setYourState(e.target.value)\n                                        }\n                                      />\n                                    </Form.Group>\n                                  </Col>\n                                  <Col xs={12} md={6}>\n                                    <Form.Group style={{ color: \"#6c757d\" }}>\n                                      <Select\n                                        style={{ color: \"#6c757d\" }}\n                                        options={options}\n                                        value={userCountry}\n                                        id=\"userCountry\"\n                                        placeholder={\n                                          <div style={{ color: \"#6c757d\" }}>\n                                            Select Country\n                                          </div>\n                                        }\n                                        onChange={(userCountry) =>\n                                          setUserCountry(userCountry)\n                                        }\n                                      />\n                                    </Form.Group>\n                                  </Col>\n                                </Row>\n                              </div>\n                            </div>\n                            <div className=\"text-right w-100 mt-3\">\n                              <div className=\"btn pr-0\">\n                                <button\n                                  onClick={handleCreditStepThree}\n                                  type=\"button\"\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepFour ? (\n                          <div className=\"confirm-wrapper\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepThree}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div className=\"mt-4\" style={{ color: \"#fff\" }}>\n                              <p>\n                                Please confirm that all the filled details are\n                                correct\n                              </p>\n                              <Form.Group>\n                                <Form.Check\n                                  type=\"checkbox\"\n                                  label=\"I Confirm\"\n                                  style={{ color: \"#fff!important\" }}\n                                />\n                              </Form.Group>\n\n                              <div className=\"text-center\">\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={handleCreditStepFour}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Done\n                                </Button>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepFive ? (\n                          <div className=\"process dash-row dash-row-centralized\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepFour}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div\n                              style={{\n                                textAlign: \"center\",\n                                width: \"100%\",\n                                margin: \"5%\",\n                              }}\n                            >\n                              <img\n                                style={{\n                                  textAlign: \"center\",\n                                  width: \"30%\",\n                                  margin: \"5%\",\n                                }}\n                                src=\"https://i.pinimg.com/originals/06/ae/07/06ae072fb343a704ee80c2c55d2da80a.gif\"\n                              />\n                            </div>\n                            <div\n                              style={{\n                                textAlign: \"left\",\n                                margin: \"10px 0\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <div className=\"d-flex mt-2\">\n                                <div>\n                                  <p>\n                                    The Account Department will Process Your\n                                    Payments and credit your Account in a short\n                                    While\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                            <p className=\"mt-2\" style={{ color: \"#aaa\" }}>\n                              N:B - When topping up your balance, please note:\n                              Per our fraud control guidelines, some\n                              transactions (especially those involving\n                              third-party payments) may require additional\n                              verification. In some cases, we’ll need phone\n                              verification for the card holder.\n                            </p>\n                            <div className=\"text-center w-100\">\n                              <div className=\"btn pr-0\">\n                                <button\n                                  className=\"mb-4\"\n                                  onClick={subDeposite}\n                                  style={{\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Exit\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </Tab.Pane>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {web.bitCoinStatus ? (\n                      <Tab.Pane eventKey=\"crypto\">\n                        <div className=\"crypto-tab\">\n                          {stepOne ? (\n                            <div id=\"step-one\" style={{ marginTop: \"15%\" }}>\n                              <h5\n                                style={{ marginBottom: \"15%\", color: \"white\" }}\n                              >\n                                Please Specify the amount you would like to\n                                deposit into your account through Bitcoin\n                              </h5>\n                              <div\n                                className=\"process dash-row dash-row-centralized\"\n                                style={{\n                                  justifyContent: \"space-around\",\n                                  marginTop: \"-30px\",\n                                }}\n                              >\n                                <Col md={6} className=\"px-0\">\n                                  <input\n                                    id=\"depositAmount\"\n                                    type=\"number\"\n                                    min={siteUData.minDepositAmount}\n                                    max={siteUData.maxDepositAmount}\n                                    name=\"btcAmount\"\n                                    value={btcAmount}\n                                    placeholder=\"Enter Amount\"\n                                    onChange={(e) =>\n                                      setBtcAmount(e.target.value)\n                                    }\n                                  />\n                                </Col>\n                                <Col md={6} className=\"pr-0\">\n                                  <div className=\"d-flex justify-content-between\">\n                                    <div>\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn-amount\"\n                                        onClick={() =>\n                                          setBtcAmount(web.BTCAmount1)\n                                        }\n                                      >\n                                        ${web.BTCAmount1}\n                                      </button>\n                                    </div>\n                                    <div>\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn-amount\"\n                                        onClick={() =>\n                                          setBtcAmount(web.BTCAmount2)\n                                        }\n                                      >\n                                        $\n                                        {new Intl.NumberFormat('en-US').format(web.BTCAmount2)}\n                                      </button>\n                                    </div>\n                                    <div>\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn-amount\"\n                                        onClick={() =>\n                                          setBtcAmount(web.BTCAmount3)\n                                        }\n                                      >\n                                        $\n                                        {new Intl.NumberFormat('en-US').format(web.BTCAmount3)}\n                                      </button>\n                                    </div>\n                                  </div>\n                                </Col>\n                              </div>\n                              <div className=\"process\">\n                                <div className=\"btn\">\n                                  <button onClick={handleAmount} type=\"button\">\n                                    Next\n                                  </button>\n                                </div>\n                              </div>\n                              <div className=\"mt-4\">\n                                <p style={{ color: \"#fff\" }}>\n                                  Need to buy bitcoin?{\"\"}\n                                  <a href=\"#\" target=\"_blank\">\n                                    Click here\n                                  </a>\n                                </p>\n                              </div>\n                              <br />\n                              <div\n                                className=\"mt-5 d-flex align-items-center justify-content-between w-75\"\n                                style={{ margin: \"0 auto\" }}\n                              >\n                                <a href={siteUData.depositeImg1Link}>\n                                  <img\n                                    src={siteUData.depositeImg1}\n                                    alt=\"account img\"\n                                    style={{ width: \"65px\" }}\n                                  />\n                                </a>\n                                <a href={siteUData.depositeImg2Link}>\n                                  <img\n                                    src={siteUData.depositeImg2}\n                                    alt=\"account img\"\n                                    style={{ width: \"65px\" }}\n                                  />\n                                </a>\n                                <a href={siteUData.depositeImg3Link}>\n                                  <img\n                                    src={siteUData.depositeImg3}\n                                    alt=\"account img\"\n                                    style={{ width: \"65px\" }}\n                                  />\n                                </a>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {stepTwo ? (\n                            <div id=\"step-two\">\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToStepOne}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <img\n                                src={web.BTCQRCodeImg}\n                                className=\"qrcode my-5\"\n                                alt=\"QR Code\"\n                              />\n                              <br />\n                              <p className=\"mb-0\" style={{ color: \"#fff\" }}>\n                                To complete your payment, please send{\" \"}\n                                <strong>\n                                  $\n                                  {new Intl.NumberFormat('en-US').format(btcAmount)}\n                                </strong>{\" \"}\n                                dollar worth of BTC to the address below.\n                              </p>\n                              <div>\n                                <h6 className=\"my-4 text-left\">\n                                  {web.btcHeaderText}:\n                                </h6>\n                                <div class=\"d-flex\">\n                                  <Form.Control\n                                    type=\"text\"\n                                    value={web.btcAddress}\n                                    disabled\n                                    style={{\n                                      width: \"100%\",\n                                      background: \"#fff\",\n                                      height: \"55px\",\n                                      textAlign: \"left\",\n                                      padding: \"15px\",\n                                      color: \"#1c2030\",\n                                    }}\n                                  />\n                                  <CopyToClipboard\n                                    text={web.btcAddress}\n                                    onCopy={copyToClipboard}\n                                  >\n                                    <Button\n                                      variant=\"primary\"\n                                      style={{\n                                        background: web.yourMainColor,\n                                        height: \"55px\",\n                                        marginLeft: \"-2px\",\n                                        background: \"#fff\",\n                                        color: \"#000\",\n                                        borderTopLeftRadius: \"0\",\n                                        borderBottomRightRadius: \"0\",\n                                        color: \"#1c2030\",\n                                        width: \"auto\",\n                                        padding: \"15px 30px\",\n                                      }}\n                                    >\n                                      {copied ? \"COPIED\" : \"COPY\"}\n                                    </Button>\n                                  </CopyToClipboard>\n                                </div>\n                                <br />\n                                <div className=\"text-center\">\n                                  <Button\n                                    className=\"mb-4\"\n                                    onClick={handleNext}\n                                    style={{\n                                      width: \"39%\",\n                                      padding: \"15px 30px\",\n                                    }}\n                                  >\n                                    Next\n                                  </Button>\n                                </div>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {stepThree ? (\n                            <div\n                              className=\"confirm-wrapper\"\n                              style={{ color: \"#fff\" }}\n                            >\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToStepTwo}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <p className=\"mt-4\">\n                                Please confirm that you have transferred $\n                                {new Intl.NumberFormat('en-US').format(btcAmount)}{\" \"}\n                                worth of BTC to the following BITCOIN wallet\n                                address\n                              </p>\n                              <Form.Group>\n                                <Form.Check\n                                  type=\"checkbox\"\n                                  label=\"I Confirm\"\n                                  style={{ color: \"#fff!important\" }}\n                                />\n                              </Form.Group>\n                              <div className=\"text-center\">\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={showProofUpload}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Next\n                                </Button>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {/* Upload proof of payment */}\n\n                          {uploadProof ? (\n                            <div>\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToStepThree}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <br />\n                              <p\n                                style={{ marginTop: \"1.5rem\" }}\n                                className=\"mb-2\"\n                                style={{ color: \"#fff\" }}\n                              >\n                                Upload proof of payment\n                              </p>\n                              <br />\n                              <Upload {...properties}>\n                                <ButtonAnt icon={<UploadOutlined />}>\n                                  Click to Upload\n                                </ButtonAnt>\n                              </Upload>\n                              <br />\n                              <small\n                                style={{\n                                  color: \"#fff\",\n                                  paddingBottom: \"1.5rem\",\n                                }}\n                              >\n                                *Optional but recommended <br />\n                                *Maximum file size 500kb\n                              </small>\n\n                              <div className=\"text-center\">\n                                <br />\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={handleConfirmation}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Done\n                                </Button>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {stepFour ? (\n                            <div>\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToUpload}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <div\n                                style={{\n                                  textAlign: \"center\",\n                                  width: \"100%\",\n                                  margin: \"5%\",\n                                }}\n                              >\n                                <img\n                                  style={{\n                                    textAlign: \"center\",\n                                    width: \"30%\",\n                                    marginTop: \"5%\",\n                                  }}\n                                  src=\"https://i.pinimg.com/originals/06/ae/07/06ae072fb343a704ee80c2c55d2da80a.gif\"\n                                />\n                              </div>\n                              <div\n                                style={{\n                                  textAlign: \"left\",\n                                  margin: \"10px 0\",\n                                  color: \"#fff\",\n                                }}\n                              >\n                                <div className=\"d-flex\">\n                                  <div>\n                                    <p>\n                                      Your account will be credited Once your\n                                      Bitcoin Transfer has been confirmed\n                                    </p>\n                                  </div>\n                                </div>\n                              </div>\n                              <p className=\"mt-4\" style={{ color: \"#aaa\" }}>\n                                It might take up to an hour for funds to become\n                                available in your account. On rare occasions, it\n                                may take up to 24 hours for the amount to be\n                                credited.\n                              </p>\n                              <div className=\"text-center\">\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={BuyCoin}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Exit\n                                </Button>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                        </div>\n                      </Tab.Pane>\n                    ) : (\n                      \"\"\n                    )}\n                  </Tab.Content>\n                </div>\n              </Tab.Container>\n            </div>\n            <span className=\"close\" onClick={() => setCredit(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {withdraw ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal\">\n            <div className=\"header\">Ask a withdraw</div>\n            <div className=\"dash-row\">\n              <div className=\"sidebar\">\n                <div className=\"links\">\n                  <a href=\"#\">\n                    <span className=\"font-size-15 font-weight-bold\">USD</span>\n                    <span className=\"font-size-11\">{wallet}</span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"content\">\n                <div className=\"range\">\n                  <center>\n                    <h3 className=\"text-uppercase font-weight-normal\">\n                      <span\n                        style={{\n                          backgroundColor: \"#29c359\",\n                          color: \"#fff\",\n                          padding: \"7px 12px\",\n                          display: \"inline-block\",\n                        }}\n                      >\n                        USD\n                      </span>{\" \"}\n                      Withdraw\n                    </h3>\n                  </center>\n                  <div className=\"dash-row\">\n                    <input\n                      style={{\n                        width: \"60em\",\n                        border: \"none\",\n                        padding: \".5em\",\n                      }}\n                      type=\"number\"\n                      min={siteUData.minWithdrawalAmount}\n                      max={siteUData.maxWithdrawalAmount}\n                      value={withValue}\n                      name=\"amtWithdraw\"\n                      onChange={(e) => setWitValue(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"dash-row\" style={{ color: \"white\" }}>\n                    <small style={{ paddingRight: \"2em\" }}>\n                      Minimum: {\"\"} {addComma(siteUData.minWithdrawalAmount)}\n                    </small>\n                    <small>\n                      Maximum: {\"\"} {addComma(siteUData.maxWithdrawalAmount)}{\" \"}\n                    </small>\n                  </div>\n                  <div className=\"dash-row\" style={{ marginTop: \"30px\" }}>\n                    <div className=\"withdraw-card\">\n                      <span className=\"title\">AMOUNT</span>\n                      <span>\n                        {addComma(withValue)}\n                        {\"\"}USD\n                      </span>\n                    </div>\n                    <div className=\"withdraw-card\">\n                      <span className=\"title\">FEES (3.00 %)</span>\n                      <span>\n                        {addComma(percent)}\n                        {\"\"}USD\n                      </span>\n                    </div>\n                    <div className=\"withdraw-card total\">\n                      <span className=\"title\">TOTAL</span>\n                      <span>\n                        {withValue > 0 ? addComma(Math.round(amount)) : 0}\n                        {\"\"}USD\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"withdraw-method\">\n                    <h4>CHOOSE RECEIVER ACCOUNT</h4>\n                    <select\n                      value={withdrawMethod}\n                      onChange={(e) => setWithdrawMethod(e.target.value)}\n                    >\n                      <option disabled>Choose your method</option>\n\n                      {payMethod\n                        ? payMethod.map((i, index) => (\n                            <option key={index} value={index}>\n                              {i.bankName || i.cryptoCurrencyName}\n                            </option>\n                          ))\n                        : \"\"}\n                      {/* {payMethod? payMethod.crypto.map((i, index) => (\n                        <option key={index+200} value={index}>{i.cryptoCurrencyName}</option>\n                      ))  : ''\n                      } */}\n                    </select>\n                    <button onClick={subWithdraw} className=\"btn\">\n                      Validate\n                    </button>\n                  </div>\n                </div>\n                <div className=\"no-withdrawal\">\n                  <span>YOU NEED TO HAVE AT LEAST 200 USD</span>\n                </div>\n              </div>\n            </div>\n            <span className=\"close\" onClick={() => setWithdraw(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {personalData ? (\n        <section\n          className=\"withdraw-modal-box personal-data-modal\"\n          style={{ display: \"block\" }}\n        >\n          <div className=\"withdraw-modal personal-modal\">\n            <div className=\"header\">User Personal Data</div>\n            <div className=\"dash-row\">\n              <div className=\"content\">\n                <div className=\"billing-form text-left\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Name\"\n                          name=\"yourName\"\n                          id=\"yourName\"\n                          value={yourName}\n                          onChange={(e) => setYourName(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Last Name\"\n                          name=\"yourLastName\"\n                          id=\"yourLastName\"\n                          value={yourLastName}\n                          onChange={(e) => setYourLastName(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"email\"\n                          placeholder=\"Your Email Address\"\n                          name=\"yourEmailAddress\"\n                          id=\"yourEmailAddress\"\n                          value={yourEmailAddress}\n                          onChange={(e) => setYourEmailAddress(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          value={yourPhoneNumber}\n                          onChange={(e) => setYourPhoneNumber(e.target.value)}\n                          type=\"number\"\n                          placeholder=\"phone number\"\n                          name=\"phone\"\n                          id=\"yourPhoneNumber\"\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={12}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          as=\"select\"\n                          name=\"profileCountry\"\n                          value={profileCountry}\n                          onChange={(e) => setProfileCountry(e.target.value)}\n                        >\n                          {profileCountryList.map((country) => (\n                            <option>{country}</option>\n                          ))}\n                        </Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          value={yourPassword}\n                          onChange={(e) => setYourPassword(e.target.value)}\n                          type=\"password\"\n                          placeholder=\"Your New Password\"\n                          name=\"newPassword\"\n                          id=\"yourPassword\"\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          value={yourPasswordComfirm}\n                          onChange={(e) =>\n                            setYourPasswordComfirm(e.target.value)\n                          }\n                          type=\"password\"\n                          placeholder=\"Repeat New Password\"\n                          name=\"repeatPassword\"\n                          id=\"yourPasswordConfirm\"\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <div className=\"text-right\">\n                    <Button\n                      style={{ background: web.yourMainColor }}\n                      onClick={updateProfile}\n                      variant=\"primary\"\n                      className=\"mb-4\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <span className=\"close\" onClick={() => setPersonalData(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {support ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal support-modal\">\n            <div className=\"header\">Contact Support</div>\n            <span className=\"close\" onClick={() => setSupport(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <Container fluid>\n              <Row>\n                <Col xs={12} md={6}>\n                  <div className=\"support-image\"></div>\n                </Col>\n                <Col xs={12} md={6}>\n                  <div className=\"support-wrapper\">\n                    <h6 className=\"text-left\">SUPPORT</h6>\n                    <hr />\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>EMAIL</p>\n                      </div>\n                      <div>\n                        <p>\n                          <a href={`mailto:${supportMail}`}>{supportMail}</a>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>PHONE</p>\n                      </div>\n                      <div>\n                        <p>\n                          <a href=\"tel:+234800000000\">{supportPhone}</a>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>ADDRESS</p>\n                      </div>\n                      <div>\n                        <p>{supportAddress}</p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4\">\n                      <h6 className=\"text-left\">CONTACT DPO</h6>\n                      <hr />\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <p>EMAIL</p>\n                        </div>\n                        <div>\n                          <p>\n                            <a href={`mailto:${DPOEmail}`}>{DPOEmail}</a>\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <p>PHONE</p>\n                        </div>\n                        <div>\n                          <p>\n                            <a href=\"tel:+234800000000\">{DPOPhone}</a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {withdrawSettings ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal support-modal\">\n            <div className=\"header\">Withdraw Settings</div>\n            <span className=\"close\" onClick={() => setWithdrawSettings(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <Container fluid className=\"pt-5\">\n              <div className=\"withdraw-settings d-flex\">\n                <div>\n                  <button onClick={openBankTransfer}>\n                    <img src={transfer} alt=\"bank transfer\" />\n                  </button>\n                </div>\n                <div>\n                  <button onClick={openCrypto}>\n                    <img\n                      src={\n                        \"https://assets.coinbase.com/assets/bitcoin.0307bf6969a0d3b8b43fcab55e6de8ab.svg\"\n                      }\n                      alt=\"cryptocurrencies\"\n                    />\n                  </button>\n                </div>\n              </div>\n\n              <div style={{ height: \"35vh\" }}>\n                {payMethodBoth &&\n                payMethodBoth.banks &&\n                payMethodBoth.crypto.length > 0\n                  ? payMethodBoth.banks.map((item, index) => (\n                      <div key={index} className=\"shadowed text-left\">\n                        <div>\n                          <h6 className=\"mb-0\">Bank Transfer</h6>\n                          <Row>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">Name</p>\n                                <p className=\"value\">{item.name}</p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">Bank Name</p>\n                                <p className=\"value\">{item.bankName}</p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">\n                                  Bank Account Number\n                                </p>\n                                <p className=\"value\">\n                                  {item.bankCountrybankAccountNumber}\n                                </p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </div>\n                    ))\n                  : \"\"}\n                {payMethodBoth &&\n                payMethodBoth.crypto &&\n                payMethodBoth.crypto.length > 0\n                  ? payMethodBoth.crypto.map((item, index) => (\n                      <div className=\"shadowed text-left\">\n                        <div>\n                          <h6 className=\"mb-0\">Crypto Transfer</h6>\n                          <Row>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">Name</p>\n                                <p className=\"value\">{item.name}</p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">\n                                  Crypto Currency Name\n                                </p>\n                                <p className=\"value\">\n                                  {item.cryptoCurrencyName}\n                                </p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">\n                                  Crypto Currency Address\n                                </p>\n                                <p className=\"value\">\n                                  {item.cryptoCurrencyAddress}\n                                </p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </div>\n                    ))\n                  : \"\"}\n              </div>\n            </Container>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {bankTransfer ? (\n        <section\n          className=\"withdraw-modal-box personal-data-modal\"\n          style={{ display: \"block\" }}\n        >\n          <div className=\"withdraw-modal bank-modal\">\n            <div className=\"header\">Bank Transfer</div>\n            <span className=\"close\" onClick={() => setBankTransfer(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <div className=\"dash-row\">\n              <div className=\"content\">\n                <div className=\"billing-form text-left\">\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Bank Name\"\n                      name=\"bankName\"\n                      id=\"bankName\"\n                      value={bankName}\n                      onChange={(e) => setBankName(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank Address\"\n                          name=\"bankAddress\"\n                          id=\"bankAddress\"\n                          value={bankAddress}\n                          onChange={(e) => setBankAddress(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank City\"\n                          name=\"bankCity\"\n                          id=\"bankCity\"\n                          value={bankCity}\n                          onChange={(e) => setBankCity(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank Country\"\n                          name=\"bankCountry\"\n                          id=\"bankCountry\"\n                          value={bankCountry}\n                          onChange={(e) => setBankCountry(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank Account Number/IBAN\"\n                          name=\"accountNumber\"\n                          id=\"accountNumber\"\n                          value={accountNumber}\n                          onChange={(e) => setaccountNumber(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Swift Code\"\n                          name=\"swiftCode\"\n                          id=\"swiftCode\"\n                          value={swiftCode}\n                          onChange={(e) => setSwiftCode(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Full Name (First Name and Last Name)\"\n                          name=\"fullName\"\n                          id=\"fullName\"\n                          value={fullName}\n                          onChange={(e) => setFullName(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Address\"\n                          name=\"yourAddress\"\n                          id=\"yourAddress\"\n                          value={yourAddress}\n                          onChange={(e) => setYourAddress(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Country\"\n                          name=\"yourCountry\"\n                          id=\"yourCountry\"\n                          value={yourCountry}\n                          onChange={(e) => setYourCountry(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Your City\"\n                      name=\"yourCity\"\n                      id=\"yourCity\"\n                      value={yourCity}\n                      onChange={(e) => setYourCity(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <div className=\"text-right\">\n                    <Button\n                      style={{ background: web.yourMainColor }}\n                      variant=\"primary\"\n                      onClick={saveBankDetails}\n                      className=\"mb-4\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {cryptoCurrency ? (\n        <section\n          className=\"withdraw-modal-box personal-data-modal\"\n          style={{ display: \"block\" }}\n        >\n          <div className=\"withdraw-modal personal-modal\">\n            <div className=\"header\">Cryptocurrencies</div>\n            <span className=\"close\" onClick={() => setCryptoCurrency(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <div className=\"dash-row\">\n              <div className=\"content\">\n                <div className=\"billing-form text-left\">\n                  <Form.Group>\n                    <Form.Control\n                      id=\"crypto-name\"\n                      name=\"crypto-name\"\n                      onChange={(e) => setCryptoCurrencyName(e.target.value)}\n                      as=\"select\"\n                    >\n                      <option value=\"BTC\">BTC</option>\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Address\"\n                      name=\"address\"\n                      id=\"address\"\n                      value={cryptoAddress}\n                      onChange={(e) => setCryptoAddress(e.target.value)}\n                    />\n                  </Form.Group>\n                  <div className=\"text-right\">\n                    <Button\n                      style={{ background: web.yourMainColor }}\n                      variant=\"primary\"\n                      onClick={saveCryptoCurrency}\n                      className=\"mb-4\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {autoTrade ? (\n        <div className=\"levC1\" style={{ display: \"block\" }}>\n          <div className=\"levHeader1\">Auto Trade</div>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n            <br /> Do you agree?\n          </p>\n          <div className=\"text-right\">\n            <Button\n              disabled={submitLoading}\n              variant=\"primary mt-3\"\n              onClick={autoTradeEnable}\n            >\n              I Agree\n            </Button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {stepFive ? (\n        <div id=\"step-three\">\n          <div\n            class=\"levC1\"\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              marginTop: \"10%\",\n              left: 0,\n              right: 0,\n            }}\n          >\n            <div class=\"levHeader\" style={{ padding: \"3%\" }}>\n              Completed\n              <span\n                className=\"close\"\n                onClick={() => setStepFive(false)}\n                style={{\n                  top: \"30px\",\n                  right: \"15px\",\n                }}\n              >\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>{\" \"}\n            </div>\n            Your deposit will be made once the transaction is confirmed by the\n            accounting department. Thanks\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport const NavbarCo = withRouter(NavbarC);\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Sidebar.js",["795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport iconA from \"../AccountsAsset/lnr-users.svg\";\n\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      closeO: false,\n      fx: [\"EURUSD\", \"USDGBP\", \"USDJPY\"],\n      fxPrice: [],\n      iex: [],\n      crypto: [],\n      cum: [],\n      hideIbox: true,\n      currentItem: [],\n      addCurrentItemC: [],\n      addCurrentItemFx: [],\n      addCurrentItemCum: [],\n      addCurrentItemIex: [],\n      fillArr: [],\n      nullF: \"\",\n      setView: [],\n      setViewM: [],\n      orderIsh: [],\n      unitP: \"\",\n      user: this.props.user,\n      redirect: \"/\",\n      data: {},\n      orders: JSON.parse(localStorage.getItem(\"orders\"))\n        ? JSON.parse(localStorage.getItem(\"orders\")).orders\n        : this.props.orders,\n      history: JSON.parse(localStorage.getItem(\"historys\"))\n        ? JSON.parse(localStorage.getItem(\"historys\")).history\n        : this.props.history,\n      disA1: true,\n      disA2: true,\n      btcP: [],\n      orderBook: false,\n      market: false,\n      board: true,\n      port: false,\n      auto: false,\n      manager: false,\n      levIsh: false,\n      admin: false,\n      VView: false,\n      selectedFiles: [],\n      fileUp: {},\n      forexShow: false,\n      verifyS: this.props.user ? this.props.user.user.user.verify : \"\",\n      activeS: \"\",\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      totalUp: \"\",\n    };\n    this.myRef5 = this.props.user.user ? React.createRef() : \"\";\n\n    this.myRef6 = this.props.user.user ? React.createRef() : \"\";\n  }\n  token = \"pk_135c1daf1b8d4130b9318fd5e8ab0e5e\";\n  fav = document.getElementById(\"favicon\");\n  title = document.getElementById(\"title\");\n\n  handleC = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      currentItem: [\n        { symbol: item.symbol, price: item.price, rate: item.rate },\n      ],\n    });\n  };\n\n  handleAC = (item) => () => {\n    console.log(item, \"isnd\");\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n      addCurrentItemC: [\n        ...this.state.addCurrentItemC,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    (async () => {\n      console.log(\"rrrrrrrrrrr\");\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n    })();\n  };\n\n  handleRC = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemC;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemC: arr,\n    });\n  };\n\n  handleAFx = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemFx: [\n        ...this.state.addCurrentItemFx,\n        ...[{ price: item.rate, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRFx = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemFx;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemFx: arr,\n    });\n  };\n\n  handleAIex = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemIex: [\n        ...this.state.addCurrentItemIex,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleRIex = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemIex;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemIex: arr,\n    });\n  };\n\n  handleACum = (item) => () => {\n    this.setState({\n      hideIbox: false,\n      forexShow: false,\n\n      addCurrentItemCum: [\n        ...this.state.addCurrentItemCum,\n        ...[{ price: item.price, symbol: item.symbol }],\n      ],\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleViewUpdate = (item) => () => {\n    this.setState({\n      setView: item,\n      setViewM: item.price,\n      activeS: item.symbol,\n    });\n  };\n\n  handleUpdatePrice = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceBoth = (e) => {\n    let num = e.target.value;\n    let main = this.state.setViewM;\n\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleUpdatePriceM = () => {\n    let num = this.textInput.current.value;\n    let main = this.state.setViewM;\n    let newVidw = {\n      price: num / main,\n      symbol: this.state.setView.symbol,\n    };\n\n    this.setState({\n      setView: newVidw,\n      unitP: num,\n    });\n  };\n\n  handleRCum = (i) => () => {\n    let value = i;\n\n    let arr = this.state.addCurrentItemCum;\n\n    arr = arr.filter((item) => item !== value);\n\n    this.setState({\n      addCurrentItemCum: arr,\n    });\n  };\n\n  handleFilter = (e) => {\n    let arr1 = [\n      ...this.state.cum,\n      ...this.state.fxPrice,\n      ...this.state.crypto,\n      ...this.state.iex,\n    ];\n\n    let t = e.target.value ? e.target.value : \"\";\n\n    let res = arr1.filter((i) =>\n      i.symbol.toLowerCase().includes(t.toLowerCase())\n    );\n\n    if (res) {\n      this.setState({\n        fillArr: res,\n        hideOld: true,\n      });\n    } else {\n      this.setState({\n        nullF: \"not found\",\n        hideOld: true,\n      });\n    }\n  };\n\n  handleSubmitBuyL = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ loss: e.target.value } },\n    });\n  };\n\n  handleSubmitBuyP = (e) => {\n    this.setState({\n      data: { ...this.state.data, ...{ profit: e.target.value } },\n    });\n  };\n\n  handleSubmitBuy = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              new Intl.NumberFormat('en-US').format(this.state.user.user.user.wallet) +\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n                parseInt(this.state.orderIsh),\n          });\n        } else {\n        }\n      });\n  };\n\n  handleSubmitSell = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/trade/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.data),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        if (data) {\n          this.setState({\n            totalUp:\n              (parseInt(this.state.unitP) / parseInt(this.state.orderIsh)) *\n              10 *\n              parseInt(this.state.orderIsh),\n          });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  handSwitch1 = () => {\n    this.setState({\n      disA1: !this.state.disA1,\n    });\n  };\n\n  handSwitch2 = () => {\n    console.log(\"readeded\");\n\n    this.setState({\n      disA2: !this.state.disA2,\n    });\n  };\n\n  handleOrderBook = () => {\n    this.setState({\n      orderBook: true,\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n      auto: false,\n    });\n  };\n  handleMarket = () => {\n    this.setState({\n      market: true,\n      orderBook: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n      auto: false,\n    });\n  };\n  handleAuto = () => {\n    this.setState({\n      auto: true,\n      market: false,\n      orderBook: false,\n      board: false,\n      port: false,\n      manager: false,\n      admin: false,\n    });\n  };\n\n  handleBoard = () => {\n    this.setState({\n      market: false,\n      board: true,\n      orderBook: false,\n      port: false,\n      manager: false,\n      admin: false,\n      auto: false,\n    });\n  };\n  handlePort = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: true,\n      orderBook: false,\n      manager: false,\n      admin: false,\n      auto: false,\n    });\n  };\n  handleManager = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      orderBook: false,\n      manager: true,\n      admin: false,\n      auto: false,\n    });\n  };\n  handleAdmin = () => {\n    this.setState({\n      market: false,\n      board: false,\n      port: false,\n      manager: false,\n      orderBook: false,\n      admin: true,\n      auto: false,\n    });\n  };\n\n  setVView = () => {\n    this.setState({\n      VView: !this.state.VView,\n    });\n  };\n\n  handleImageChange = (e) => {\n    // console.log(e.target.files[])\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = () => {\n        this.setState({\n          fileUp: {\n            ...this.state.fileUp,\n            ...{ img: reader.result },\n          },\n        });\n      };\n    }\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n\n    console.log(\"dfffff\", this.state.fileUp);\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/registration/file/${this.state.user.user.user._id}`,\n      {\n        mode: \"cors\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.fileUp),\n      }\n    )\n      .then(function (res) {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ verifyS: true, VView: false });\n\n        if (data) {\n          this.setState({ verifyS: true, VView: false });\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  openForex = () => {\n    this.setState({ forexShow: true });\n    console.log(this.state.forexShow);\n  };\n\n  closeForex = () => {\n    this.setState({ forexShow: false });\n    console.log(this.state.forexShow);\n  };\n\n  setAll = () => {\n    this.setState({\n      all: true,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllC = () => {\n    this.setState({\n      all: false,\n      allC: true,\n      allF: false,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllF = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: true,\n      allCum: false,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllCum = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: true,\n      allS: false,\n      hideIbox: true,\n    });\n  };\n  setAllS = () => {\n    this.setState({\n      all: false,\n      allC: false,\n      allF: false,\n      allCum: false,\n      allS: true,\n      hideIbox: true,\n    });\n  };\n\n  setlevIsh = () => {\n    this.setState({\n      levIsh: !this.state.levIsh,\n    });\n  };\n\n  closeSetlevIsh = () => {\n    this.setState({\n      levIsh: false,\n    });\n  };\n  render() {\n    if (this.props.user.length === 0) {\n      return <Redirect to=\"/\" />;\n    } else {\n      // this.fav.href =  this.web.siteFav\n      // this.title.innerHTML = this.web.siteTitle\n\n      return (\n        <>\n          <div className=\"sidebar\" ref={this.myRef5}>\n            <ul>\n              <li onClick={this.handleBoard}>\n                <NavLink\n                  to=\"/board\"\n                  className={this.state.board ? \"active\" : \"\"}\n                >\n                  <svg id=\"lnr-chart-bars\" viewBox=\"0 0 1024 1024\">\n                    <title>chart-bars</title>\n                    <path\n                      className=\"path1\"\n                      d=\"M896 1024h-819.2c-42.347 0-76.8-34.451-76.8-76.8v-819.2c0-42.347 34.453-76.8 76.8-76.8h819.2c42.349 0 76.8 34.453 76.8 76.8v819.2c0 42.349-34.451 76.8-76.8 76.8zM76.8 102.4c-14.115 0-25.6 11.485-25.6 25.6v819.2c0 14.115 11.485 25.6 25.6 25.6h819.2c14.115 0 25.6-11.485 25.6-25.6v-819.2c0-14.115-11.485-25.6-25.6-25.6h-819.2z\"\n                    ></path>\n                    <path\n                      className=\"path2\"\n                      d=\"M332.8 870.4h-102.4c-14.138 0-25.6-11.461-25.6-25.6v-460.8c0-14.138 11.462-25.6 25.6-25.6h102.4c14.138 0 25.6 11.462 25.6 25.6v460.8c0 14.139-11.462 25.6-25.6 25.6zM256 819.2h51.2v-409.6h-51.2v409.6z\"\n                    ></path>\n                    <path\n                      className=\"path3\"\n                      d=\"M537.6 870.4h-102.4c-14.138 0-25.6-11.461-25.6-25.6v-614.4c0-14.138 11.462-25.6 25.6-25.6h102.4c14.139 0 25.6 11.462 25.6 25.6v614.4c0 14.139-11.461 25.6-25.6 25.6zM460.8 819.2h51.2v-563.2h-51.2v563.2z\"\n                    ></path>\n                    <path\n                      className=\"path4\"\n                      d=\"M742.4 870.4h-102.4c-14.139 0-25.6-11.461-25.6-25.6v-256c0-14.139 11.461-25.6 25.6-25.6h102.4c14.139 0 25.6 11.461 25.6 25.6v256c0 14.139-11.461 25.6-25.6 25.6zM665.6 819.2h51.2v-204.8h-51.2v204.8z\"\n                    ></path>\n                  </svg>\n                  <span>Board</span>\n                </NavLink>\n              </li>\n              <li onClick={this.handleOrderBook}>\n                <NavLink\n                  to=\"/order-book\"\n                  className={this.state.orderBook ? \"active\" : \"\"}\n                >\n                  <svg\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                    enableBackground=\"new 0 0 512 512\"\n                  >\n                    {\" \"}\n                    <g>\n                      {\" \"}\n                      <g>\n                        {\" \"}\n                        <path d=\"m307.7,212.5c-10.2,12.7-6.6,28.7 2.2,37.5l13.6,12.6c15.3,15.4 34.4,5.3 39.6,0l59.4-58.9c7-7.1 13.8-26 0-40l-13.6-12.6c-10-10.1-27.5-10.5-38.2-1.3l-80.9-80.1c6.4-8.1 11.2-25.3-1.6-38.2l-13.6-12.6c-10.4-10.5-29.2-10.5-39.6,0l-59.4,58.9c-12.9,13-9.4,30.5 0,40l13.6,12.6c13.3,13.5 29.6,7.4 37,2.2l14.9,14.6-230.1,228.5 50,50.5 230.9-229.2 15.8,15.5zm76.2-47.7c2.9-3 7.5-3 11.5,1.1l13.6,12.6c2.4,2.5 2.5,6.9 0,9.5l-59.4,58.9c-3.1,3.2-8.3,3.2-11.5,0l-13.6-12.6c-2-2-4-6.5 0-10.5l59.4-59zm-27.2-1.1l-35.2,35-80-79.7 35.4-35.8 79.8,80.5zm-141.4-49c-3.1,3.2-8.3,3.2-11.5,0l-13.6-12.6c-2-2-4-6.5 0-10.5l59.4-58.9c2.9-3 7.5-3 11.5,1.1l13.6,12.6c2.4,2.5 2.5,6.9 0,9.5l-59.4,58.8zm-153.2,282.1l-21.9-21.1 215.4-214.3 21.7,21.3-215.2,214.1z\" />{\" \"}\n                        <path d=\"m457.2,424.2v-55.8h-188.7v55.8h-43.8v76.8h276.3v-76.8h-43.8zm-167.8-35.8h148v35.8h-148v-35.8zm191.8,91.5h-235.6v-34.7h235.6v34.7z\" />{\" \"}\n                      </g>{\" \"}\n                    </g>{\" \"}\n                  </svg>\n                  <span>Order Book</span>\n                </NavLink>\n              </li>\n              <li onClick={this.handleMarket}>\n                <NavLink\n                  to=\"/market\"\n                  className={this.state.market ? \"active\" : \"\"}\n                >\n                  <svg id=\"lnr-heart-pulse\" viewBox=\"0 0 1024 1024\">\n                    <title>heart-pulse</title>\n                    <path\n                      className=\"path1\"\n                      d=\"M486.4 972.8c-4.283 0-8.566-1.074-12.432-3.222-5.954-3.307-147.285-82.464-274.914-208.987-10.040-9.954-10.11-26.163-0.157-36.203s26.163-10.11 36.203-0.157c101.349 100.472 214.307 171.323 251.293 193.35 37-22.054 150.123-93.045 251.304-193.352 10.042-9.952 26.248-9.882 36.205 0.158 9.954 10.040 9.883 26.25-0.158 36.205-127.629 126.52-268.958 205.678-274.912 208.986-3.866 2.149-8.149 3.222-12.432 3.222z\"\n                    ></path>\n                    <path\n                      className=\"path2\"\n                      d=\"M65.478 563.216c-9.61 0-18.821-5.437-23.182-14.709-28.066-59.659-42.296-119.314-42.296-177.307 0-148.218 120.582-268.8 268.8-268.8 50.173 0 103.461 18.805 150.051 52.952 27.251 19.973 50.442 44.043 67.549 69.606 17.107-25.565 40.299-49.634 67.55-69.606 46.589-34.147 99.878-52.952 150.050-52.952 148.218 0 268.8 120.582 268.8 268.8 0 57.992-14.23 117.645-42.294 177.301-6.018 12.794-21.267 18.29-34.061 12.267-12.794-6.018-18.286-21.267-12.269-34.061 24.834-52.786 37.424-105.107 37.424-155.507 0-119.986-97.616-217.6-217.6-217.6-87.187 0-171.856 71.725-193.314 136.096-3.485 10.453-13.267 17.504-24.286 17.504s-20.802-7.051-24.286-17.504c-21.456-64.371-106.125-136.096-193.314-136.096-119.986 0-217.6 97.614-217.6 217.6 0 50.4 12.592 102.723 37.426 155.512 6.019 12.794 0.526 28.043-12.267 34.061-3.522 1.659-7.23 2.443-10.88 2.443z\"\n                    ></path>\n                    <path\n                      className=\"path3\"\n                      d=\"M538.346 768.024c-0.232 0-0.456-0.002-0.678-0.006-10.35-0.218-29.122-5.598-38.552-39.194l-62.291-221.915-41.328 167.894c-8.106 32.933-26.902 39.813-37.387 40.982-10.483 1.173-30.334-1.397-45.504-31.733l-31.005-62.010c-1.475-2.952-2.85-4.834-3.893-6-0.171 0.229-0.355 0.483-0.546 0.765-18.939 27.816-61.053 48.792-97.962 48.792h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c21.554 0 47.152-13.942 55.638-26.408 11.397-16.739 28.026-25.638 45.629-24.48 19.142 1.286 36.246 14.274 46.928 35.634l22.781 45.562 47.93-194.71c8.069-32.784 24.658-39.907 37.15-40.109 12.512-0.24 29.302 6.379 38.43 38.888l65.763 234.286 60.323-184.738c10.504-32.168 29.779-37.707 40.334-38.144 10.542-0.435 30.224 3.482 43.357 34.672l37.062 88.026c6.946 16.496 29.573 31.522 47.474 31.522h76.8c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6h-76.8c-38.24 0-79.822-27.608-94.662-62.853l-30.301-71.968-65.208 199.699c-10.598 32.454-29 37.546-39.483 37.546z\"\n                    ></path>\n                  </svg>\n                  <span>Market</span>\n                </NavLink>\n              </li>\n\n              <li onClick={this.handleAuto}>\n                <NavLink\n                  to=\"/auto_copy_trader\"\n                  className={this.state.auto ? \"active\" : \"\"}\n                >\n                  <svg id=\"lnr-users\" viewBox=\"0 0 1024 1024\">\n                    <title>users</title>\n                    <path\n                      class=\"path1\"\n                      d=\"M947.2 921.6h-563.2c-42.347 0-76.8-34.453-76.8-76.8 0-2.461 0.538-60.952 47.331-118.544 26.883-33.088 63.541-59.31 108.952-77.941 54.856-22.504 122.858-33.915 202.117-33.915s147.261 11.411 202.117 33.915c45.411 18.63 82.067 44.853 108.952 77.941 46.794 57.592 47.331 116.083 47.331 118.544 0 42.347-34.453 76.8-76.8 76.8zM358.4 844.931c0.072 14.056 11.528 25.469 25.6 25.469h563.2c14.072 0 25.528-11.413 25.6-25.469-0.048-1.786-1.656-45.802-37.851-88.786-49.88-59.235-143.019-90.546-269.349-90.546s-219.469 31.31-269.349 90.546c-36.194 42.984-37.803 87-37.851 88.786z\"\n                    ></path>\n                    <path\n                      class=\"path2\"\n                      d=\"M665.6 563.2c-112.926 0-204.8-91.874-204.8-204.8 0-112.928 91.874-204.8 204.8-204.8s204.8 91.872 204.8 204.8c0 112.926-91.874 204.8-204.8 204.8zM665.6 204.8c-84.696 0-153.6 68.904-153.6 153.6s68.904 153.6 153.6 153.6 153.6-68.904 153.6-153.6-68.904-153.6-153.6-153.6z\"\n                    ></path>\n                    <path\n                      class=\"path3\"\n                      d=\"M230.4 921.6h-153.6c-42.347 0-76.8-34.451-76.8-76.8 0-1.915 0.386-47.446 33.92-92.16 19.373-25.832 45.778-46.299 78.483-60.834 39.126-17.389 87.438-26.206 143.597-26.206 9.16 0 18.232 0.235 26.962 0.701 14.118 0.754 24.954 12.81 24.2 26.928-0.752 14.117-12.781 24.96-26.928 24.2-7.826-0.418-15.979-0.629-24.234-0.629-199.366 0-204.666 121.826-204.8 128.131 0.072 14.054 11.528 25.469 25.6 25.469h153.6c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                    ></path>\n                    <path\n                      class=\"path4\"\n                      d=\"M256 614.4c-84.696 0-153.6-68.904-153.6-153.6s68.904-153.6 153.6-153.6 153.6 68.904 153.6 153.6-68.904 153.6-153.6 153.6zM256 358.4c-56.464 0-102.4 45.936-102.4 102.4s45.936 102.4 102.4 102.4 102.4-45.936 102.4-102.4c0-56.464-45.936-102.4-102.4-102.4z\"\n                    ></path>\n                  </svg>\n                  <span style={{ whiteSpace: \"pre-wrap\" }}>\n                    Auto Copy Trader\n                  </span>\n                </NavLink>\n              </li>\n              {/* <li onClick={this.handlePort}>\n                <NavLink to=\"/port\" className={this.state.port ? \"active\" : \"\"}>\n                  <svg id=\"lnr-layers\" viewBox=\"0 0 1024 1024\">\n                    <title>layers</title>\n                    <path\n                      className=\"path1\"\n                      d=\"M512 614.4c-3.379 0-6.758-0.669-9.934-2.006l-486.4-204.8c-9.493-3.997-15.666-13.293-15.666-23.594s6.173-19.597 15.666-23.594l486.4-204.8c6.354-2.675 13.517-2.675 19.869 0l486.4 204.8c9.493 3.997 15.666 13.293 15.666 23.594s-6.173 19.597-15.666 23.594l-486.4 204.8c-3.176 1.338-6.555 2.006-9.934 2.006zM91.57 384l420.43 177.024 420.43-177.024-420.43-177.024-420.43 177.024z\"\n                    ></path>\n                    <path\n                      className=\"path2\"\n                      d=\"M512 768c-3.379 0-6.758-0.669-9.934-2.006l-486.4-204.8c-13.030-5.486-19.146-20.498-13.659-33.528s20.498-19.146 33.528-13.659l476.466 200.618 476.466-200.618c13.029-5.483 28.042 0.63 33.528 13.659 5.488 13.032-0.63 28.042-13.659 33.528l-486.4 204.8c-3.176 1.338-6.555 2.006-9.934 2.006z\"\n                    ></path>\n                    <path\n                      className=\"path3\"\n                      d=\"M512 921.6c-3.379 0-6.758-0.669-9.934-2.006l-486.4-204.8c-13.030-5.486-19.146-20.498-13.659-33.528s20.498-19.144 33.528-13.659l476.466 200.618 476.466-200.618c13.029-5.483 28.042 0.63 33.528 13.659 5.488 13.032-0.63 28.042-13.659 33.528l-486.4 204.8c-3.176 1.338-6.555 2.006-9.934 2.006z\"\n                    ></path>\n                  </svg>\n                  <span>Portfolio</span>\n                </NavLink>\n              </li> */}\n              <li>\n                <NavLink dash-action=\"calc\" to=\"calc\">\n                  <svg\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                    enableBackground=\"new 0 0 512 512\"\n                  >\n                    {\" \"}\n                    <g>\n                      {\" \"}\n                      <path d=\"m480.1,11v79.5h-144.8c-4.9-28.3-28.6-49-56.4-49-28.6,0-51.5,21.4-56.4,49h-43.5c-4.7-28.3-27.7-49-56.4-49-28.6,0-51.5,21.4-56.4,49h-34.3v-79.5h-20.9v490h20.9v-79.5h34.3c4.9,28.3 28.6,49 56.4,49 28.6,0 51.5-21.4 56.4-49h28c4.9,28.3 28.6,49 56.4,49 27.7,0 50.5-21.4 56.1-49h160.8v79.5h20.7v-490h-20.9zm-201.2,53.4c20.9,0 36.5,16.3 36.5,38.1 0,20.7-16.7,38.1-36.5,38.1s-36.5-17.4-36.5-38.1 16.7-38.1 36.5-38.1zm-156.3,0c20.9,0 36.5,16.3 36.5,38.1 0,20.7-16.7,38.1-36.5,38.1-19.8,0-36.5-17.4-36.5-38.1s16.6-38.1 36.5-38.1zm-56.4,47.9c4.9,28.3 28.6,49 56.4,49 28.7,0 51.7-20.7 56.4-49h43.6c4.9,28.3 28.6,49 56.4,49 28.7,0 51.7-20.7 56.4-49h144.8v132.8h-28.1c-4.9-28.3-28.6-49-56.4-49-28.7,0-51.7,20.7-56.4,49h-66.5c-4.7-28.3-27.7-49-56.4-49s-51.7,20.7-56.4,49h-128.1v-132.8h34.3zm366,143.7c0,20.7-16.7,38.1-36.5,38.1s-36.5-17.4-36.5-38.1 16.7-38.1 36.5-38.1c20.9,0 36.5,17.4 36.5,38.1zm-179.3,0c0,20.7-16.7,38.1-36.5,38.1s-36.5-17.4-36.5-38.1 16.7-38.1 36.5-38.1 36.5,17.4 36.5,38.1zm-130.3,192.7c-19.8,0-36.5-17.4-36.5-38.1 0-20.7 16.7-38.1 36.5-38.1 20.9,0 36.5,17.4 36.5,38.1-0.1,20.7-16.7,38.1-36.5,38.1zm140.7,0c-19.8,0-36.5-17.4-36.5-38.1 0-20.7 16.7-38.1 36.5-38.1s36.5,17.4 36.5,38.1c0,20.7-16.7,38.1-36.5,38.1zm56.4-49c-4.7-28.3-27.7-49-56.4-49-28.6,0-51.5,21.4-56.4,49h-27.9c-4.7-28.3-27.7-49-56.4-49-28.6,0-51.5,21.4-56.4,49h-34.3v-132.8h128.1c4.9,28.3 28.6,49 56.4,49s51.5-20.7 56.4-49h66.5c4.9,28.3 28.6,49 56.4,49s51.5-20.7 56.4-49h28.1v132.8h-160.5z\" />{\" \"}\n                    </g>{\" \"}\n                  </svg>\n                  <span>Calc.</span>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink dash-action=\"news\" to=\"news\">\n                  <svg id=\"lnr-earth\" viewBox=\"0 0 1024 1024\">\n                    <title>earth</title>\n                    <path\n                      className=\"path1\"\n                      d=\"M874.038 149.962c-96.704-96.704-225.278-149.962-362.038-149.962s-265.334 53.258-362.038 149.962c-96.704 96.704-149.962 225.278-149.962 362.038s53.258 265.334 149.962 362.038c96.704 96.704 225.278 149.962 362.038 149.962s265.334-53.258 362.038-149.962c96.704-96.704 149.962-225.278 149.962-362.038s-53.258-265.334-149.962-362.038zM941.918 346.178c-9.989-17.987-35.050-26.512-67.853-37.661-35.182-11.957-47.608-48.122-61.994-89.997-12.49-36.35-25.398-73.874-56.069-97.238 83.898 52.584 149.733 131.406 185.915 224.896zM798.235 521.757c3.872 34.683 7.875 70.546-35.163 118.874-11.629 13.056-18.44 31.238-25.653 50.49-16.701 44.582-32.486 86.709-99.642 87.325-1.882-2.262-7.242-10.734-11.981-37.533-4.366-24.698-6.886-56.606-9.555-90.389-4.093-51.834-8.731-110.582-21.544-159.32-16.382-62.325-43.867-99.141-84.026-112.554-17.522-5.853-35.411-8.698-54.693-8.698-14.211 0-27.125 1.522-38.517 2.864-8.875 1.045-17.258 2.034-24.341 2.034 0 0-0.002 0-0.003 0-11.987 0-25.573 0-42.278-38.29-24.021-55.053-6.304-143.267 64.202-189.787 38.661-25.509 65.336-36.392 89.2-36.392 19.026 0 39.581 6.622 68.73 22.146 34.418 18.33 61.379 20.68 81.026 20.68 7.789 0 14.85-0.419 21.682-0.826 5.726-0.339 11.134-0.661 16.139-0.661 11.259 0 20.387 1.467 31.088 8.776 19.723 13.472 29.936 43.195 40.747 74.664 16.392 47.715 34.973 101.798 93.941 121.837 7.925 2.693 21.576 7.333 31.216 11.366-8.328 8.608-22.285 21.067-35.92 33.24-8.808 7.862-18.789 16.773-29.851 26.858-31.965 29.133-28.16 63.221-24.803 93.296zM51.25 508.070c5.52 0.992 11.493 2.141 17.605 3.446 28.776 6.141 42.235 11.686 48.117 14.798-2.706 5.277-8.187 13.056-11.81 18.195-12.669 17.976-28.435 40.349-22.437 64.984 4.046 16.618 0.632 37.032-5.248 55.883-16.994-48.005-26.277-99.624-26.277-153.378 0-1.314 0.038-2.618 0.050-3.93zM512 972.8c-175.379 0-328.173-98.494-406.014-243.062 13.422-25.554 38.314-82.054 26.68-131.547 0.806-4.97 9.248-16.95 14.349-24.186 13.874-19.688 31.141-44.189 18.35-70.152-8.976-18.222-32.957-30.534-80.181-41.17-10.939-2.464-21.594-4.47-30.65-6.019 27.424-228.090 222.107-405.464 457.466-405.464 80.776 0 156.749 20.918 222.83 57.582-16.33-7.134-31.154-8.266-43.014-8.266-6.523 0-12.957 0.382-19.176 0.752-6.085 0.362-12.374 0.734-18.645 0.734-14.542 0-32.682-1.742-56.958-14.67-37.056-19.734-64.808-28.155-92.795-28.155-34.635 0-69.744 13.414-117.397 44.856-41.197 27.181-72.229 68.779-87.381 117.133-14.779 47.166-13.2 95.418 4.448 135.867 20.824 47.728 48.336 69.013 89.203 69.014 0.003 0 0.003 0 0.006 0 10.090 0 19.923-1.158 30.333-2.386 10.482-1.235 21.32-2.512 32.525-2.512 13.869 0 26.094 1.926 38.472 6.061 22.488 7.512 39.082 32.701 50.728 77.008 11.648 44.31 16.098 100.638 20.021 150.334 3.274 41.454 6.366 80.61 13.176 110.126 4.136 17.923 9.494 31.538 16.379 41.621 10.283 15.058 25.032 23.35 41.526 23.35 45.269 0 81.429-14.594 107.47-43.374 21.659-23.934 32.722-53.466 41.613-77.194 5.245-14.003 10.67-28.482 15.941-34.402 58.219-65.373 52.203-119.258 47.813-158.603-3.226-28.888-3.285-39.123 8.408-49.781 10.864-9.904 20.741-18.722 29.454-26.499 18.568-16.576 31.984-28.554 41.397-38.83 6.464-7.058 21.603-23.584 17.395-44.28-0.037-0.184-0.088-0.358-0.126-0.539 17.558 48.701 27.154 101.174 27.154 155.851 0 254.086-206.714 460.8-460.8 460.8z\"\n                    ></path>\n                  </svg>\n                  <span>News</span>\n                </NavLink>\n              </li>\n              {this.state.user.user.user.isManager ||\n              this.state.user.user.user.isAdmin ? (\n                <li onClick={this.handleManager}>\n                  <NavLink\n                    to=\"/manager\"\n                    className={this.state.manager ? \"active\" : \"\"}\n                  >\n                    <svg id=\"lnr-pie-chart\" viewBox=\"0 0 1024 1024\">\n                      <title>pie-chart</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M435.2 1024c-116.246 0-225.534-45.269-307.733-127.467s-127.467-191.488-127.467-307.733c0-116.246 45.269-225.534 127.467-307.733s191.486-127.467 307.733-127.467c14.138 0 25.6 11.462 25.6 25.6v384h384c14.139 0 25.6 11.461 25.6 25.6 0 116.245-45.269 225.534-127.467 307.733s-191.488 127.467-307.733 127.467zM409.6 205.643c-199.842 13.226-358.4 180.026-358.4 383.157 0 211.739 172.262 384 384 384 203.131 0 369.931-158.558 383.157-358.4h-383.157c-14.138 0-25.6-11.461-25.6-25.6v-383.157z\"\n                      ></path>\n                      <path\n                        className=\"path2\"\n                        d=\"M947.2 512h-409.6c-14.139 0-25.6-11.462-25.6-25.6v-409.6c0-14.138 11.461-25.6 25.6-25.6 116.245 0 225.534 45.269 307.733 127.467s127.467 191.486 127.467 307.733c0 14.138-11.461 25.6-25.6 25.6zM563.2 460.8h357.557c-12.664-191.374-166.184-344.891-357.557-357.557v357.557z\"\n                      ></path>\n                    </svg>\n                    <span>Manager</span>\n                  </NavLink>\n                </li>\n              ) : (\n                \"\"\n              )}\n              {this.state.user.user.user.isAdmin ? (\n                <li onClick={this.handleAdmin}>\n                  <NavLink\n                    to=\"/admin\"\n                    className={this.state.admin ? \"active\" : \"\"}\n                  >\n                    <svg id=\"lnr-cog\" viewBox=\"0 0 1024 1024\">\n                      <title>cog</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M390.71 1008.755c-2.109 0-4.248-0.262-6.378-0.81-45.976-11.803-90.149-30.042-131.291-54.21-11.923-7.003-16.13-22.21-9.501-34.344 8.15-14.925 12.459-31.866 12.459-48.992 0-56.464-45.936-102.4-102.4-102.4-17.125 0-34.066 4.309-48.992 12.459-12.133 6.627-27.339 2.421-34.342-9.501-24.17-41.142-42.408-85.315-54.211-131.293-3.333-12.989 3.92-26.349 16.629-30.629 41.699-14.037 69.717-53.034 69.717-97.037s-28.018-83-69.718-97.040c-12.707-4.278-19.962-17.638-16.627-30.627 11.803-45.976 30.042-90.149 54.211-131.291 7.003-11.923 22.21-16.13 34.344-9.501 14.923 8.15 31.864 12.459 48.99 12.459 56.464 0 102.4-45.936 102.4-102.4 0-17.126-4.309-34.067-12.459-48.99-6.629-12.134-2.422-27.341 9.501-34.344 41.141-24.168 85.314-42.408 131.291-54.211 12.994-3.334 26.349 3.92 30.627 16.627 14.040 41.701 53.037 69.718 97.040 69.718s83-28.018 97.038-69.717c4.28-12.71 17.645-19.965 30.629-16.629 45.976 11.802 90.15 30.042 131.293 54.211 11.922 7.003 16.128 22.208 9.501 34.342-8.152 14.926-12.461 31.867-12.461 48.992 0 56.464 45.936 102.4 102.4 102.4 17.126 0 34.067-4.309 48.992-12.459 12.138-6.629 27.341-2.421 34.344 9.501 24.166 41.141 42.406 85.314 54.21 131.291 3.334 12.989-3.918 26.349-16.627 30.627-41.701 14.040-69.718 53.037-69.718 97.040s28.018 83 69.718 97.038c12.707 4.28 19.962 17.638 16.627 30.629-11.803 45.976-30.042 90.15-54.21 131.291-7.005 11.925-22.208 16.128-34.344 9.502-14.926-8.152-31.867-12.461-48.992-12.461-56.464 0-102.4 45.936-102.4 102.4 0 17.125 4.309 34.066 12.461 48.992 6.627 12.136 2.421 27.341-9.502 34.344-41.141 24.166-85.314 42.406-131.291 54.21-12.992 3.336-26.349-3.918-30.629-16.627-14.038-41.701-53.035-69.718-97.038-69.718s-83 28.018-97.040 69.718c-3.578 10.624-13.502 17.437-24.25 17.437zM512 870.4c57.715 0 109.693 32.138 135.917 82.029 26.637-8.218 52.507-18.875 77.299-31.846-5.541-16.077-8.416-33.075-8.416-50.182 0-84.696 68.904-153.6 153.6-153.6 17.107 0 34.106 2.875 50.181 8.418 12.971-24.792 23.63-50.662 31.846-77.299-49.89-26.226-82.027-78.203-82.027-135.918s32.138-109.691 82.029-135.918c-8.218-26.637-18.875-52.506-31.846-77.299-16.077 5.542-33.074 8.418-50.182 8.418-84.696 0-153.6-68.904-153.6-153.6 0-17.107 2.875-34.106 8.418-50.181-24.792-12.971-50.662-23.63-77.299-31.846-26.226 49.89-78.203 82.027-135.918 82.027s-109.691-32.138-135.917-82.027c-26.637 8.216-52.507 18.874-77.299 31.846 5.542 16.075 8.416 33.072 8.416 50.181 0 84.696-68.904 153.6-153.6 153.6-17.109 0-34.106-2.874-50.181-8.418-12.973 24.794-23.63 50.662-31.846 77.299 49.89 26.227 82.027 78.203 82.027 135.918s-32.138 109.693-82.027 135.917c8.216 26.637 18.875 52.507 31.846 77.299 16.075-5.541 33.074-8.416 50.181-8.416 84.696 0 153.6 68.904 153.6 153.6 0 17.109-2.875 34.106-8.418 50.181 24.794 12.971 50.662 23.63 77.299 31.846 26.227-49.89 78.203-82.027 135.918-82.027z\"\n                      ></path>\n                      <path\n                        className=\"path2\"\n                        d=\"M512 665.6c-84.696 0-153.6-68.904-153.6-153.6s68.904-153.6 153.6-153.6 153.6 68.904 153.6 153.6-68.904 153.6-153.6 153.6zM512 409.6c-56.464 0-102.4 45.936-102.4 102.4s45.936 102.4 102.4 102.4c56.464 0 102.4-45.936 102.4-102.4s-45.936-102.4-102.4-102.4z\"\n                      ></path>\n                    </svg>{\" \"}\n                    <span>Admin</span>\n                  </NavLink>\n                </li>\n              ) : (\n                \"\"\n              )}\n            </ul>\n          </div>\n\n          <div className=\"calc-section\">\n            <div className=\"heading\">\n              <span>CONVERTER</span>\n\n              <span className=\"close\" dash-action=\"calc\">\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>\n            </div>\n            <div className=\"calc\" id=\"calcSort\">\n              <div className=\"dash-row dash-row-centralized calc-instrument\">\n                <div className=\"image\">\n                  <img src=\"images/ETH.svg\" />\n                </div>\n                <div className=\"instrument\">\n                  <span className=\"font-size-12\">Ethereuem</span>\n                </div>\n                <div className=\"input\">\n                  <div className=\"dash-row dash-row-centralized\">\n                    <div className=\"input-field\">\n                      <input\n                        type=\"text\"\n                        name=\"input\"\n                        id=\"input\"\n                        defaultValue={1}\n                      />\n                    </div>\n                    <div className=\"input-ins\">\n                      <span className=\"font-size-12\">ETH</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized calc-instrument\">\n                <div className=\"image\">\n                  <img src=\"images/LTC.svg\" />\n                </div>\n                <div className=\"instrument\">\n                  <span className=\"font-size-12\">Litecoin</span>\n                </div>\n                <div className=\"input\">\n                  <div className=\"dash-row dash-row-centralized\">\n                    <div className=\"input-field\">\n                      <input\n                        type=\"text\"\n                        name=\"input\"\n                        id=\"input\"\n                        defaultValue={1}\n                      />\n                    </div>\n                    <div className=\"input-ins\">\n                      <span className=\"font-size-12\">LTC</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized calc-instrument\">\n                <div className=\"image\">\n                  <img src=\"images/BTC.svg\" />\n                </div>\n                <div className=\"instrument\">\n                  <span className=\"font-size-12\">BITCOIN</span>\n                </div>\n                <div className=\"input\">\n                  <div className=\"dash-row dash-row-centralized\">\n                    <div className=\"input-field\">\n                      <input\n                        type=\"text\"\n                        name=\"input\"\n                        id=\"input\"\n                        defaultValue={1}\n                      />\n                    </div>\n                    <div className=\"input-ins\">\n                      <span className=\"font-size-12\">BIT</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"dash-row dash-row-centralized calc-instrument\">\n                <div className=\"image\">\n                  <img src=\"images/USD.svg\" />\n                </div>\n                <div className=\"instrument\">\n                  <span className=\"font-size-12\">DOLLARS</span>\n                </div>\n                <div className=\"input\">\n                  <div className=\"dash-row dash-row-centralized\">\n                    <div className=\"input-field\">\n                      <input\n                        type=\"text\"\n                        name=\"input\"\n                        id=\"input\"\n                        defaultValue={1}\n                      />\n                    </div>\n                    <div className=\"input-ins\">\n                      <span className=\"font-size-12\">USD</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <center>\n              <div className=\"add-icon\">\n                <span>+</span>\n              </div>\n            </center>\n          </div>\n          <div className=\"news-section\">\n            <div className=\"heading\">\n              <span>Calendar</span>\n              <span className=\"close\">\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\" dash-action=\"news\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>\n            </div>\n            <div className=\"dash-row tabs\">\n              <div news-tab=\"news\" className=\"tab active\">\n                <svg id=\"lnr-calendar-full\" viewBox=\"0 0 1024 1024\">\n                  <title>calendar-full</title>\n                  <path\n                    class=\"path1\"\n                    d=\"M947.2 102.4h-128v-25.6c0-14.138-11.461-25.6-25.6-25.6s-25.6 11.462-25.6 25.6v25.6h-512v-25.6c0-14.138-11.462-25.6-25.6-25.6s-25.6 11.462-25.6 25.6v25.6h-128c-42.347 0-76.8 34.453-76.8 76.8v716.8c0 42.349 34.453 76.8 76.8 76.8h870.4c42.349 0 76.8-34.451 76.8-76.8v-716.8c0-42.347-34.451-76.8-76.8-76.8zM76.8 153.6h128v76.8c0 14.138 11.462 25.6 25.6 25.6s25.6-11.462 25.6-25.6v-76.8h512v76.8c0 14.138 11.461 25.6 25.6 25.6s25.6-11.462 25.6-25.6v-76.8h128c14.115 0 25.6 11.485 25.6 25.6v128h-921.6v-128c0-14.115 11.485-25.6 25.6-25.6zM947.2 921.6h-870.4c-14.115 0-25.6-11.485-25.6-25.6v-537.6h921.6v537.6c0 14.115-11.485 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path2\"\n                    d=\"M384 512h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path3\"\n                    d=\"M537.6 512h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path4\"\n                    d=\"M691.2 512h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path5\"\n                    d=\"M844.8 512h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path6\"\n                    d=\"M230.4 614.4h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path7\"\n                    d=\"M384 614.4h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path8\"\n                    d=\"M537.6 614.4h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path9\"\n                    d=\"M691.2 614.4h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path10\"\n                    d=\"M844.8 614.4h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path11\"\n                    d=\"M230.4 716.8h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path12\"\n                    d=\"M384 716.8h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path13\"\n                    d=\"M537.6 716.8h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path14\"\n                    d=\"M691.2 716.8h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path15\"\n                    d=\"M844.8 716.8h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path16\"\n                    d=\"M230.4 819.2h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path17\"\n                    d=\"M384 819.2h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.138 0 25.6 11.461 25.6 25.6s-11.462 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path18\"\n                    d=\"M537.6 819.2h-51.2c-14.138 0-25.6-11.461-25.6-25.6s11.462-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path19\"\n                    d=\"M691.2 819.2h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                  <path\n                    class=\"path20\"\n                    d=\"M844.8 819.2h-51.2c-14.139 0-25.6-11.461-25.6-25.6s11.461-25.6 25.6-25.6h51.2c14.139 0 25.6 11.461 25.6 25.6s-11.461 25.6-25.6 25.6z\"\n                  ></path>\n                </svg>\n              </div>\n              <div news-tab=\"bbc\" className=\"tab\">\n                <svg className=\"lnr lnr-earth\">\n                  <use xlinkHref=\"#lnr-earth\" />\n                </svg>\n              </div>\n              <div news-tab=\"twitter\" className=\"tab\">\n                <svg\n                  version=\"1.1\"\n                  id=\"Layer_1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  x=\"0px\"\n                  y=\"0px\"\n                  viewBox=\"0 0 310 310\"\n                  style={{ enableBackground: \"new 0 0 310 310\" }}\n                  xmlSpace=\"preserve\"\n                >\n                  <g id=\"XMLID_826_\">\n                    <path\n                      id=\"XMLID_827_\"\n                      d=\"M302.973,57.388c-4.87,2.16-9.877,3.983-14.993,5.463c6.057-6.85,10.675-14.91,13.494-23.73\n              c0.632-1.977-0.023-4.141-1.648-5.434c-1.623-1.294-3.878-1.449-5.665-0.39c-10.865,6.444-22.587,11.075-34.878,13.783\n              c-12.381-12.098-29.197-18.983-46.581-18.983c-36.695,0-66.549,29.853-66.549,66.547c0,2.89,0.183,5.764,0.545,8.598\n              C101.163,99.244,58.83,76.863,29.76,41.204c-1.036-1.271-2.632-1.956-4.266-1.825c-1.635,0.128-3.104,1.05-3.93,2.467\n              c-5.896,10.117-9.013,21.688-9.013,33.461c0,16.035,5.725,31.249,15.838,43.137c-3.075-1.065-6.059-2.396-8.907-3.977\n              c-1.529-0.851-3.395-0.838-4.914,0.033c-1.52,0.871-2.473,2.473-2.513,4.224c-0.007,0.295-0.007,0.59-0.007,0.889\n              c0,23.935,12.882,45.484,32.577,57.229c-1.692-0.169-3.383-0.414-5.063-0.735c-1.732-0.331-3.513,0.276-4.681,1.597\n              c-1.17,1.32-1.557,3.16-1.018,4.84c7.29,22.76,26.059,39.501,48.749,44.605c-18.819,11.787-40.34,17.961-62.932,17.961\n              c-4.714,0-9.455-0.277-14.095-0.826c-2.305-0.274-4.509,1.087-5.294,3.279c-0.785,2.193,0.047,4.638,2.008,5.895\n              c29.023,18.609,62.582,28.445,97.047,28.445c67.754,0,110.139-31.95,133.764-58.753c29.46-33.421,46.356-77.658,46.356-121.367\n              c0-1.826-0.028-3.67-0.084-5.508c11.623-8.757,21.63-19.355,29.773-31.536c1.237-1.85,1.103-4.295-0.33-5.998\n              C307.394,57.037,305.009,56.486,302.973,57.388z\"\n                    />\n                  </g>\n                </svg>\n              </div>\n            </div>\n            <div className=\"tabs-details\">\n              <div news-tab-detail=\"news\">\n                {/* TradingView Widget BEGIN */}\n                <div className=\"tradingview-widget-container\" ref={this.myRef6}>\n                  <div className=\"tradingview-widget-container__widget\" />\n                  <div\n                    className=\"tradingview-widget-copyright\"\n                    style={{ width: \"235px\" }}\n                  >\n                    <a\n                      href=\"https://www.tradingview.com/markets/currencies/economic-calendar/\"\n                      rel=\"noopener\"\n                      target=\"_blank\"\n                    >\n                      <span className=\"blue-text\" />\n                    </a>{\" \"}\n                  </div>\n                </div>\n                {/* TradingView Widget END */}\n              </div>\n              <div news-tab-detail=\"bbc\">\n                <div className=\"bbc-card\">\n                  <span className=\"lefted text-uppercase font-size-10\">\n                    BBC NEWS-BUSINESS\n                  </span>\n                  <span className=\"righted text-uppercase font-size-10\">\n                    12 minutes ago\n                  </span>\n                  <p className=\"font-size-12\">\n                    Cladding: Extra cash to deal with crisis expected to be\n                    announced\n                  </p>\n                </div>\n                <div className=\"bbc-card\">\n                  <span className=\"lefted text-uppercase font-size-10\">\n                    BBC NEWS-BUSINESS\n                  </span>\n                  <span className=\"righted text-uppercase font-size-10\">\n                    12 minutes ago\n                  </span>\n                  <p className=\"font-size-12\">\n                    Cladding: Extra cash to deal with crisis expected to be\n                    announced\n                  </p>\n                </div>\n                <div className=\"bbc-card\">\n                  <span className=\"lefted text-uppercase font-size-10\">\n                    BBC NEWS-BUSINESS\n                  </span>\n                  <span className=\"righted text-uppercase font-size-10\">\n                    12 minutes ago\n                  </span>\n                  <p className=\"font-size-12\">\n                    Cladding: Extra cash to deal with crisis expected to be\n                    announced\n                  </p>\n                </div>\n                <div className=\"bbc-card\">\n                  <span className=\"lefted text-uppercase font-size-10\">\n                    BBC NEWS-BUSINESS\n                  </span>\n                  <span className=\"righted text-uppercase font-size-10\">\n                    12 minutes ago\n                  </span>\n                  <p className=\"font-size-12\">\n                    Cladding: Extra cash to deal with crisis expected to be\n                    announced\n                  </p>\n                </div>\n                <div className=\"bbc-card\">\n                  <span className=\"lefted text-uppercase font-size-10\">\n                    BBC NEWS-BUSINESS\n                  </span>\n                  <span className=\"righted text-uppercase font-size-10\">\n                    12 minutes ago\n                  </span>\n                  <p className=\"font-size-12\">\n                    Cladding: Extra cash to deal with crisis expected to be\n                    announced\n                  </p>\n                </div>\n                <div className=\"bbc-card\">\n                  <span className=\"lefted text-uppercase font-size-10\">\n                    BBC NEWS-BUSINESS\n                  </span>\n                  <span className=\"righted text-uppercase font-size-10\">\n                    12 minutes ago\n                  </span>\n                  <p className=\"font-size-12\">\n                    Cladding: Extra cash to deal with crisis expected to be\n                    announced\n                  </p>\n                </div>\n              </div>\n              <div news-tab-detail=\"twitter\" />\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\nexport default Sidebar;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Notification.js",["811","812","813","814","815","816","817","818","819","820","821"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Notification extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {};\n  }\n\n  render() {\n    return (\n      <div className=\"notification\">\n        <a href=\"#\">\n          <svg\n          style={{    marginBottom: '-35%'\n          }}\n            id=\"lnr-alarm\"\n            width=\"25\"\n            height=\"25\"\n            fill=\"#fff\"\n            className=\"lnr lnr-alarm animated\"\n            viewBox=\"0 0 1024 1024\"\n            onClick={()=>this.props.setNotify(!this.props.notify)}\n          >\n            <title>alarm</title>\n            <path\n              className=\"path1\"\n              d=\"M860.171 773.15c-58.576-44-92.171-111.194-92.171-184.35v-153.6c0-128.661-86.733-237.442-204.798-270.954l-0.002-36.246c0-42.347-34.451-76.8-76.8-76.8-42.347 0-76.8 34.453-76.8 76.8v36.245c-118.067 33.512-204.8 142.294-204.8 270.955v153.6c0 73.157-33.595 140.349-92.171 184.35-8.808 6.616-12.395 18.125-8.907 28.573 3.486 10.448 13.267 17.496 24.283 17.496h232.982c-1.709 8.384-2.587 16.955-2.587 25.581 0 70.579 57.421 128 128 128s128-57.421 128-128c0-8.626-0.878-17.197-2.584-25.581h232.981c11.016 0 20.795-7.046 24.283-17.496s-0.101-21.957-8.909-28.573zM460.8 128c0-14.115 11.485-25.6 25.6-25.6s25.6 11.485 25.6 25.6v26.774c-8.435-0.763-16.97-1.176-25.6-1.176s-17.166 0.413-25.6 1.176v-26.774zM563.2 844.8c0 42.347-34.453 76.8-76.8 76.8s-76.8-34.453-76.8-76.8c0-8.76 1.515-17.411 4.394-25.581h144.813c2.878 8.168 4.394 16.821 4.394 25.581zM191.571 768.019c13.075-15.826 24.437-33.051 33.744-51.27 20.362-39.858 30.685-82.906 30.685-127.949v-153.6c0-127.043 103.357-230.4 230.4-230.4s230.4 103.357 230.4 230.4v153.6c0 45.043 10.323 88.091 30.685 127.949 9.307 18.219 20.669 35.445 33.744 51.27h-589.658z\"\n            ></path>\n          </svg>{\" \"}\n        </a>\n\n       {this.props.notify?\n        <div className=\"notification-box\" style={{display:'block'}}>\n        {this.props.user.user.user.notify ? (\n          this.props.user.user.user.notify.map((item) => (\n            <div className=\"notification\">\n              <span className=\"title\">{item.topic}</span>\n              <span className=\"desc\">{item.desc}</span>\n              <span className=\"desc\">{item.des}</span>\n\n            </div>\n          ))\n        ) : (\n          <h3>no notification</h3>\n        )}\n\n        <span className=\"close\"             onClick={()=>this.props.setNotify(!this.props.notify)}\n>\n          <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n            <title>cross</title>\n            <path\n              className=\"path1\"\n              d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n            />\n          </svg>\n        </span>\n      </div>\n       :''}\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/AdminSidebar.js",["822","823","824","825","826"],"import React, { useState, useEffect } from \"react\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory,NavLink } from \"react-router-dom\";\n\nfunction AdminSidebar() {\n  return (\n    <div className=\"admin-sidebar\">\n      <ul>\n        <li className=\"active\">\n          <NavLink to=\"admin\">\n            <span className=\"mdi mdi-speedometer\" /> Dashboard\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"auto_trading\">\n            <span className=\"mdi mdi-file-download-outline\" /> Auto Trading\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"general-settings\">\n            <span className=\"mdi mdi-cog-outline\" /> General settings\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"general-appearance\">\n            <span className=\"mdi mdi-cog-outline\" /> General Appearance\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"login-page\">\n            <span className=\"mdi mdi-cog-outline\" /> Login page\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"login-signup\">\n            <span className=\"mdi mdi-login\" /> Login - Signup\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"payment\">\n            <span className=\"mdi mdi-credit-card\" /> Payment\n          </NavLink>\n        </li>\n       \n        <li>\n        <NavLink to=\"/templates\">\n            <span className=\"mdi mdi-paperclip\" />Templates\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/mail-settings\">\n            <span className=\"mdi mdi-paperclip\" /> Mail settings\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"identity\">\n            <span className=\"mdi mdi-fingerprint\" /> Identity\n          </NavLink>\n        </li>\n        <li className=\"dropdown\">\n          <ul className=\"dropdown-menu\">\n            <li>\n              <NavLink to=\"generals\">Generals</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"charts\">Charts</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"login-page\">Login page</NavLink>\n            </li>\n          </ul>\n          <NavLink to=\"#\">\n            <span className=\"mdi mdi-format-color-fill\" /> Appearance\n            <span className=\"icon mdi mdi-arrow-right-drop-circle\" />\n          </NavLink>\n        </li>\n\n\n\n      \n\n        <li className=\"dropdown\">\n          <ul className=\"dropdown-menu\" id=\"assets-dropdown\">\n            <li>\n              <NavLink to=\"coins\">Coins</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"markets\">Markets</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"exchanges\">Exchanges</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"currencies\">Currencies</NavLink>\n            </li>\n          </ul>\n          <NavLink to=\"#\">\n            <span className=\"mdi mdi-bitcoin\" /> Assets\n            <span className=\"icon mdi mdi-arrow-right-drop-circle\" />\n          </NavLink>\n        </li>\n        <li className=\"dropdown\">\n          <ul className=\"dropdown-menu\">\n            <li>\n              <NavLink to=\"krypto-exchanges\">Krypto Exchange</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"krypto-forex\">Krypto Forex</NavLink>\n            </li>\n          </ul>\n          <NavLink to=\"#\">\n            <span className=\"mdi mdi-power-plug\" /> Plugins\n            <span className=\"icon mdi mdi-arrow-right-drop-circle\" />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"trading\">\n            <span className=\"mdi mdi-buffer\" /> Trading\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"bank-accounts\">\n            <span className=\"mdi mdi-bank\" /> Bank accounts\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"search\">\n            <span className=\"mdi mdi-cloud-search-outline\" /> Search\n          </NavLink>\n        </li>\n       \n        <li>\n          <NavLink to=\"subscription\">\n            <span className=\"mdi mdi-drag-variant\" /> Subscriptions\n          </NavLink>\n        </li>\n     \n       \n        <li>\n          <NavLink to=\"additional-pages\">\n            <span className=\"mdi mdi-paperclip\" /> Additional pages\n          </NavLink>\n        </li>\n       \n        <li className=\"dropdown\">\n          <ul className=\"dropdown-menu last\">\n            <li>\n              <NavLink to=\"languages\">Languages</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"mail-settings\">Mail settings</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"templates\">Templates</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"cron\">CRON</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"api\">API</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"system\">System</NavLink>\n            </li>\n          </ul>\n          <NavLink to=\"#\">\n            <span className=\"mdi mdi-server\" /> Advanced\n            <span className=\"icon mdi mdi-arrow-right-drop-circle\" />\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default AdminSidebar;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/EditAutotradeModal.js",["827"],"import React, { useState } from \"react\";\nimport { Modal, Button, message, Spin, Space } from \"antd\";\nimport axios from \"axios\";\n\nconst EditAutoTrade = ({ children, id, callback }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [userName, setuserName] = useState(\"\");\n  const [profitPercentage, setprofitPercentage] = useState(\"\");\n  const [subscriptionFee, setsubscriptionFee] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getsingleTrade = (_id) => {\n    setLoading(true);\n    axios\n      .get(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade/${_id}`)\n      .then(\n        (response) => {\n          setLoading(false);\n          console.log(response.data);\n          setuserName(response.data.userName);\n          setprofitPercentage(response.data.profitPercentage);\n          setsubscriptionFee(response.data.subscriptionFee);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    getsingleTrade(id);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const EditTrade = (_id) => {\n    let data = {\n      subscriptionFee: subscriptionFee,\n      profitPercentage: profitPercentage,\n      userName: userName,\n    };\n\n    axios\n      .put(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/copytrade/${_id}`, data)\n      .then(\n        (response) => {\n          handleCancel();\n          message.success(\"successfully updated auto-trade\");\n          callback();\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error updated auto-trade\");\n        }\n      );\n  };\n  return (\n    <>\n      <span type=\"primary\" onClick={showModal}>\n        {children}\n      </span>\n      <Modal\n        title=\"Edit Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        {loading ? (\n          <Space size=\"middle\">\n            <Spin size=\"large\" />\n          </Space>\n        ) : (\n          <div className=\"new_pdiv\">\n            <div className=\" newpublic-card\">\n              <div>\n                <div>\n                  <h4>Username :</h4>\n                  <input\n                    className=\"dash-input\"\n                    type=\"text\"\n                    name=\"text\"\n                    value={userName}\n                    onChange={(e) => setuserName(e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <h4>profit : </h4>\n                  <input\n                    className=\"dash-input\"\n                    type=\"number\"\n                    name=\"text\"\n                    value={profitPercentage}\n                    onChange={(e) => setprofitPercentage(e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <h4>Subscription: </h4>\n                  <input\n                    className=\"dash-input\"\n                    type=\"number\"\n                    name=\"text\"\n                    value={subscriptionFee}\n                    onChange={(e) => setsubscriptionFee(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"save-btn w-100\">\n                <button onClick={() => EditTrade(id)}>Update</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default EditAutoTrade;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Header/Header.js",[],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Footer/Footer.js",["828","829","830"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  const [privacyPolicyLink, setprivacyPolicyLink] = useState(\"\");\n  const [termsOfServicesLink, settermsOfServicesLink] = useState(\"\");\n  const [Title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/site\").then(\n      (res) => {\n        settermsOfServicesLink(res.data.termsOfServicesLink);\n        setprivacyPolicyLink(res.data.privacyPolicyLink);\n        setTitle(res.data.siteTitle);\n\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  });\n  \n  return (\n    <>\n      <div className=\"my-5 pb-2\"><hr/></div>\n      <div className=\"w-50 mx-auto pb-4\">\n        <div \n          className=\"risk-taking text-left\" \n          style={{\n            padding: \"16px 30px\"\n          }}\n        >\n          <p className=\"mb-0\">Risk Warning</p>\n          <div \n            className=\"text-left\" \n            style={{\n              width: \"auto\"\n            }}\n          >\n            <span>\n              The Financial Products offered by the company include Contracts for Difference ('CFDs') and other complex financial products. \n              Trading CFDs carries a high level of risk since leverage can work both to your advantage and disadvantage. \n              As a result, CFDs may not be suitable for all investors because it is possible to lose all of your invested capital. \n              You should never invest money that you cannot afford to lose. Before trading in the complex financial products offered, \n              please ensure to understand the risks involved.\n            </span>\n          </div>\n        </div>\n        <p className=\"exclusive text-left pb-5\">\n          You are granted limited non-exclusive non-transferable rights to use the IP provided \n          on this website for personal and non-commercial purposes in relation to the services offered \n          on the Website only.\n        </p>\n      </div>\n      <div class=\"form__footer py-1 px-4\">\n        <div class=\"d-flex align-items-center justify-content-between\">\n          <div class=\"leftlinks\">\n            <a href={termsOfServicesLink}  target='_blank' className=\"pl-2\">\n              Terms of Service\n            </a>\n            <span class=\"separator\"></span>\n            <a href={privacyPolicyLink} target='_blank' className=\"pl-2\">\n              Privacy Policy\n            </a>\n          </div>\n          <div>\n            <p class=\"mb-0\">{Title}&nbsp; &copy; Copyright 2021 &nbsp;</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/CountryList/CountryList.js",[],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/ImageCarousel/ImageCarousel.js",["831","832","833"],"import React from \"react\";\nimport { Carousel } from 'react-bootstrap';\nimport imageOne from \"../../AccountsAsset/images/1.jpg\";\nimport imageTwo from \"../../AccountsAsset/images/2.jpg\";\nimport imageThree from \"../../AccountsAsset/images/3.jpg\";\nimport \"./ImageCarousel.css\";\n\nexport default function ImageCarousel(props) {\n    let web  = props.web \n   \n    return(\n        <>\n            <Carousel controls={false}>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src={web && web.loginCarouselImage1}\n                        alt=\"First slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src={web && web.loginCarouselImage2}\n                        alt=\"Second slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src={web && web.loginCarouselImage3}\n                        alt=\"Third slide\"\n                    />\n                </Carousel.Item>\n            </Carousel>\n            <div className=\"overlay\"></div>\n        </>\n    );\n}","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/EditCopyTrade.js",["834","835","836","837","838","839"],"import React, { useState } from \"react\";\nimport { Modal, Button, message, Spin, Space } from \"antd\";\nimport axios from \"axios\";\nimport { DatePicker } from 'antd';\nimport { Container, Card, Form, Row, Col, Table } from \"react-bootstrap\";\n\nconst EditAutoCopyTrade = ({ children, id, callback }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [profitLoss, setprofitLoss] = useState(null);\n  const [market, setmarket] = useState(\"\");\n  const [amount, setamount] = useState(0);\n  const [assets, setassets] = useState(\"\");\n  const [scheduledTime, setscheduledTime] = useState(\"\");\n  const [checkDate, setcheckDate]=useState(false)\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading]=useState(false)\n\n \n  const onChangeDate=(value, dateString)=> {\n    console.log('Selected Time');\n    setcheckDate(false)\n    // console.log('Formatted Selected Time: ', dateString);\n  \n  }\n  const onOkDate=(value)=> {\n    setscheduledTime(value._d)\n  }\n\n  const getsingleTrade = (_id) => {\n    setLoading(true);\n    axios\n      .get(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/single/${_id}`)\n      .then(\n        (response) => {\n          setLoading(false);\n          setprofitLoss(response.data.profitLoss);\n          setmarket(response.data.market);\n          setamount(response.data.amount);\n          setassets(response.data.assets);\n          setscheduledTime(response.data.scheduledTime);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    getsingleTrade(id);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const EditTrade = (_id) => {\n    setBtnLoading(true)\n    let data = {\n        profitLoss:profitLoss,\n        market:market,\n        amount:amount,\n        assets:assets,\n        scheduledTime:scheduledTime,\n    };\n\n    axios\n      .put(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/autocopytrade/updatetrade/${_id}`, data)\n      .then(\n        (response) => {\n          handleCancel();\n          message.success(\"successfully updated auto-trade\");\n          setBtnLoading(false)\n          callback();\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error updated auto-trade\");\n        }\n      );\n  };\n  return (\n    <>\n      <span type=\"primary\" onClick={showModal}>\n        {children}\n      </span>\n      <Modal\n        title=\"Edit Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        {loading ? (\n          <Space size=\"middle\">\n            <Spin size=\"large\" />\n          </Space>\n        ) : (\n          <div className=\"new_pdiv\">\n            <Form className=\"user-form\">\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">Amount</Form.Label>\n                                          <Form.Control type=\"number\" \n                                             onChange={e=>setamount(e.target.value)}\n                                             value={amount}\n                                          />\n                                        </Form.Group>\n                                        <Row>\n                                          <Col md={6}>\n                                            <Form.Check\n                                             onChange={e=>setprofitLoss(e.target.checked)}\n                                              type=\"radio\"\n                                              label=\"Profit\"\n                                              id=\"default-radio\"\n                                              name=\"profitloss\"\n                                             \n                                            //   onChange={e=>this.setState({ profit:e.target.checked})}\n                                             checked={profitLoss}\n                                             defaultChecked={profitLoss}\n                                          />\n                                            \n                                          </Col>\n                                          <Col md={6}>\n                                            <Form.Check\n                                            // onChange={e=>this.setState({ Loss:e.target.checked})}\n\n                                              type=\"radio\"\n                                              label=\"Loss\"\n                                              id=\"default-radio\"\n                                              name=\"profitloss\"\n                                              // checked={this.state.Loss}\n                                            />\n                                          </Col>\n                                        </Row>\n                                        <Form.Group className=\"d-flex align-items-center mt-3\">\n                                          <Form.Label htmlFor=\"markets\" className=\"mr-3\">\n                                            Markets\n                                          </Form.Label>\n                                          <Form.Control\n                                            as=\"select\"\n                                            id=\"markets\"\n                                            custom\n                                            onChange={e=>setmarket(e.target.value)}\n                                            value={market}\n                                            defaultValue={market}\n                                          >\n                                            <option>Choose...</option>\n                                            <option value=\"stocks\">Stocks</option>\n                                            <option value=\"forex\">Forex</option>\n                                            <option value=\"indices\">Indices</option>\n                                            <option value=\"commodities\">Commodities</option>\n                                            <option value=\"cryptocurrency\">Cryptocurrency</option>\n                                          </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">Assets</Form.Label>\n                                          <Form.Control type=\"text\" \n                                             onChange={e=>setassets(e.target.value)}\n                                             value={assets}/>\n                                        </Form.Group>\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">Time</Form.Label>\n                                          <Row>\n                                            <Col md={6}>\n                                              {/* <Form.Check\n                                                type=\"radio\"\n                                                label=\"Schedule\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                              /> */}\n                                              <DatePicker showTime onChange={onChangeDate} onOk={onOkDate} />\n\n                                            </Col>\n                                            <Col md={6}>\n                                              <Form.Check\n                                                type=\"radio\"\n                                                label=\"Now\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                                onChange={(e)=>(setcheckDate(e.target.checked),setscheduledTime(e.target.checked?new Date():null))}\n                                            \n                                              />\n                                            </Col>\n                                          </Row>\n                                        </Form.Group>\n                                        <div className=\"text-right\">\n                                          <Button type=\"primary\" type=\"button\" onClick={()=>( EditTrade (id)\n                                          )}>{btnLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Applying...</> : \"Apply\"}</Button>\n                                        </div>\n                                      </Form>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default EditAutoCopyTrade;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/PaymentDetailsPopOver.js",["840","841"],"import { Popover, Button } from 'antd';\nimport React from \"react\"\n\nconst PaymentDetails =(props)=>{\n    const content = (\n        <div style={{maxWidth:\"450px\"}}> \n\n          {props&&props.details&&props.details.method==\"Card Deposit\"?\n           <div  className=\"shadowed\">\n\n           <div className=\"dash-row dash-row-centralized\">\n             <div style={{ width: '50%', textAlign: 'left' }}>Card Bearer Details</div>\n             <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n             <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Card Holder Name</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.cardName}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Card Number</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.cardNumber}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>CVV</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.cardCvv}</div>\n               </div>\n\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Expiry Month</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.cardMonth}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Expiry Year</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.cardYear}</div>\n               </div>\n               {props.details.homeAddress&&<div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Home Address</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.homeAddress}</div>\n               </div>}\n               {props.details.yourCountry&&<div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Country</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.yourCountry}</div>\n               </div>}\n               {props.details.yourState&&<div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>City</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.yourState}</div>\n               </div>}\n               {props.details.zipCode&&<div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Zip Code</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.zipCode}</div>\n               </div>}\n             </div>\n\n           </div>\n           </div>\n\n\n         \n              \n          \n          :props&&props.details&&props.details.method==\"Cryptocurrency\"? <div className=\"shadowed\">\n\n          <div className=\"dash-row dash-row-centralized\">\n            <div style={{ width: '50%', textAlign: 'left' }}>Crypto Transfer</div>\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">  \n                <div style={{ width: '50%', textAlign: 'left' }}>Name</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details.name}</div>\n              </div>\n            </div>\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">  \n                <div style={{ width: '50%', textAlign: 'left' }}>Amount</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details.amount}</div>\n              </div>\n            </div>\n{/* \n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">    \n                <div style={{ width: '50%', textAlign: 'left' }}>crypto currency address</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].cryptoCurrencyAddress}</div>\n              </div>\n            </div> */}\n\n          </div>\n          </div>:null}\n        </div>\n       \n      );\n return(<>\n <Popover placement={\"right\"} content={content}  >\n    <Button type=\"link\">Show Details</Button>\n  </Popover>\n </>)   \n}\n\nexport default PaymentDetails","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/VerifyDetailsPopOver.js",["842"],"import { Popover, Button } from 'antd';\nimport React from \"react\"\n\nconst VerifyDetail  =(props)=>{\n    const content = (\n        <div style={{maxWidth:\"300px\"}}> \n        \n          {props&&props.details?\n           <div  className=\"shadowed\">\n\n           <div className=\"dash-row dash-row-centralized\">\n             <div style={{ width: '100%', textAlign: 'left' }}>User Verification Details</div>\n             <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>name</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.name}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Phone Number</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.phoneNumber}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>Address</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details.address}</div>\n               </div>\n             </div>\n\n           </div>\n           </div>\n\n\n         \n              \n          \n          :props&&props.details&&props.details.length>0&&props.details[0].tag==\"Cryptocurrency\"? <div className=\"shadowed\">\n\n          <div className=\"dash-row dash-row-centralized\">\n            <div style={{ width: '50%', textAlign: 'left' }}>Crypto Transfer</div>\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">  \n                <div style={{ width: '50%', textAlign: 'left' }}>name</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].name}</div>\n              </div>\n            </div>\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">  \n                <div style={{ width: '50%', textAlign: 'left' }}>crypto currency name</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].cryptoCurrencyName}</div>\n              </div>\n            </div>\n\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">    \n                <div style={{ width: '50%', textAlign: 'left' }}>crypto currency address</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].cryptoCurrencyAddress}</div>\n              </div>\n            </div>\n\n          </div>\n          </div>:null}\n        </div>\n       \n      );\n return(<>\n <Popover placement={\"bottom\"} content={content}  >\n    <Button type=\"link\">Show Details</Button>\n  </Popover>\n </>)   \n}\n\nexport default VerifyDetail ","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/WithdrawDetailsInfoPopOver.js",["843","844"],"import { Popover, Button } from 'antd';\nimport React from \"react\"\n\nconst WithdrawDetails =(props)=>{\n    const content = (\n        <div style={{maxWidth:\"300px\"}}> \n        \n          {props&&props.details&&props.details.length>0&&props.details[0].tag==\"Bank Transfer\"?\n           <div  className=\"shadowed\">\n\n           <div className=\"dash-row dash-row-centralized\">\n             <div style={{ width: '50%', textAlign: 'left' }}>Bank Transfer</div>\n             <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>name</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].name}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>bank name</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].bankName}</div>\n               </div>\n               <div className=\"dash-row dash-row-centralized\">\n                 <div style={{ width: '50%', textAlign: 'left' }}>bank account number</div>\n                 <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].bankCountrybankAccountNumber}</div>\n               </div>\n             </div>\n\n           </div>\n           </div>\n\n\n         \n              \n          \n          :props&&props.details&&props.details.length>0&&props.details[0].tag==\"Cryptocurrency\"? <div className=\"shadowed\">\n\n          <div className=\"dash-row dash-row-centralized\">\n            <div style={{ width: '50%', textAlign: 'left' }}>Crypto Transfer</div>\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">  \n                <div style={{ width: '50%', textAlign: 'left' }}>name</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].name}</div>\n              </div>\n            </div>\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">  \n                <div style={{ width: '50%', textAlign: 'left' }}>crypto currency name</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].cryptoCurrencyName}</div>\n              </div>\n            </div>\n\n            <div style={{ width: '100%', fontSize: '14px', padding: '10px 0' }} className=\"details\">\n              <div className=\"dash-row dash-row-centralized\">    \n                <div style={{ width: '50%', textAlign: 'left' }}>crypto currency address</div>\n                <div style={{ width: '50%', textAlign: 'right' }}>{props.details[0].cryptoCurrencyAddress}</div>\n              </div>\n            </div>\n\n          </div>\n          </div>:null}\n        </div>\n       \n      );\n return(<>\n <Popover placement={\"bottom\"} content={content}  >\n    <Button type=\"link\">Show Details</Button>\n  </Popover>\n </>)   \n}\n\nexport default WithdrawDetails","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Router.js",[],"/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/VerifyModal.js",["845","846","847","848","849","850"],"import { Modal, Button } from \"antd\";\nimport React from \"react\";\nconst VerifyDocModal = (props) => {\n  const [visible, setVisible] = React.useState(false);\n  const [imgVisible, setImgVisible] = React.useState(false);\n  const [pdocVisible, setPdocVisible] = React.useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setVisible(false);\n  };\n  const showModalImg = () => {\n    setImgVisible(true);\n  };\n\n  const handleOkImg = () => {\n    setImgVisible(false);\n  };\n\n  const showModalPdoc = () => {\n    setPdocVisible(true);\n  };\n\n  const handlePdoc = () => {\n    setPdocVisible(false);\n  };\n\n  return (\n    <>\n      <span>\n        <Button onClick={showModal} className=\"m-1\" type=\"link\" style={{    background:' #1d2435',\n    color: 'white'}}>\n          {props.text}\n        </Button>\n        <Button onClick={showModalImg} className=\"m-1\" type=\"link\" style={{    background:' #1d2435',\n    color: 'white'}}>\n          Passport Image\n        </Button>\n        <Button onClick={showModalPdoc} className=\"m-1\" type=\"link\" style={{    background:' #1d2435',\n    color: 'white'}}>\n          Proof Document\n        </Button>\n      </span>\n      <Modal\n        title={props.title}\n        visible={visible}\n        onCancel={handleOk}\n        footer={\n          <>\n            <Button type=\"ghost\" onClick={handleOk}>\n              Close\n            </Button>\n            <a href={props.file} target=\"_blank\" download=\"FieVerification\">\n              <Button type=\"primary\">Open full file</Button>\n            </a>\n          </>\n        }\n      >\n        <img style={{ width: \"100%\" }} src={props.file} />\n      </Modal>\n\n      <Modal\n        title={\"Passport Image\"}\n        visible={imgVisible}\n        onCancel={handleOkImg}\n        footer={\n          <>\n            <Button type=\"ghost\" onClick={handleOkImg}>\n              Close\n            </Button>\n            <a href={props.Img} target=\"_blank\" download=\"FieVerification\">\n              <Button type=\"primary\">Open full file</Button>\n            </a>\n          </>\n        }\n      >\n        <img style={{ width: \"100%\" }} src={props.Img} />\n      </Modal>\n\n      <Modal\n        title={\"Proof Document\"}\n        visible={pdocVisible}\n        onCancel={handlePdoc}\n        footer={\n          <>\n            <Button type=\"ghost\" onClick={handlePdoc}>\n              Close\n            </Button>\n            <a\n              href={props.proofDocument}\n              target=\"_blank\"\n              download=\"FieVerification\"\n            >\n              <Button type=\"primary\">Open full file</Button>\n            </a>\n          </>\n        }\n      >\n        <img style={{ width: \"100%\" }} src={props.proofDocument} />\n      </Modal>\n    </>\n  );\n};\n\nexport default VerifyDocModal;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/NavBar/NavBar.js",["851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900"],"import React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport {\n  Card,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Button,\n  Container,\n  Row,\n  Col,\n  Form,\n  Tabs,\n  Tab,\n  NavLink,\n  Spinner,\n} from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport axios from \"axios\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport NumberFormat from \"react-number-format\";\nimport coingate from \"../../AccountsAsset/images/coingate.png\";\n\nimport visacard from \"./../../AccountsAsset/images/visa.png\";\nimport mastercard from \"./../../AccountsAsset/images/mastercard.svg\";\nimport discover from \"./../../AccountsAsset/images/discover-network.jpeg\";\nimport americanexpress from \"./../../AccountsAsset/images/american-express.png\";\nimport nortonsecure from \"./../../AccountsAsset/images/norton-secure.png\";\nimport mcafeesecure from \"./../../AccountsAsset/images/mcafee-secure.jpeg\";\nimport securessl from \"./../../AccountsAsset/images/secure-ssl-encryption.png\";\nimport { countryList as profileCountryList } from \"../CountryList/CountryList\";\n\nimport { Upload, message as messageAnt, Button as ButtonAnt } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport {\n  X,\n  Plus,\n  CameraFill,\n  Pen,\n  PlusCircle,\n  WalletFill,\n  QuestionCircleFill,\n  ArrowRepeat,\n  ArrowClockwise,\n  GearFill,\n  BoxArrowDownRight,\n} from \"react-bootstrap-icons\";\nimport \"./NavBar.css\";\nimport transfer from \"./../../AccountsAsset/images/bank-transfer.svg\";\nimport crypto from \"./../../AccountsAsset/images/crypto-currencies.svg\";\nimport Notification from \"../Notification\";\nimport { message } from \"antd\";\nimport Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\nimport qrcode from \"./../../AccountsAsset/images/qrcode.png\";\nconst endpoint = \"https://prolivetrader-netbackend-vhgys.ondigitalocean.app\";\n\n/*  */\n\n//AntDesign upload function\n\n//add upload endpoint to action\nconst properties = {\n  name: \"file\",\n  action: \"\",\n  headers: {\n    authorization: \"authorization-text\",\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      messageAnt.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      messageAnt.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\nfunction NavBar(props) {\n  const history = useHistory();\n  const { location } = props;\n  const [credit, setCredit] = useState(false);\n  const [withdraw, setWithdraw] = useState(false);\n  const [personalData, setPersonalData] = useState(false);\n  const [support, setSupport] = useState(false);\n  const [withdrawSettings, setWithdrawSettings] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [bankTransfer, setBankTransfer] = useState(false);\n  const [notify, setNotify] = useState(false);\n  const [autoTrade, setAutoTrade] = useState(false);\n  const [cryptoCurrency, setCryptoCurrency] = useState(false);\n  const [yourName, setYourName] = useState(\"\");\n  const [yourEmailAddress, setYourEmailAddress] = useState(\"\");\n  const [yourLanguage, setYourLanguage] = useState(\"\");\n  const [yourCurrency, setYourCurrency] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardCvv, setCardCvv] = useState(\"\");\n  const [cardExpiryDate, setCardExpiryDate] = useState(\"\");\n  const [cardHolderName, setCardHolder] = useState(\"\");\n  const [cardYear, setCardYear] = useState(\"\");\n  const [cardDepositAmount, setCardDepositAmount] = useState(\"\");\n\n  const [profileCountry, setProfileCountry] = useState(\"Nigeria\");\n  const [yourLastName, setYourLastName] = useState(\"\");\n\n  const [cardCurrency, setCardCurrency] = useState(\"\");\n  const [bankName, setBankName] = useState(\"\");\n  const [bankAddress, setBankAddress] = useState(\"\");\n  const [bankCity, setBankCity] = useState(\"\");\n  const [bankCountry, setBankCountry] = useState(\"\");\n  const [accountNumber, setaccountNumber] = useState(\"\");\n  const [swiftCode, setSwiftCode] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [yourAddress, setYourAddress] = useState(\"\");\n  const [yourCountry, setYourCountry] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [yourState, setYourState] = useState(\"\");\n  const [userCountry, setUserCountry] = useState(\"\");\n  const [billingAddress, setBillingAddress] = useState(\"\");\n  const [yourCity, setYourCity] = useState(\"\");\n  const [cryptoAddress, setCryptoAddress] = useState(\"\");\n  const [cryptoCurrencyName, setCryptoCurrencyName] = useState(\"BTC\");\n  const [withValue, setWitValue] = useState(1000);\n  const [wallet, setWallet] = useState(0);\n  const [withdrawMethod, setWithdrawMethod] = useState(\"\");\n  const [wMethod, setWMethod] = useState(\"\");\n  const [methodDetails, setMethodDetails] = useState({});\n  const [userID, setUser] = useState(\"\");\n  const [payMethod, setPayMethod] = useState(\"\");\n  const [autoTradeStatus, setAutoTradeStatus] = useState(null);\n  const [payMethodBoth, setPayMethodBoth] = useState();\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [Img, setImg] = useState(\"\");\n  const [imgLoading, setSubmiImgtLoading] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [yourPhoneNumber, setYourPhoneNumber] = useState(\"\");\n  const [yourPassword, setYourPassword] = useState(\"\");\n  const [yourPasswordComfirm, setYourPasswordComfirm] = useState(\"\");\n  const [submitProfile, setSubmitProfile] = useState(\"\");\n  const [btcAmount, setBtcAmount] = useState(\"\");\n  const [stepOne, setStepOne] = useState(true);\n  const [stepTwo, setStepTwo] = useState(false);\n  const [stepThree, setStepThree] = useState(false);\n  const [stepFour, setStepFour] = useState(false);\n\n  const [uploadProof, setUploadProof] = useState(false);\n\n  const [stepFive, setStepFive] = useState(false);\n  const [creditStepOne, setCreditStepOne] = useState(true);\n  const [creditStepTwo, setCreditStepTwo] = useState(false);\n  const [creditStepThree, setCreditStepThree] = useState(false);\n  const [creditStepFour, setCreditStepFour] = useState(false);\n  const [creditStepFive, setCreditStepFive] = useState(false);\n  const options = useMemo(() => countryList().getData(), []);\n  const copyToClipboard = () => {\n    setCopied(true);\n  };\n\n  const [DPOEmail, setDPOEmail] = useState(\"\");\n  const [DPOPhone, setDPOPhone] = useState(\"\");\n  const [supportAddress, setsupportAddress] = useState(\"\");\n  const [supportMail, setsupportMail] = useState(\"\");\n  const [supportPhone, setsupportPhone] = useState(\"\");\n\n  const [siteUData, setData] = useState({});\n  useEffect(() => {\n    const res = axios.get(`${endpoint}/api/site`);\n    res.then((response) => {\n      setDPOPhone(response.data.DPOPhone);\n      setDPOEmail(response.data.DPOEmail);\n      setsupportAddress(response.data.supportAddress);\n      setsupportMail(response.data.supportMail);\n      setsupportPhone(response.data.supportPhone);\n    });\n  }, []);\n\n  useEffect(() => {\n    let getSiteData = async () => {\n      const res = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/site`\n      );\n      let siteData = await res.json();\n      setData(siteData);\n    };\n\n    getSiteData();\n  }, []);\n\n  useEffect(() => {\n    if (copied === true) {\n      message.success(\"Copied\");\n    }\n  }, [copied]);\n  const disableAutoTrade = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(`${endpoint}/api/profile/autoTrade`, {\n      id: userID,\n      autoTrade: false,\n      isTrading: false,\n    });\n\n    if (res.data) {\n      message.success(\"Auto trades has been disabled\");\n\n      setSubmitLoading(false);\n    }\n  };\n\n  const autoTradeEnable = async () => {\n    setSubmitLoading(true);\n    const res = await axios.put(`${endpoint}/api/profile/autoTrade`, {\n      id: userID,\n      autoTrade: true,\n      isTrading: false,\n    });\n\n    if (res.data) {\n      message.success(\"Auto trades has been enabled\");\n      setAutoTrade(!autoTrade);\n      setSubmitLoading(false);\n    }\n  };\n\n  const handleAmount = (e) => {\n    e.preventDefault();\n    if (btcAmount !== \"\") {\n      setStepOne(false);\n      setStepTwo(true);\n    }\n  };\n\n  const handleNext = (e) => {\n    e.preventDefault();\n    setStepTwo(false);\n    setStepThree(true);\n  };\n\n  const showProofUpload = (e) => {\n    e.preventDefault();\n    setStepThree(false);\n    setUploadProof(true);\n  };\n\n  const handleConfirmation = (e) => {\n    e.preventDefault();\n    setUploadProof(false);\n    setStepFour(true);\n  };\n\n  const handleCreditStepOne = (e) => {\n    e.preventDefault();\n    setCreditStepOne(false);\n    setCreditStepTwo(true);\n  };\n\n  const handleCreditStepTwo = (e) => {\n    e.preventDefault();\n    setCreditStepTwo(false);\n    setCreditStepThree(true);\n  };\n\n  const handleCreditStepThree = (e) => {\n    e.preventDefault();\n    setCreditStepThree(false);\n    setCreditStepFour(true);\n  };\n\n  const handleCreditStepFour = (e) => {\n    e.preventDefault();\n    setCreditStepFour(false);\n    setCreditStepFive(true);\n  };\n\n  const goBackToStepOne = () => {\n    setStepTwo(false);\n    setStepOne(true);\n  };\n\n  const goBackToStepTwo = () => {\n    setStepThree(false);\n    setStepTwo(true);\n  };\n\n  const goBackToStepThree = () => {\n    setUploadProof(false);\n    setStepThree(true);\n  };\n\n  const goBackToUpload = () => {\n    setStepFour(false);\n    setUploadProof(true);\n  };\n\n  const goBackToCreditStepOne = () => {\n    setCreditStepTwo(false);\n    setCreditStepOne(true);\n  };\n\n  const goBackToCreditStepTwo = () => {\n    setCreditStepThree(false);\n    setCreditStepTwo(true);\n  };\n\n  const goBackToCreditStepThree = () => {\n    setCreditStepFour(false);\n    setCreditStepThree(true);\n  };\n\n  const goBackToCreditStepFour = () => {\n    setCreditStepFive(false);\n    setCreditStepFour(true);\n  };\n\n  // handles credit card month limit\n  function limit(val, max) {\n    if (val.length === 1 && val[0] > max[0]) {\n      val = \"0\" + val;\n    }\n\n    if (val.length === 2) {\n      if (Number(val) === 0) {\n        val = \"01\";\n\n        //this can happen when user paste number\n      } else if (val > max) {\n        val = max;\n      }\n    }\n\n    return val;\n  }\n\n  const cardExpiry = (val) => {\n    let month = limit(val.substring(0, 2), \"12\");\n    let year = val.substring(2, 4);\n\n    return month + (year.length ? \"/\" + year : \"\");\n  };\n  // handles credit card month limit\n\n  useEffect(() => {\n    setImg(Img);\n  }, [Img]);\n  useEffect(() => {\n    switch (withdrawMethod) {\n      case withdrawMethod:\n        console.log(\"withdraw\", payMethod[withdrawMethod]);\n\n        setWMethod(\n          payMethod[withdrawMethod] && payMethod[withdrawMethod].tag\n            ? payMethod[withdrawMethod].tag\n            : null\n        );\n        setMethodDetails(payMethod[withdrawMethod]);\n\n        break;\n      default:\n        setWMethod(\n          payMethod[withdrawMethod].tag === undefined\n            ? \"non was selected\"\n            : payMethod[withdrawMethod].tag\n        );\n        setMethodDetails(payMethod[withdrawMethod]);\n    }\n  }, [withdrawMethod]);\n\n  const saveCryptoCurrency = () => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/paymentDetails/${userID}`\n      );\n      let data = await response.json();\n      setPayMethod(data);\n    })();\n    let bankDetails = {\n      id: userID,\n      cryptoCurrencyName: cryptoCurrencyName,\n      cryptoCurrencyAddress: cryptoAddress,\n    };\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/usercryptodetails`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bankDetails),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your Crypto currency Details saved successful\");\n          setCryptoCurrency(false);\n        } else message.error(\"problems saving cryptocurrency details, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  const saveBankDetails = () => {\n    (async () => {\n      let response = await fetch(\n        `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/paymentDetails/${userID}`\n      );\n      let data = await response.json();\n      // setPayMethod(data)\n      let a = data.banks;\n      let b = data.crypto;\n      setPayMethodBoth(data);\n      // console.log(a.concat(b))\n      setPayMethod(a.concat(b));\n    })();\n    //08035011120\n    let bankDetails = {\n      id: userID,\n      bankName: bankName,\n      bankCity: bankCity,\n      bankCountrybankAccountNumber: bankCountry,\n      bankSwiftCode: swiftCode,\n      userBankfULLName: fullName,\n      userAddress: yourAddress,\n      userCity: yourCity,\n      userCountry: yourCountry,\n    };\n\n    fetch(\n      `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/userbankdetails`,\n      {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bankDetails),\n      }\n    )\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your Bank Details saved successful\");\n          setBankTransfer(false);\n        } else message.error(\"problems saving bank details, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  const percentToGet = 3;\n  const percent = (percentToGet * withValue) / 100;\n  const amount = withValue - percent;\n\n  const subWithdraw = () => {\n    let withdraw = {\n      id: userID,\n      currency: cardCurrency,\n      fees: percent,\n      method: wMethod,\n      amount: amount,\n      currency: yourCountry,\n      methodDetails: methodDetails,\n    };\n\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/withdraw`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(withdraw),\n    })\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your withdarwal request was successful\");\n          setWithdraw(false);\n        } else message.error(\"Your withdrawal request was not successful, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n  const BuyCoin = () => {\n    let deposit = {\n      id: userID,\n      fee: 0.0,\n      method: \"Cryptocurrency\",\n      amount: btcAmount,\n      name: yourName,\n    };\n\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(deposit),\n    })\n      .then(function (res) {\n        if (res.ok) {\n          setStepTwo(false);\n          //message.success(\"Your deposit was successful\");\n          setStepFive(true);\n          setCredit(false);\n        } else message.error(\"Your deposit was not successful, try again\");\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n\n  const subDeposite = () => {\n    let deposit = {\n      id: userID,\n      fee: 0.0,\n      method: \"Card Deposit\",\n      cardNumber: cardNumber,\n      cardCvv: cardCvv,\n      cardMonth: `${cardExpiryDate[0]}${cardExpiryDate[1]}`,\n      cardYear: `20${cardExpiryDate[3]}${cardExpiryDate[4]}`,\n      amount: parseInt(cardDepositAmount),\n      cardName: cardHolderName,\n      zipCode: zipCode,\n      homeAddress: billingAddress,\n      yourCountry: userCountry.label,\n      yourState: yourState,\n    };\n\n    fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/deposit`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(deposit),\n    })\n      .then(function (res) {\n        if (res.ok) {\n          message.success(\"Your deposite was successful\");\n          setCredit(false);\n        } else {\n          message.error(\"Your deposit was not successful, try again\");\n          console.log(res);\n        }\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"good\", data);\n        } else {\n          console.log(\"bad\", data);\n        }\n      });\n  };\n  useEffect(() => {\n    if (props && props.user) {\n      (async () => {\n        let response = await fetch(\n          `https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/paymentDetails/${props.user.user.user._id}`\n        );\n        let data = await response.json();\n        // console.log(\"payment\", data);\n        let a = data.banks;\n        let b = data.crypto;\n        setPayMethodBoth(data);\n        setPayMethod(a.concat(b));\n      })();\n      setYourName(\n        props.user.user.user.name === undefined\n          ? props.user.user.user.user.name\n          : props.user.user.user.name\n      );\n      setYourEmailAddress(\n        props.user.user.user.email === undefined\n          ? props.user.user.user.user.email\n          : props.user.user.user.email\n      );\n      setYourCurrency(\n        props.user.user.user.currency === undefined\n          ? props.user.user.user.user.currency\n          : props.user.user.user.currency\n      );\n      // setYourAddress(props.user.user.user.address===undefined?props.user.user.user.user.address:props.user.user.user.address)\n\n      setWallet(\n        props.user.user.user.wallet === undefined\n          ? new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n          : new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n      );\n      setUser(\n        props.user.user.user._id === undefined\n          ? props.user.user.user.user._id\n          : props.user.user.user._id\n      );\n      setAutoTradeStatus(\n        props.user.user.user.autoTrade === undefined\n          ? props.user.user.user.user.autoTrade\n          : props.user.user.user.autoTrade\n      );\n\n      setImg(\n        props.user.user.user.img === undefined\n          ? props.user.user.user.user.img\n          : props.user.user.user.img\n      );\n\n      setYourPhoneNumber(\n        props.user.user.user.phoneNumber === undefined\n          ? props.user.user.user.user.phoneNumber\n          : props.user.user.user.phoneNumber\n      );\n\n      // setYourPassword(\n      //   props.user.user.user.newPassword === undefined\n      //     ? props.user.user.user.user.newPassword\n      //     : props.user.user.user.newPassword\n      // );\n    }\n  }, []);\n  const openBankTransfer = () => {\n    setWithdrawSettings(false);\n    setBankTransfer(!bankTransfer);\n  };\n\n  const openCrypto = () => {\n    setWithdrawSettings(false);\n    setCryptoCurrency(!cryptoCurrency);\n  };\n\n  const checkMaxLength = (object) => {\n    if (object.target.value.length > object.target.maxLength) {\n      object.target.value = object.target.value.slice(\n        0,\n        object.target.maxLength\n      );\n    }\n  };\n\n  const handleImageChange = (e) => {\n    e.preventDefault();\n    if (e) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onloadend = async () => {\n        setSubmiImgtLoading(true);\n        const res = await axios.put(`${endpoint}/api/profile/passport`, {\n          id: userID,\n          Img: reader.result,\n        });\n        if (res.data) {\n          setImg(res.data.img);\n          message.success(\"Your image was successfully updated\");\n          setSubmiImgtLoading(false);\n        }\n      };\n    }\n  };\n  const updateProfile = () => {\n    if (yourPassword !== yourPasswordComfirm) {\n      message.error(\"Password must match\");\n    } else\n      fetch(`https://prolivetrader-netbackend-vhgys.ondigitalocean.app/api/profile/update/user`, {\n        mode: \"cors\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: userID,\n          name: yourName,\n          email: yourEmailAddress,\n          password: yourPassword,\n          phoneNumber: yourPhoneNumber,\n        }),\n      })\n        .then(function (res) {\n          if (res.ok) {\n            message.success(\"Profile was successfully updated\");\n            setPersonalData(false);\n          } else message.error(\"peoblems updating profile\");\n        })\n        .then((data) => {\n          if (data) {\n            console.log(\"good\", data);\n          } else {\n            console.log(\"bad\", data);\n          }\n        });\n  };\n\n  //logout\n  const handleLogout = () => {\n    console.log(\"logout\");\n\n    history.push(\"/\");\n  };\n  let web = props.web;\n\n  const addComma = (value) => {\n    if (value !== null && value !== undefined) {\n      return new Intl.NumberFormat('en-US').format(value);\n    }\n    return;\n  };\n\n  return (\n    <>\n      <Navbar variant=\"dark\">\n        <Navbar.Brand>\n          <img\n            style={{ width: \" 100%\", height: \"4.5ch\" }}\n            src={\n              web ? (web.useWhiteLogo ? web.siteLogoWhite : web.siteLogo) : \"\"\n            }\n            alt=\"logo\"\n          />\n        </Navbar.Brand>\n        <Nav activeKey={location.pathname} className=\"mr-3 options-nav\">\n          <div className=\"d-flex \" onClick={props.closeForex}>\n            {props.btcP ? (\n              <Nav.Link>\n                <div\n                  className={\n                    props.bitP\n                      ? props.activeS === props.bitP.symbol\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={props.handleViewUpdate(\n                    props.bitP ? { ...props.bitP, tag: \"Crypto\" } : []\n                  )}\n                >\n                  <div className=\"icon-wrapper mr-1\">\n                    <X onClick={props.closeBitP} />\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                    <img\n                      style={{\n                        width: \"4vh\",\n                        height: \"3.4vh\",\n                        marginTop: \"-11%\",\n                        borderRadius: \"30px\",\n                      }}\n                      src={`https://cryptologos.cc/logos/bitcoin-btc-logo.png`}\n                    />\n                    <div style={{ marginLeft: \"5%\" }}>\n                      <span className=\"name\">BTCUSD</span>\n                      <span className=\"currency\">Crypto</span>\n                    </div>\n                  </div>\n                </div>\n              </Nav.Link>\n            ) : (\n              \"\"\n            )}\n            {props.gasP ? (\n              <Nav.Link>\n                <div\n                  className={\n                    props.gasP\n                      ? props.activeS === \"GAS\"\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={props.handleViewUpdate(\n                    props.tslaP\n                      ? {\n                          symbol: \"GAS\",\n                          price: props.tslaP.price,\n                          tag: \"Commodity\",\n                        }\n                      : []\n                  )}\n                >\n                  <div className=\"icon-wrapper mr-1\">\n                    <X onClick={props.closeGasP} />\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                    <img\n                      style={{\n                        width: \"4vh\",\n                        height: \"3.4vh\",\n                        marginTop: \"-11%\",\n                        borderRadius: \"30px\",\n                      }}\n                      src={`https://st2.depositphotos.com/4160903/6037/i/950/depositphotos_60374771-stock-photo-golden-shiny-dollar-symbol-isolated.jpg`}\n                    />\n                    <div style={{ marginLeft: \"5%\" }}>\n                      <span className=\"name\">GAS</span>\n                      <span className=\"currency\">Commodity</span>\n                    </div>\n                  </div>\n                </div>\n              </Nav.Link>\n            ) : (\n              \"\"\n            )}\n            {props.ethP ? (\n              <Nav.Link>\n                <div\n                  className={\n                    props.ethP\n                      ? props.activeS === props.ethP.symbol\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={props.handleViewUpdate(\n                    props.ethP ? { ...props.ethP, tag: \"Crypto\" } : []\n                  )}\n                >\n                  <div className=\"icon-wrapper mr-1\">\n                    <X onClick={props.closeEthp} />\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                    <img\n                      style={{\n                        width: \"4vh\",\n                        height: \"3.4vh\",\n                        marginTop: \"-11%\",\n                        borderRadius: \"30px\",\n                      }}\n                      src={`https://cryptologos.cc/logos/ethereum-eth-logo.png`}\n                    />\n                    <div style={{ marginLeft: \"5%\" }}>\n                      <span className=\"name\">ETHUSD</span>\n                      <span className=\"currency\">Crypto</span>\n                    </div>\n                  </div>\n                </div>\n              </Nav.Link>\n            ) : (\n              \"\"\n            )}\n\n            {props.tslaP ? (\n              <Nav.Link>\n                <div\n                  className={\n                    props.tslaP\n                      ? props.activeS === \"TSLA\"\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={props.handleViewUpdate(\n                    props.tslaP\n                      ? {\n                          symbol: \"TSLA\",\n                          price: props.tslaP.price,\n                          tag: \"Stock\",\n                        }\n                      : []\n                  )}\n                >\n                  <div className=\"icon-wrapper mr-1\">\n                    <X onClick={props.closeTslaP} />\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                    <img\n                      style={{\n                        width: \"4vh\",\n                        height: \"3.4vh\",\n                        marginTop: \"-11%\",\n                        borderRadius: \"30px\",\n                      }}\n                      src={`https://storage.googleapis.com/iex/api/logos/TSLA.png`}\n                    />\n                    <div style={{ marginLeft: \"5%\" }}>\n                      <span className=\"name\">TSLA</span>\n                      <span className=\"currency\">Stock</span>\n                    </div>\n                  </div>\n                </div>\n              </Nav.Link>\n            ) : (\n              \"\"\n            )}\n            {props.aaplP ? (\n              <Nav.Link>\n                <div\n                  className={\n                    props.aaplP\n                      ? props.activeS === \"AAPL\"\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={props.handleViewUpdate(\n                    props.tslaP\n                      ? {\n                          symbol: \"AAPL\",\n                          price: props.aaplP.price,\n                          tag: \"Stock\",\n                        }\n                      : []\n                  )}\n                >\n                  <div className=\"icon-wrapper mr-1\">\n                    <X onClick={props.closeAaplP} />\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                    <img\n                      style={{\n                        width: \"4vh\",\n                        height: \"3.4vh\",\n                        marginTop: \"-11%\",\n                        borderRadius: \"30px\",\n                      }}\n                      src={`https://storage.googleapis.com/iex/api/logos/AAPL.png`}\n                    />\n                    <div style={{ marginLeft: \"5%\" }}>\n                      <span className=\"name\">AAPL</span>\n                      <span className=\"currency\">Stock</span>\n                    </div>\n                  </div>\n                </div>\n              </Nav.Link>\n            ) : (\n              \"\"\n            )}\n\n            {props.addCurrentItemC.length > 0\n              ? props.addCurrentItemC.map((item, i) => (\n                  <Nav.Link>\n                    <div\n                      className={\n                        props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={props.handleViewUpdate(item)}\n                    >\n                      <div className=\"icon-wrapper mr-1\">\n                        <X onClick={props.handleRC(item)} />\n                      </div>\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          src={`https://cryptologos.cc/logos/${\n                            item.symbol === \"ETHUSD\"\n                              ? \"ethereum\"\n                              : item.symbol === \"BTCUSD\"\n                              ? \"bitcoin\"\n                              : item.symbol === \"LTCUSD\"\n                              ? \"litecoin\"\n                              : \"\"\n                          }-${item.symbol.slice(0, 3).toLowerCase()}-logo.png`}\n                          alt=\"\"\n                          style={{\n                            width: \"4vh\",\n                            height: \"3.4vh\",\n                            marginTop: \"-11%\",\n                            borderRadius: \"30px\",\n                          }}\n                        />\n                        <div style={{ marginLeft: \"5%\" }}>\n                          <span className=\"name\">BTCUSD</span>\n                          <span className=\"currency\">Crypto</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Nav.Link>\n                ))\n              : \"\"}\n            {props.addCurrentItemFx.length > 0\n              ? props.addCurrentItemFx.map((item, i) => (\n                  <Nav.Link>\n                    <div\n                      className={\n                        props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={props.handleViewUpdate(item)}\n                    >\n                      <div className=\"icon-wrapper mr-1\">\n                        <X onClick={props.handleRFx(item)} />\n                      </div>\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          style={{\n                            width: \"4vh\",\n                            height: \"3.4vh\",\n                            marginTop: \"-11%\",\n                            borderRadius: \"30px\",\n                          }}\n                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                        />\n                        <div style={{ marginLeft: \"5%\" }}>\n                          <span className=\"name\">{item.symbol}</span>\n                          <span className=\"currency\">Forex</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Nav.Link>\n                ))\n              : \"\"}\n\n            {props.addCurrentItemIex.length > 0\n              ? props.addCurrentItemIex.map((item, i) => (\n                  <Nav.Link>\n                    <div\n                      className={\n                        props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={props.handleViewUpdate(item)}\n                    >\n                      <div className=\"icon-wrapper mr-1\">\n                        <X onClick={props.handleRIex(item)} />\n                      </div>\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          style={{\n                            width: \"4vh\",\n                            height: \"3.4vh\",\n                            marginTop: \"-11%\",\n                            borderRadius: \"30px\",\n                          }}\n                          src={`https://storage.googleapis.com/iex/api/logos/${item.symbol}.png`}\n                        />\n                        <div style={{ marginLeft: \"5%\" }}>\n                          <span className=\"name\">{item.symbol}</span>\n                          <span className=\"currency\">Stock</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Nav.Link>\n                ))\n              : \"\"}\n\n            {props.addCurrentItemCum.length > 0\n              ? props.addCurrentItemCum.map((item, i) => (\n                  <Nav.Link>\n                    <div\n                      className={\n                        props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={props.handleViewUpdate(item)}\n                    >\n                      <div className=\"icon-wrapper mr-1\">\n                        <X onClick={props.handleRCum(item)} />\n                      </div>\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          style={{\n                            width: \"4vh\",\n                            height: \"3.4vh\",\n                            marginTop: \"-11%\",\n                            borderRadius: \"30px\",\n                          }}\n                          src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                        />\n                        <div style={{ marginLeft: \"5%\" }}>\n                          <span className=\"name\">{item.symbol}</span>\n                          <span className=\"currency\">Commodities</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Nav.Link>\n                ))\n              : \"\"}\n          </div>\n\n          {(props.btcP ? 1 : 0) +\n            (props.gasP ? 1 : 0) +\n            (props.ethP ? 1 : 0) +\n            (props.tslaP ? 1 : 0) +\n            (props.aaplP ? 1 : 0) +\n            props.addCurrentItemC.length +\n            props.addCurrentItemFx.length +\n            props.addCurrentItemIex.length +\n            props.addCurrentItemCum.length ===\n          5 ? (\n            <Button\n              variant=\"link\"\n              className=\"btn-plus\"\n              onClick={() => message.error(\"Close some Asset Tabs\")}\n            >\n              <Plus />\n            </Button>\n          ) : (\n            <Button\n              variant=\"link\"\n              className=\"btn-plus\"\n              onClick={props.openForex}\n            >\n              <Plus />\n            </Button>\n          )}\n        </Nav>\n\n        <div onClick={props.closeForex} className=\"emptyDIV\"></div>\n\n        <Notification setNotify={setNotify} notify={notify} user={props.user} />\n        <Nav className=\"ml-auto align-items-center\" onClick={props.closeForex}>\n          <NavDropdown\n            title={\n              <div className=\"camera-wrapper\">\n                {/* <CameraFill /> */}\n                {props.user.user.user.verify ||\n                props.user.user.user.isPendingVerification ||\n                Img.length > 0 ? (\n                  <img src={Img} className=\"camera-wrapper\" />\n                ) : (\n                  <X />\n                )}\n              </div>\n            }\n            id=\"collasible-nav-dropdown\"\n          >\n            <div className=\"profile-wrapper\">\n              <h6 className=\"mb-1\">{yourName}</h6>\n              <p>{yourEmailAddress}</p>\n              <div className=\"tour-wrapper\">\n                <div className=\"d-flex\">\n                  <div></div>\n                  <div>\n                    <p className=\"mb-0 \">\n                      {props.user.user.user.isPendingVerification\n                        ? \"Kindly wait for verification feedback, to enable you perform your first trade\"\n                        : null}\n                      {props.user.user.user.verify == false &&\n                      props.user.user.user.isPendingVerification === false\n                        ? \"Kindly verify your account\"\n                        : null}\n                      {props.user.user.user.verify == true &&\n                      props.user.user.user.isPendingVerification === false\n                        ? \"You are verified\"\n                        : null}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <NavDropdown.Divider className=\"mt-3\" />\n              <p></p>\n              <div className=\"date-wrapper d-flex justify-content-between\">\n                <div>\n                  <span>Date Registered</span>\n                  <p>14 Feb 2021</p>\n                </div>\n                <div>\n                  <span>User ID</span>\n                  <p>93220945</p>\n                </div>\n              </div>\n              {props.user.user.user.verify ||\n              props.user.user.user.isPendingVerification ? (\n                <div className=\"verify ver \" onClick={props.openVer}>\n                  <a id=\"verify-me \" href=\"#\">\n                    Verified\n                  </a>\n                </div>\n              ) : (\n                <div className=\"verify ver redNavbar\" onClick={props.openVer}>\n                  <a id=\"verify-me \" href=\"#\">\n                    Not Verified\n                  </a>\n                </div>\n              )}\n            </div>\n\n            <div className=\"features-wrapper\">\n              {/* {imgLoading === false ? (\n                <div className=\"fileUpload1\">\n                  <CameraFill style={{ marginTop: \"2%\" }} className=\"mr-2\" />\n                  <input\n                    type=\"file\"\n                    className=\"upload1 input\"\n                    onChange={handleImageChange}\n                  />\n                  <span style={{ cursor: \"pointer\" }}>Upload Profile</span>\n                </div>\n              ) : (\n                <div class=\"fileUpload1\">\n                  <i className=\"fa fa-spin fa-spinner\"></i>\n                  <span>Upload Profile</span>\n                </div>\n              )} */}\n\n              <NavDropdown.Item onClick={() => setPersonalData(!personalData)}>\n                <Pen className=\"mr-2\" />\n                Personal Data\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setCredit(!credit)}>\n                <PlusCircle className=\"mr-2\" />\n                Deposit\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setWithdraw(!withdraw)}>\n                <WalletFill className=\"mr-2\" />\n                Withdraw Funds\n              </NavDropdown.Item>\n\n              <NavDropdown.Item\n                onClick={() => setWithdrawSettings(!withdrawSettings)}\n              >\n                <GearFill className=\"mr-2\" style={{ width: \"6rem\" }} />\n                Withdraw Settings\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={() => setSupport(!support)}>\n                <QuestionCircleFill className=\"mr-2\" />\n                Contact Support\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={handleLogout}>\n                <BoxArrowDownRight className=\"mr-2\" />\n                Logout\n              </NavDropdown.Item>\n            </div>\n          </NavDropdown>\n          <NavDropdown\n            title={\n              <div className=\"account-wrapper\">\n                <h6 className=\"mb-0\">\n                  $\n                  {new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                    \n                    ? new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                    : 0.0}\n                </h6>\n                {/* <p className=\"mb-0\">\n                  Total: ${props.totalUp.toString().slice(0, 8)}\n                </p> */}\n              </div>\n            }\n            id=\"collasible-nav-dropdown\"\n            className=\"ml-2 balance-wrapper\"\n          >\n            <div className=\"profile-wrapper\">\n              <h6 className=\"mb-1\">{props.user.user.user.name}</h6>\n              <p>{props.user.user.user.email}</p>\n              {/* <div className=\"tour-wrapper\">\n                <div className=\"d-flex\">\n                  <div></div>\n                  <div>\n                    <p className=\"mb-0\">\n                      Finish the guided tour to your first real trade\n                    </p>\n                  </div>\n                </div>\n              </div> */}\n              <NavDropdown.Divider className=\"mt-3\" />\n              <p></p>\n              <div className=\"date-wrapper d-flex justify-content-between\">\n                <div>\n                  <span>Date Registered</span>\n                  <p>14 Feb 2021</p>\n                </div>\n                <div>\n                  <span>User ID</span>\n                  <p>93220945</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"features-wrapper p-2 pt-3\">\n              <div className=\"d-flex justify-content-between mb-1\">\n                <div>\n                  <h6 className=\"pl-2\">MY BALANCES</h6>\n                </div>\n                <div>\n                  <p>Always show the \"Total\" amount</p>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between p-3 real-account\">\n                <div>\n                  <h6>REAL ACCOUNT</h6>\n                  <p className=\"amount mb-0\">\n                    $\n                    {new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                      ? new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                      : new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)}\n                  </p>\n                </div>\n                <div>\n                  <Button\n                    variant=\"secondary\"\n                    className=\"btn-deposit\"\n                    onClick={() => setCredit(!credit)}\n                  >\n                    Deposit\n                  </Button>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between p-3 practice-account\">\n                <div>\n                  <h6>\n                    Total ACCOUNT{\" \"}\n                    <span>\n                      = $\n                      {new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                        ? new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                        : new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)}\n                    </span>\n                  </h6>\n                  <p className=\"amount mb-0\">\n                    $\n                    {new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                      ? new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)\n                      : new Intl.NumberFormat('en-US').format(props.user.user.user.wallet)}\n                  </p>\n                </div>\n                <div>\n                  <Button\n                    variant=\"secondary\"\n                    className=\"btn-deposit\"\n                    onClick={() => setWithdraw(!credit)}\n                  >\n                    Withdraw\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </NavDropdown>\n          <Button\n            variant=\"outline-success d-flex align-items-center deposit ml-3 \"\n            onClick={() => setCredit(!credit)}\n          >\n            <ArrowRepeat className=\"mr-3\" />\n            Deposit\n          </Button>\n        </Nav>\n      </Navbar>\n\n      {credit ? (\n        <section className=\"credit-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"credit-modal\">\n            <div className=\"header\">Fund Your Wallet</div>\n            <div className=\"dash-row\">\n              <Tab.Container\n                defaultActiveKey=\"credit\"\n                id=\"uncontrolled-tab-example\"\n              >\n                <div className=\"sidebar\">\n                  <div className=\"links\">\n                    <Nav className=\"flex-column\">\n                      <Nav.Item>\n                        {web.masterCardStatus ? (\n                          <Nav.Link eventKey=\"credit\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  style={{\n                                    width: \"40px\",\n                                    paddingRight: \"15px\",\n                                  }}\n                                  src={mastercard}\n                                />\n                              </div>\n                              <div>\n                                <span className=\"font-size-15\">\n                                  Credit/Debit\n                                </span>\n                                <span className=\"font-size-10\">Instant</span>\n                              </div>\n                            </div>\n                          </Nav.Link>\n                        ) : (\n                          \"\"\n                        )}\n                      </Nav.Item>\n                      <Nav.Item>\n                        {web.bitCoinStatus ? (\n                          <Nav.Link eventKey=\"crypto\">\n                            <div className=\"dash-row dash-row-centralized\">\n                              <div>\n                                <img\n                                  style={{\n                                    width: \"40px\",\n                                    paddingRight: \"15px\",\n                                  }}\n                                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1200px-Bitcoin.svg.png\"\n                                />\n                              </div>\n                              <div>\n                                <span className=\"font-size-15\">Bitcoin</span>\n                                <span className=\"font-size-10\">Instant</span>\n                              </div>\n                            </div>\n                          </Nav.Link>\n                        ) : (\n                          \"\"\n                        )}\n                      </Nav.Item>\n                    </Nav>\n                  </div>\n                </div>\n                <div className=\"content\">\n                  <Tab.Content>\n                    {web.masterCardStatus ? (\n                      <Tab.Pane eventKey=\"credit\">\n                        {creditStepOne ? (\n                          <div\n                            className=\"process dash-row dash-row-centralized\"\n                            style={{\n                              justifyContent: \"space-around\",\n                              marginTop: \"15%\",\n                            }}\n                          >\n                            <h5 style={{ marginBottom: \"15%\", color: \"white\" }}>\n                              Please Specify the amount you would like to\n                              deposit into your account using your Credit Card\n                            </h5>\n                            <div\n                              className=\"currency\"\n                              style={{ display: \"none\" }}\n                            >\n                              <select\n                                value={cardCurrency}\n                                onChange={(e) => {\n                                  setCardCurrency(e.target.value);\n                                }}\n                              >\n                                <option value=\"USD\">$ USD</option>\n                              </select>\n                            </div>\n\n                            <div\n                              className=\"process dash-row dash-row-centralized\"\n                              style={{\n                                justifyContent: \"space-around\",\n                                marginTop: \"-30px\",\n                                width: \"100%\",\n                              }}\n                            >\n                              <Col md={6} className=\"px-0\">\n                                <input\n                                  id=\"depositAmount\"\n                                  type=\"number\"\n                                  name=\"digit\"\n                                  id=\"depositAmount\"\n                                  placeholder=\"Amount\"\n                                  value={btcAmount}\n                                  onChange={(e) => {\n                                    setCardDepositAmount(e.target.value);\n                                    setBtcAmount(e.target.value);\n                                  }}\n                                />\n                              </Col>\n                              <Col md={6} className=\"pr-0\">\n                                <div className=\"d-flex justify-content-between\">\n                                  <div>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-amount\"\n                                      onClick={() =>\n                                        setBtcAmount(web.BTCAmount1)\n                                      }\n                                    >\n                                      ${web.BTCAmount1}\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-amount\"\n                                      onClick={() =>\n                                        setBtcAmount(web.BTCAmount2)\n                                      }\n                                    >\n                                      $\n                                      {new Intl.NumberFormat('en-US').format(web.BTCAmount2)}\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-amount\"\n                                      onClick={() =>\n                                        setBtcAmount(web.BTCAmount3)\n                                      }\n                                    >\n                                      $\n                                      {new Intl.NumberFormat('en-US').format(web.BTCAmount3)}\n                                    </button>\n                                  </div>\n                                </div>\n                              </Col>\n                            </div>\n                            <div\n                              className=\"process\"\n                              style={{ display: \"block\", width: \"100%\" }}\n                            >\n                              <div className=\"btn\">\n                                <button\n                                  onClick={handleCreditStepOne}\n                                  type=\"button\"\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                            <br />\n                            <div className=\"mt-5 d-flex align-items-center justify-content-between w-75\">\n                              <div>\n                                <img\n                                  src={visacard}\n                                  alt=\"visa card logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={mastercard}\n                                  alt=\"master card logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={discover}\n                                  alt=\"discover network logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={americanexpress}\n                                  alt=\"american express logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepTwo ? (\n                          <div className=\"process dash-row dash-row-centralized\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepOne}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div className=\"credit-card dash-row\">\n                              <div className=\"front\">\n                                <div className=\"dtls\">\n                                  <NumberFormat\n                                    format=\"#### #### #### ####\"\n                                    name=\"number\"\n                                    placeholder=\"Card number\"\n                                    className=\"card-number\"\n                                    value={cardNumber}\n                                    onChange={(e) => {\n                                      setCardNumber(e.target.value);\n                                    }}\n                                  />\n                                  <div\n                                    className=\"dash-row dash-row-centralized\"\n                                    style={{ justifyContent: \"flex-end\" }}\n                                  >\n                                    <div className=\"valid-thru\">\n                                      <span className=\"text-uppercase\">\n                                        Valid\n                                        <br />\n                                        thru\n                                      </span>\n                                    </div>\n                                    <div className=\"mm\">\n                                      <NumberFormat\n                                        format={cardExpiry}\n                                        className=\"short\"\n                                        name=\"number\"\n                                        placeholder=\"MM/YY\"\n                                        value={cardExpiryDate}\n                                        onChange={(e) => {\n                                          setCardExpiryDate(e.target.value);\n                                        }}\n                                      />\n                                    </div>\n                                    {/* <div className=\"slash\">\n                                   <span>/</span>\n                                 </div>\n                                 <div className=\"yy\">\n                                   <input\n                                     className=\"short\"\n                                     type=\"number\"\n                                     minLength={0}\n                                     maxLength={4}\n                                     onInput={checkMaxLength}\n                                     name=\"number\"\n                                     placeholder=\"YY\"\n                                     value={cardYear}\n                                     onChange={(e) => {\n                                       setCardYear(e.target.value);\n                                     }}\n                                   />\n                                 </div> */}\n                                  </div>\n                                  <input\n                                    className=\"card-holder\"\n                                    type=\"text\"\n                                    name=\"text\"\n                                    placeholder=\"Card holder\"\n                                    value={cardHolderName}\n                                    onChange={(e) => {\n                                      setCardHolder(e.target.value);\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div className=\"reverse\">\n                                <div className=\"stripe\" />\n                                <div className=\"cvc\">\n                                  <input\n                                    minLength={0}\n                                    maxLength={3}\n                                    onInput={checkMaxLength}\n                                    className=\"short\"\n                                    type=\"number\"\n                                    name=\"number\"\n                                    placeholder=\"CVC\"\n                                    value={cardCvv}\n                                    onChange={(e) => setCardCvv(e.target.value)}\n                                  />\n                                  <small className=\"font-size-10\">\n                                    The last three digits on the reverse\n                                  </small>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"text-right w-100 mt-4\">\n                              <div className=\"btn\">\n                                <button\n                                  onClick={handleCreditStepTwo}\n                                  type=\"button\"\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                            <div className=\"mt-5 d-flex align-items-center justify-content-between w-75 mx-auto\">\n                              <div>\n                                <img\n                                  src={nortonsecure}\n                                  alt=\"norton secure logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={mcafeesecure}\n                                  alt=\"mcafee secure logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                              <div>\n                                <img\n                                  src={securessl}\n                                  alt=\"secure ssl logo\"\n                                  style={{ width: \"65px\" }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepThree ? (\n                          <div className=\"process dash-row dash-row-centralized\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepTwo}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div className=\"billing-form w-100 mt-3 text-left\">\n                              <div>\n                                <Form.Group>\n                                  <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Billing Address\"\n                                    name=\"billingAddress\"\n                                    id=\"billingAddress\"\n                                    value={billingAddress}\n                                    onChange={(e) =>\n                                      setBillingAddress(e.target.value)\n                                    }\n                                  />\n                                </Form.Group>\n                                <Form.Group>\n                                  <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Zip Code\"\n                                    name=\"zipCode\"\n                                    id=\"zipCode\"\n                                    value={zipCode}\n                                    onChange={(e) => setZipCode(e.target.value)}\n                                  />\n                                </Form.Group>\n                                <Row>\n                                  <Col xs={12} md={6}>\n                                    <Form.Group>\n                                      <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Your State\"\n                                        name=\"yourState\"\n                                        id=\"yourState\"\n                                        value={yourState}\n                                        onChange={(e) =>\n                                          setYourState(e.target.value)\n                                        }\n                                      />\n                                    </Form.Group>\n                                  </Col>\n                                  <Col xs={12} md={6}>\n                                    <Form.Group style={{ color: \"#6c757d\" }}>\n                                      <Select\n                                        style={{ color: \"#6c757d\" }}\n                                        options={options}\n                                        value={userCountry}\n                                        id=\"userCountry\"\n                                        placeholder={\n                                          <div style={{ color: \"#6c757d\" }}>\n                                            Select Country\n                                          </div>\n                                        }\n                                        onChange={(userCountry) =>\n                                          setUserCountry(userCountry)\n                                        }\n                                      />\n                                    </Form.Group>\n                                  </Col>\n                                </Row>\n                              </div>\n                            </div>\n                            <div className=\"text-right w-100 mt-3\">\n                              <div className=\"btn pr-0\">\n                                <button\n                                  onClick={handleCreditStepThree}\n                                  type=\"button\"\n                                >\n                                  Next\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepFour ? (\n                          <div className=\"confirm-wrapper\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepThree}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div className=\"mt-4\" style={{ color: \"#fff\" }}>\n                              <p>\n                                Please confirm that all the filled details are\n                                correct\n                              </p>\n                              <Form.Group>\n                                <Form.Check\n                                  type=\"checkbox\"\n                                  label=\"I confirm\"\n                                  style={{ color: \"#fff!important\" }}\n                                />\n                              </Form.Group>\n                              <div className=\"text-center\">\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={handleCreditStepFour}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Done\n                                </Button>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        {creditStepFive ? (\n                          <div className=\"process dash-row dash-row-centralized\">\n                            <div className=\"text-left w-100\">\n                              <Button\n                                onClick={goBackToCreditStepFour}\n                                className=\"back-button\"\n                              >\n                                &#8592;&nbsp; Previous\n                              </Button>\n                            </div>\n                            <div\n                              style={{\n                                textAlign: \"center\",\n                                width: \"100%\",\n                                margin: \"5%\",\n                              }}\n                            >\n                              <img\n                                style={{\n                                  textAlign: \"center\",\n                                  width: \"30%\",\n                                  margin: \"5%\",\n                                }}\n                                src=\"https://i.pinimg.com/originals/06/ae/07/06ae072fb343a704ee80c2c55d2da80a.gif\"\n                              />\n                            </div>\n                            <div\n                              style={{\n                                textAlign: \"left\",\n                                margin: \"10px 0\",\n                                color: \"#fff\",\n                              }}\n                            >\n                              <div className=\"d-flex mt-2\">\n                                <div>\n                                  <p>\n                                    The Account Department will Process Your\n                                    Payments and credit your Account in a short\n                                    While\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                            <p className=\"mt-2\" style={{ color: \"#aaa\" }}>\n                              N:B - When topping up your balance, please note:\n                              Per our fraud control guidelines, some\n                              transactions (especially those involving\n                              third-party payments) may require additional\n                              verification. In some cases, we’ll need phone\n                              verification for the card holder.\n                            </p>\n                            <div className=\"text-center w-100\">\n                              <div className=\"btn pr-0\">\n                                <button\n                                  className=\"mb-4\"\n                                  onClick={subDeposite}\n                                  style={{\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Exit\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </Tab.Pane>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {web.bitCoinStatus ? (\n                      <Tab.Pane eventKey=\"crypto\">\n                        <div className=\"crypto-tab\">\n                          {stepOne ? (\n                            <div id=\"step-one\" style={{ marginTop: \"15%\" }}>\n                              <h5\n                                style={{ marginBottom: \"15%\", color: \"white\" }}\n                              >\n                                Please Specify the amount you would like to\n                                deposit into your account through Bitcoin\n                              </h5>\n                              <div\n                                className=\"process dash-row dash-row-centralized\"\n                                style={{\n                                  justifyContent: \"space-around\",\n                                  marginTop: \"-30px\",\n                                }}\n                              >\n                                <Col md={6} className=\"px-0\">\n                                  <input\n                                    id=\"depositAmount\"\n                                    type=\"number\"\n                                    min={0}\n                                    name=\"btcAmount\"\n                                    value={btcAmount}\n                                    placeholder=\"Enter Amount\"\n                                    onChange={(e) =>\n                                      setBtcAmount(e.target.value)\n                                    }\n                                  />\n                                </Col>\n                                <Col md={6} className=\"pr-0\">\n                                  <div className=\"d-flex justify-content-between\">\n                                    <div>\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn-amount\"\n                                        onClick={() =>\n                                          setBtcAmount(web.BTCAmount1)\n                                        }\n                                      >\n                                        ${web.BTCAmount1}\n                                      </button>\n                                    </div>\n                                    <div>\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn-amount\"\n                                        onClick={() =>\n                                          setBtcAmount(web.BTCAmount2)\n                                        }\n                                      >\n                                        $\n                                        {new Intl.NumberFormat('en-US').format(web.BTCAmount2)}\n                                      </button>\n                                    </div>\n                                    <div>\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn-amount\"\n                                        onClick={() =>\n                                          setBtcAmount(web.BTCAmount3)\n                                        }\n                                      >\n                                        $\n                                        {new Intl.NumberFormat('en-US').format(web.BTCAmount3)}\n                                      </button>\n                                    </div>\n                                  </div>\n                                </Col>\n                              </div>\n                              <div className=\"process\">\n                                <div className=\"btn\">\n                                  <button onClick={handleAmount} type=\"button\">\n                                    Next\n                                  </button>\n                                </div>\n                              </div>\n                              <div className=\"mt-4\">\n                                <p style={{ color: \"#fff\" }}>\n                                  Need to buy bitcoin?\n                                  <a href=\"#\" target=\"_blank\">\n                                    Click here\n                                  </a>\n                                </p>\n                              </div>\n                              <br />\n                              <div\n                                className=\"mt-5 d-flex align-items-center justify-content-between w-75\"\n                                style={{ margin: \"0 auto\" }}\n                              >\n                                <a href={siteUData.depositeImg1Link}>\n                                  <img\n                                    src={siteUData.depositeImg1}\n                                    alt=\"account img\"\n                                    style={{ width: \"65px\" }}\n                                  />\n                                </a>\n                                <a href={siteUData.depositeImg2Link}>\n                                  <img\n                                    src={siteUData.depositeImg2}\n                                    alt=\"account img\"\n                                    style={{ width: \"65px\" }}\n                                  />\n                                </a>\n                                <a href={siteUData.depositeImg3Link}>\n                                  <img\n                                    src={siteUData.depositeImg3}\n                                    alt=\"account img\"\n                                    style={{ width: \"65px\" }}\n                                  />\n                                </a>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {stepTwo ? (\n                            <div id=\"step-two\">\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToStepOne}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <img\n                                src={web.BTCQRCodeImg}\n                                className=\"qrcode my-5\"\n                                alt=\"QR Code\"\n                              />\n                              <br />\n                              <p className=\"mb-0\" style={{ color: \"#fff\" }}>\n                                To complete your payment, please send{\" \"}\n                                <strong>\n                                  $\n                                  {new Intl.NumberFormat('en-US').format(btcAmount)}\n                                </strong>{\" \"}\n                                dollar worth of BTC to the address below.\n                              </p>\n                              <div>\n                                <h6 className=\"my-4 text-left\">\n                                  {web.btcHeaderText}:\n                                </h6>\n                                <div class=\"d-flex\">\n                                  <Form.Control\n                                    type=\"text\"\n                                    value={web.btcAddress}\n                                    disabled\n                                    style={{\n                                      width: \"100%\",\n                                      background: \"#fff\",\n                                      height: \"55px\",\n                                      textAlign: \"left\",\n                                      padding: \"15px\",\n                                      color: \"#1c2030\",\n                                    }}\n                                  />\n                                  <CopyToClipboard\n                                    text={web.btcAddress}\n                                    onCopy={copyToClipboard}\n                                  >\n                                    <Button\n                                      variant=\"primary\"\n                                      style={{\n                                        background: web.yourMainColor,\n                                        height: \"55px\",\n                                        marginLeft: \"-2px\",\n                                        background: \"#fff\",\n                                        color: \"#000\",\n                                        borderTopLeftRadius: \"0\",\n                                        borderBottomRightRadius: \"0\",\n                                        color: \"#1c2030\",\n                                        width: \"auto\",\n                                        padding: \"15px 30px\",\n                                      }}\n                                    >\n                                      {copied ? \"COPIED\" : \"COPY\"}\n                                    </Button>\n                                  </CopyToClipboard>\n                                </div>\n                                <br />\n                                <div className=\"text-center\">\n                                  <Button\n                                    className=\"mb-4\"\n                                    onClick={handleNext}\n                                    style={{\n                                      width: \"39%\",\n                                      padding: \"15px 30px\",\n                                    }}\n                                  >\n                                    Next\n                                  </Button>\n                                </div>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {stepThree ? (\n                            <div\n                              className=\"confirm-wrapper\"\n                              style={{ color: \"#fff\" }}\n                            >\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToStepTwo}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <p className=\"mt-4\">\n                                Please confirm that you have transferred $\n                                {new Intl.NumberFormat('en-US').format(btcAmount)}{\" \"}\n                                worth of BTC to the following BITCOIN wallet\n                                address\n                              </p>\n                              <Form.Group>\n                                <Form.Check\n                                  type=\"checkbox\"\n                                  label=\"I Confirm\"\n                                  style={{ color: \"#fff!important\" }}\n                                />\n                              </Form.Group>\n                              <div className=\"text-center\">\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={showProofUpload}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Next\n                                </Button>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {/* Upload proof of payment */}\n\n                          {uploadProof ? (\n                            <div>\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToStepThree}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <br />\n                              <p\n                                style={{ marginTop: \"1.5rem\" }}\n                                className=\"mb-2\"\n                                style={{ color: \"#fff\" }}\n                              >\n                                Upload proof of payment\n                              </p>\n                              <br />\n                              <Upload {...properties}>\n                                <ButtonAnt icon={<UploadOutlined />}>\n                                  Click to Upload\n                                </ButtonAnt>\n                              </Upload>\n                              <br />\n                              <small\n                                style={{\n                                  color: \"#fff\",\n                                  paddingBottom: \"1.5rem\",\n                                }}\n                              >\n                                *Optional but recommended <br />\n                                *Maximum file size 500kb\n                              </small>\n\n                              <div className=\"text-center\">\n                                <br />\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={handleConfirmation}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Done\n                                </Button>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {stepFour ? (\n                            <div>\n                              <div className=\"text-left\">\n                                <Button\n                                  onClick={goBackToUpload}\n                                  className=\"back-button\"\n                                >\n                                  &#8592;&nbsp; Previous\n                                </Button>\n                              </div>\n                              <div\n                                style={{\n                                  textAlign: \"center\",\n                                  width: \"100%\",\n                                  margin: \"5%\",\n                                }}\n                              >\n                                <img\n                                  style={{\n                                    textAlign: \"center\",\n                                    width: \"30%\",\n                                    marginTop: \"5%\",\n                                  }}\n                                  src=\"https://i.pinimg.com/originals/06/ae/07/06ae072fb343a704ee80c2c55d2da80a.gif\"\n                                />\n                              </div>\n                              <div\n                                style={{\n                                  textAlign: \"left\",\n                                  margin: \"10px 0\",\n                                  color: \"#fff\",\n                                }}\n                              >\n                                <div className=\"d-flex\">\n                                  <div>\n                                    <p>\n                                      Your account will be credited Once your\n                                      Bitcoin Transfer has been confirmed\n                                    </p>\n                                  </div>\n                                </div>\n                              </div>\n                              <p className=\"mt-4\" style={{ color: \"#aaa\" }}>\n                                It might take up to an hour for funds to become\n                                available in your account. On rare occasions, it\n                                may take up to 24 hours for the amount to be\n                                credited.\n                              </p>\n                              <div className=\"text-center\">\n                                <Button\n                                  className=\"mb-4\"\n                                  onClick={BuyCoin}\n                                  style={{\n                                    width: \"39%\",\n                                    padding: \"15px 30px\",\n                                  }}\n                                >\n                                  Exit\n                                </Button>\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                        </div>\n                      </Tab.Pane>\n                    ) : (\n                      \"\"\n                    )}\n                  </Tab.Content>\n                </div>\n              </Tab.Container>\n            </div>\n            <span className=\"close\" onClick={() => setCredit(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {withdraw ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal\">\n            <div className=\"header\">Ask a withdraw</div>\n            <div className=\"dash-row\">\n              <div className=\"sidebar\">\n                <div className=\"links\">\n                  <a href=\"#\">\n                    <span className=\"font-size-15 font-weight-bold\">USD</span>\n                    <span className=\"font-size-11\">{wallet}</span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"content\">\n                <div className=\"range\">\n                  <center>\n                    <h3 className=\"text-uppercase font-weight-normal\">\n                      <span\n                        style={{\n                          backgroundColor: \"#29c359\",\n                          color: \"#fff\",\n                          padding: \"7px 12px\",\n                          display: \"inline-block\",\n                        }}\n                      >\n                        USD\n                      </span>{\" \"}\n                      Withdraw\n                    </h3>\n                  </center>\n                  <div className=\"dash-row\">\n                    <input\n                      style={{\n                        width: \"60em\",\n                        border: \"none\",\n                        padding: \".5em\",\n                      }}\n                      type=\"number\"\n                      min={siteUData.minWithdrawalAmount}\n                      max={siteUData.maxWithdrawalAmount}\n                      value={withValue}\n                      name=\"amtWithdraw\"\n                      onChange={(e) => setWitValue(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"dash-row\" style={{ color: \"white\" }}>\n                    <small style={{ paddingRight: \"2em\" }}>\n                      Minimum: {\"\"} {addComma(siteUData.minWithdrawalAmount)}\n                    </small>\n                    <small>\n                      Maximum: {\"\"} {addComma(siteUData.maxWithdrawalAmount)}{\" \"}\n                    </small>\n                  </div>\n                  <div className=\"dash-row\" style={{ marginTop: \"30px\" }}>\n                    <div className=\"withdraw-card\">\n                      <span className=\"title\">AMOUNT</span>\n                      <span>\n                        {addComma(withValue)}\n                        {\"\"}USD\n                      </span>\n                    </div>\n                    <div className=\"withdraw-card\">\n                      <span className=\"title\">FEES (3.00 %)</span>\n                      <span>\n                        {addComma(percent)}\n                        {\"\"}USD\n                      </span>\n                    </div>\n                    <div className=\"withdraw-card total\">\n                      <span className=\"title\">TOTAL</span>\n                      <span>\n                        {withValue > 0 ? addComma(Math.round(amount)) : 0}\n                        {\"\"}USD\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"withdraw-method\">\n                    <h4>CHOOSE RECEIVER ACCOUNT</h4>\n                    <select\n                      value={withdrawMethod}\n                      onChange={(e) => setWithdrawMethod(e.target.value)}\n                    >\n                      <option disabled>Choose your method</option>\n\n                      {payMethod\n                        ? payMethod.map((i, index) => (\n                            <option key={index} value={index}>\n                              {i.bankName || i.cryptoCurrencyName}\n                            </option>\n                          ))\n                        : \"\"}\n                      {/* {payMethod? payMethod.crypto.map((i, index) => (\n                        <option key={index+200} value={index}>{i.cryptoCurrencyName}</option>\n                      ))  : ''\n                      } */}\n                    </select>\n                    <button onClick={subWithdraw} className=\"btn\">\n                      Validate\n                    </button>\n                  </div>\n                </div>\n                <div className=\"no-withdrawal\">\n                  <span>YOU NEED TO HAVE AT LEAST 200 USD</span>\n                </div>\n              </div>\n            </div>\n            <span className=\"close\" onClick={() => setWithdraw(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {personalData ? (\n        <section\n          className=\"withdraw-modal-box personal-data-modal\"\n          style={{ display: \"block\" }}\n        >\n          <div className=\"withdraw-modal personal-modal\">\n            <div className=\"header\">User Personal Data</div>\n            <div className=\"dash-row\">\n              <div className=\"content\">\n                <div className=\"billing-form text-left\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your First Name\"\n                          name=\"yourName\"\n                          id=\"yourName\"\n                          value={yourName}\n                          onChange={(e) => setYourName(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Last Name\"\n                          name=\"yourLastName\"\n                          id=\"yourLastName\"\n                          value={yourLastName}\n                          onChange={(e) => setYourLastName(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"email\"\n                          placeholder=\"Your Email Address\"\n                          name=\"yourEmailAddress\"\n                          id=\"yourEmailAddress\"\n                          value={yourEmailAddress}\n                          onChange={(e) => setYourEmailAddress(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          value={yourPhoneNumber}\n                          onChange={(e) => setYourPhoneNumber(e.target.value)}\n                          type=\"number\"\n                          placeholder=\"phone number\"\n                          name=\"phone\"\n                          id=\"yourPhoneNumber\"\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={12}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          as=\"select\"\n                          name=\"profileCountry\"\n                          value={profileCountry}\n                          onChange={(e) => setProfileCountry(e.target.value)}\n                        >\n                          {profileCountryList.map((country) => (\n                            <option>{country}</option>\n                          ))}\n                        </Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          value={yourPassword}\n                          onChange={(e) => setYourPassword(e.target.value)}\n                          type=\"password\"\n                          placeholder=\"Your New Password\"\n                          name=\"newPassword\"\n                          id=\"yourPassword\"\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Control\n                          value={yourPasswordComfirm}\n                          onChange={(e) =>\n                            setYourPasswordComfirm(e.target.value)\n                          }\n                          type=\"password\"\n                          placeholder=\"Repeat New Password\"\n                          name=\"repeatPassword\"\n                          id=\"yourPasswordConfirm\"\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <div className=\"text-right\">\n                    <Button\n                      style={{ background: web.yourMainColor }}\n                      onClick={updateProfile}\n                      variant=\"primary\"\n                      className=\"mb-4\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <span className=\"close\" onClick={() => setPersonalData(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {support ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal support-modal\">\n            <div className=\"header\">Contact Support</div>\n            <span className=\"close\" onClick={() => setSupport(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <Container fluid>\n              <Row>\n                <Col xs={12} md={6}>\n                  <div className=\"support-image\"></div>\n                </Col>\n                <Col xs={12} md={6}>\n                  <div className=\"support-wrapper\">\n                    <h6 className=\"text-left\">SUPPORT</h6>\n                    <hr />\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>EMAIL</p>\n                      </div>\n                      <div>\n                        <p>\n                          <a href={`mailto:${supportMail}`}>{supportMail}</a>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>PHONE</p>\n                      </div>\n                      <div>\n                        <p>\n                          <a href=\"tel:+234800000000\">{supportPhone}</a>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>\n                        <p>ADDRESS</p>\n                      </div>\n                      <div>\n                        <p>{supportAddress}</p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4\">\n                      <h6 className=\"text-left\">CONTACT DPO</h6>\n                      <hr />\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <p>EMAIL</p>\n                        </div>\n                        <div>\n                          <p>\n                            <a href={`mailto:${DPOEmail}`}>{DPOEmail}</a>\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"d-flex justify-content-between\">\n                        <div>\n                          <p>PHONE</p>\n                        </div>\n                        <div>\n                          <p>\n                            <a href=\"tel:+234800000000\">{DPOPhone}</a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {withdrawSettings ? (\n        <section className=\"withdraw-modal-box\" style={{ display: \"block\" }}>\n          <div className=\"withdraw-modal support-modal\">\n            <div className=\"header\">Withdraw Settings</div>\n            <span className=\"close\" onClick={() => setWithdrawSettings(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <Container fluid className=\"pt-5\">\n              <div className=\"withdraw-settings d-flex\">\n                <div>\n                  <button onClick={openBankTransfer}>\n                    <img src={transfer} alt=\"bank transfer\" />\n                  </button>\n                </div>\n                <div>\n                  <button onClick={openCrypto}>\n                    <img\n                      src={\n                        \"https://assets.coinbase.com/assets/bitcoin.0307bf6969a0d3b8b43fcab55e6de8ab.svg\"\n                      }\n                      alt=\"cryptocurrencies\"\n                    />\n                  </button>\n                </div>\n              </div>\n\n              <div style={{ height: \"35vh\" }}>\n                {payMethodBoth &&\n                payMethodBoth.banks &&\n                payMethodBoth.crypto.length > 0\n                  ? payMethodBoth.banks.map((item, index) => (\n                      <div key={index} className=\"shadowed text-left\">\n                        <div>\n                          <h6 className=\"mb-0\">Bank Transfer</h6>\n                          <Row>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">Name</p>\n                                <p className=\"value\">{item.name}</p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">Bank Name</p>\n                                <p className=\"value\">{item.bankName}</p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">\n                                  Bank Account Number\n                                </p>\n                                <p className=\"value\">\n                                  {item.bankCountrybankAccountNumber}\n                                </p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </div>\n                    ))\n                  : \"\"}\n                {payMethodBoth &&\n                payMethodBoth.crypto &&\n                payMethodBoth.crypto.length > 0\n                  ? payMethodBoth.crypto.map((item, index) => (\n                      <div className=\"shadowed text-left\">\n                        <div>\n                          <h6 className=\"mb-0\">Crypto Transfer</h6>\n                          <Row>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">Name</p>\n                                <p className=\"value\">{item.name}</p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">\n                                  Crypto Currency Name\n                                </p>\n                                <p className=\"value\">\n                                  {item.cryptoCurrencyName}\n                                </p>\n                              </div>\n                            </Col>\n                            <Col xs={12} md={6}>\n                              <div className=\"mt-2\">\n                                <p className=\"title mb-0\">\n                                  Crypto Currency Address\n                                </p>\n                                <p className=\"value\">\n                                  {item.cryptoCurrencyAddress}\n                                </p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </div>\n                    ))\n                  : \"\"}\n              </div>\n            </Container>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {bankTransfer ? (\n        <section\n          className=\"withdraw-modal-box personal-data-modal\"\n          style={{ display: \"block\" }}\n        >\n          <div className=\"withdraw-modal bank-modal\">\n            <div className=\"header\">Bank Transfer</div>\n            <span className=\"close\" onClick={() => setBankTransfer(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <div className=\"dash-row\">\n              <div className=\"content\">\n                <div className=\"billing-form text-left\">\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Bank Name\"\n                      name=\"bankName\"\n                      id=\"bankName\"\n                      value={bankName}\n                      onChange={(e) => setBankName(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank Address\"\n                          name=\"bankAddress\"\n                          id=\"bankAddress\"\n                          value={bankAddress}\n                          onChange={(e) => setBankAddress(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank City\"\n                          name=\"bankCity\"\n                          id=\"bankCity\"\n                          value={bankCity}\n                          onChange={(e) => setBankCity(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank Country\"\n                          name=\"bankCountry\"\n                          id=\"bankCountry\"\n                          value={bankCountry}\n                          onChange={(e) => setBankCountry(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Bank Account Number/IBAN\"\n                          name=\"accountNumber\"\n                          id=\"accountNumber\"\n                          value={accountNumber}\n                          onChange={(e) => setaccountNumber(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Swift Code\"\n                          name=\"swiftCode\"\n                          id=\"swiftCode\"\n                          value={swiftCode}\n                          onChange={(e) => setSwiftCode(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Full Name (First Name and Last Name)\"\n                          name=\"fullName\"\n                          id=\"fullName\"\n                          value={fullName}\n                          onChange={(e) => setFullName(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Address\"\n                          name=\"yourAddress\"\n                          id=\"yourAddress\"\n                          value={yourAddress}\n                          onChange={(e) => setYourAddress(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Your Country\"\n                          name=\"yourCountry\"\n                          id=\"yourCountry\"\n                          value={yourCountry}\n                          onChange={(e) => setYourCountry(e.target.value)}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Your City\"\n                      name=\"yourCity\"\n                      id=\"yourCity\"\n                      value={yourCity}\n                      onChange={(e) => setYourCity(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <div className=\"text-right\">\n                    <Button\n                      style={{ background: web.yourMainColor }}\n                      variant=\"primary\"\n                      onClick={saveBankDetails}\n                      className=\"mb-4\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {cryptoCurrency ? (\n        <section\n          className=\"withdraw-modal-box personal-data-modal\"\n          style={{ display: \"block\" }}\n        >\n          <div className=\"withdraw-modal personal-modal\">\n            <div className=\"header\">Cryptocurrencies</div>\n            <span className=\"close\" onClick={() => setCryptoCurrency(false)}>\n              <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                <title>cross</title>\n                <path\n                  className=\"path1\"\n                  d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                />\n              </svg>\n            </span>{\" \"}\n            <div className=\"dash-row\">\n              <div className=\"content\">\n                <div className=\"billing-form text-left\">\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Control\n                      value={cryptoCurrencyName}\n                      onChange={(e) => setCryptoCurrencyName(e.target.value)}\n                      as=\"select\"\n                    >\n                      <option value=\"BTC\">BTC</option>\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Address\"\n                      name=\"address\"\n                      id=\"address\"\n                      value={cryptoAddress}\n                      onChange={(e) => setCryptoAddress(e.target.value)}\n                    />\n                  </Form.Group>\n                  <div className=\"text-right\">\n                    <Button\n                      style={{ background: web.yourMainColor }}\n                      variant=\"primary\"\n                      onClick={saveCryptoCurrency}\n                      className=\"mb-4\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n\n      {autoTrade ? (\n        <div className=\"levC1\" style={{ display: \"block\" }}>\n          <div className=\"levHeader1\">Auto Trade</div>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n            <br /> Do you agree?\n          </p>\n          <div className=\"text-right\">\n            <Button\n              disabled={submitLoading}\n              variant=\"primary mt-3\"\n              onClick={autoTradeEnable}\n            >\n              I Agree\n            </Button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {stepFive ? (\n        <div id=\"step-three\">\n          <div\n            class=\"levC1\"\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              marginTop: \"10%\",\n              left: 0,\n              right: 0,\n            }}\n          >\n            <div class=\"levHeader\" style={{ padding: \"3%\" }}>\n              Completed\n              <span\n                className=\"close\"\n                onClick={() => setStepFive(false)}\n                style={{\n                  top: \"30px\",\n                  right: \"15px\",\n                }}\n              >\n                <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                  <title>cross</title>\n                  <path\n                    className=\"path1\"\n                    d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                  />\n                </svg>\n              </span>{\" \"}\n            </div>\n            Your deposit will be made once the transaction is confirmed by the\n            accounting department. Thanks\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\nexport const NavBarWithRouter = withRouter(NavBar);\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Orders.js",["901","902","903","904","905","906","907","908","909","910","911","912","913","914","915"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      real: [],\n      default: [],\n      arr: [\"hi\"],\n      count: 10,\n      intervalId: null,\n    };\n    this.state = {\n      intervalId: null,\n    };\n  }\n\n  savedOrders = JSON.parse(localStorage.getItem(\"orders\"))\n    ? JSON.parse(localStorage.getItem(\"orders\"))\n    : [];\n\n  getBTC = (str) => {\n    let r = this.props.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getETH = (str) => {\n    let r = this.props.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getLTC = (str) => {\n    let r = this.props.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getEUR = (str) => {\n    let r = this.props.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getGBP = (str) => {\n    let r = this.props.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getJPY = (str) => {\n    let r = this.props.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getAAPL = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getTSLA = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getGOOGL = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getMSFT = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getFB = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getDE = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getHO = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getCO = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getGAS = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getPRO = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getJET = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getRate = (str) => {\n    // let a = [\n    //   this.getBTC(\"btcusd\"),\n    //   this.getAAPL(\"AAPL\"),\n    //   this.getMSFT(\"MSFT\"),\n    //   this.getFB(\"FB\"),\n    //   this.getLTC(\"LTCUSD\"),\n    //   this.getETH(\"ETHUSD\"),\n    //   this.getJET(\"Jet Fuel\"),\n    //   this.getEUR(\"EURUSD\"),\n    //   this.getJPY(\"USDJPY\"),\n    //   this.getGBP(\"USDGBP\"),\n    //   this.getTSLA(\"TSLA\"),\n    //   this.getPRO(\"Propane\"),\n    //   this.getGAS(\"GAS\"),\n    //   this.getDE(\"DIESEL\"),\n    //   this.getHO(\"Heating Oil\"),\n    //   this.getCO(\"Crude Oil\"),\n    //   this.getGOOGL(\"GOOGL\"),\n    // ];\n    // if (a.length > 0) {\n    //   let r = a.find((i) => {\n    //     if (i) {\n    //       return i.symbol.toLowerCase().trim() === str.toLowerCase().trim();\n    //     }\n    //   });\n    //   if (r) {\n    //     if (r.price) {\n    //       return r.price;\n    //     } else {\n    //       return r.rate;\n    //     }\n    //   }\n    // }\n  };\n  getItem = () => {\n    let buy = this.props.orders.filter((item) => {\n      return (\n        item.tag === \"buy\" &&\n        parseInt(item.unit) / parseInt(this.getRate(item.stockName)) <\n          parseInt(item.stockAmount) &&\n        item.active\n      );\n    });\n\n    let sell = this.props.orders.filter((item) => {\n      return (\n        item.tag === \"sell\" &&\n        parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n          parseInt(item.stockAmount) &&\n        item.active\n      );\n    });\n    let closeArr = [...buy, ...sell];\n\n    return closeArr;\n  };\n\n  componentDidMount() {\n\n    const intervalId = setInterval(this.closeTimer, 10000);\n    this.setState({ intervalId });\n  }\n  closeTimer = () => {\n    let arr = this.getItem();\n    console.log(\"still trading\", arr);\n\n    arr.map((item) => {\n      this.props.closeOrder(\n        item._id,\n        (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) -\n          parseInt(item.stockAmount)) *\n          10 *\n          parseInt(this.getRate(item.stockName)),\n        (parseInt(item.unit) / parseInt(this.getRate(item.stockName))) *\n          10 *\n          parseInt(this.getRate(item.stockName))\n      )();\n    });\n  };\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n  render() {\n\n    return (\n      <>\n        <div className=\"order\" style={this.props.buysell ? { height: \"65vh\", overflow: \"auto\" } : { height: \"15vh\", overflow: \"auto\" }}>\n          <div className=\"dtls\">\n            <span className=\"text\">Open positions</span>\n            {/* <span className=\"text\">Pending orders</span> */}\n            <svg\n              className={this.props.buysell?\"expand toggled\":\"expand untoggled\" }\n              width={20}\n              height={20}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M5 15.5L12 8.5L19 15.5\"\n                stroke=\"#fff\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n            <div className=\"all-tables tablesI\" style={this.props.buysell?{ display: \"block\" }:{ display: \"block\" } }>\n              <div\n                className=\"tables tablesI\"\n                id=\"open-positions\"\n                style={this.props.buysell?{ display: \"block\" }:{ display: \"block\" } }\n              >\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>DATE</th>\n                      <th>ID</th>\n                      <th>INSTRUMENT</th>\n                      <th>UNITS</th>\n                      <th>INVESTMENT</th>\n                      <th>DIRECTION</th>\n                      <th>OPEN RATE</th>\n                      <th>MARKET RATE</th>\n                      <th>P&L</th>\n                      <th>PROFIT/LOSS</th>\n                      <th>STATUS</th>\n                    </tr>\n                    {this.props.orders.length > 0\n                      ? this.props.orders.map((item, i) => (\n                          <tr>\n                            <td>\n                              {item.time ? item.time.slice(0, 10) : \"\"}{\" \"}\n                              {/* {item.time\n                                      ? item.time.slice(16).slice(0, 8)\n                                      : \"\"} */}\n                            </td>\n                            <td>00{i + 1}</td>\n                            <td>{item.stockName}</td>\n\n                            <td>\n                              {item.unit\n                                ? ((parseInt(item.unit) / item.buyW) * 10)\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td>\n                              {item.unit\n                                ? (\"$\" + (item.unit / item.buyW) * item.buyW)\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td\n                              className=\"rise\"\n                              style={\n                                item.tag === \"buy\"\n                                  ? { color: \"green\" }\n                                  : { color: \"red\" }\n                              }\n                            >\n                              {item.tag}\n                            </td>\n                            <td>\n                              {item.buyW\n                                ? \"$\" + item.buyW.toString().slice(0, 8)\n                                : \"\"}\n                            </td>\n                            <td>\n                              {item.active ? \"$\" : \"\"}\n                              {item.active\n                                ? this.getRate(item.stockName)\n                                  ? this.getRate(item.stockName)\n                                      .toString()\n                                      .slice(0, 8)\n                                  : \"\"\n                                : \"---\"}\n                            </td>\n                            <td className=\"fall\">\n                              {item.active\n                                ? item.tag === \"buy\"\n                                  ? item.unit / this.getRate(item.stockName) >\n                                    item.stockAmount\n                                    ? (\n                                        \"-\" +\n                                        (item.unit /\n                                          this.getRate(item.stockName) -\n                                          item.stockAmount) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                    : (\n                                        \"+\" +\n                                        (item.stockAmount -\n                                          item.unit /\n                                            this.getRate(item.stockName)) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                  : //sell\n                                  item.unit / this.getRate(item.stockName) <\n                                    item.stockAmount\n                                  ? (\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                      10 *\n                                      this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                  : (\n                                      \"+\" +\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                        10 *\n                                        this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                : \"---\"}\n                            </td>\n                            <td>\n                              {\" \"}\n                              {item.profit}/{item.loss}\n                            </td>\n                            <td style={{ display: \"flex\", width: \"75%\" }}>\n                              <button\n                                className=\"orderBtn\"\n                                className=\"btn-green\"\n                              >\n                                {item.active ? \"Open\" : \"closed\"}\n                              </button>\n\n                              {item.active ? (\n                                <button\n                                  className=\"orderBtn\"\n                                  onClick={this.props.closeOrder(\n                                    item._id,\n                                    (parseInt(item.unit) / parseInt(item.buyW) -\n                                      parseInt(item.stockAmount)) *\n                                      10 *\n                                      parseInt(item.buyW),\n                                    (parseInt(item.unit) /\n                                      parseInt(this.getRate(item.stockName))) *\n                                      10 *\n                                      parseInt(this.getRate(item.stockName))\n                                  )}\n                                  className=\"btn-red\"\n                                >\n                                  CLOSE\n                                </button>\n                              ) : (\n                                \"\"\n                              )}\n\n                              <i\n                                class=\"fas fa-trash trashS\"\n                                onClick={this.props.delOrder(item._id)}\n                              >\n                                {\" \"}\n                              </i>\n                            </td>\n                          </tr>\n                        ))\n                      : \"\"}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"tables\" id=\"pending-orders\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>DATE</th>\n                      <th>ID</th>\n                      <th>INSTRUMENT</th>\n                      <th>UNITS</th>\n                      <th>INVESTMENT</th>\n                      <th>DIRECTION</th>\n                      <th>OPEN RATE</th>\n                      <th>MARKET RATE</th>\n                      <th>P&L</th>\n                      <th>PROFIT/LOSS</th>\n                      <th>STATUS</th>\n                    </tr>\n                    {this.props.orders.length > 0\n                      ? this.props.orders.map((item, i) => (\n                          <tr>\n                            <td>\n                              {item.time ? item.time.slice(0, 10) : \"\"}{\" \"}\n                              {/* {item.time\n                                      ? item.time.slice(16).slice(0, 8)\n                                      : \"\"} */}\n                            </td>\n                            <td>00{i + 1}</td>\n                            <td>{item.stockName}</td>\n\n                            <td>\n                              {item.unit\n                                ? ((parseInt(item.unit) / item.buyW) * 10)\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td>\n                              {item.unit\n                                ? (\"$\" + (item.unit / item.buyW) * item.buyW)\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td\n                              className=\"rise\"\n                              style={\n                                item.tag === \"buy\"\n                                  ? { color: \"green\" }\n                                  : { color: \"red\" }\n                              }\n                            >\n                              {item.tag}\n                            </td>\n                            <td>\n                              {item.buyW\n                                ? \"$\" + item.buyW.toString().slice(0, 8)\n                                : \"\"}\n                            </td>\n                            <td>\n                              {item.active ? \"$\" : \"\"}\n                              {item.active\n                                ? this.getRate(item.stockName)\n                                  ? this.getRate(item.stockName)\n                                      .toString()\n                                      .slice(0, 8)\n                                  : \"\"\n                                : \"---\"}\n                            </td>\n                            <td className=\"fall\">\n                              {item.active\n                                ? item.tag === \"buy\"\n                                  ? item.unit / this.getRate(item.stockName) >\n                                    item.stockAmount\n                                    ? (\n                                        \"-\" +\n                                        (item.unit /\n                                          this.getRate(item.stockName) -\n                                          item.stockAmount) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                    : (\n                                        \"+\" +\n                                        (item.stockAmount -\n                                          item.unit /\n                                            this.getRate(item.stockName)) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                  : //sell\n                                  item.unit / this.getRate(item.stockName) <\n                                    item.stockAmount\n                                  ? (\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                      10 *\n                                      this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                  : (\n                                      \"+\" +\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                        10 *\n                                        this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                : \"---\"}\n                            </td>\n                            <td>\n                              {\" \"}\n                              {item.profit}/{item.loss}\n                            </td>\n                            <td style={{ display: \"flex\", width: \"75%\" }}>\n                              <button\n                                className=\"orderBtn\"\n                                className=\"btn-green\"\n                              >\n                                {item.active ? \"Open\" : \"closed\"}\n                              </button>\n\n                              {item.active ? (\n                                <button\n                                  className=\"orderBtn\"\n                                  onClick={this.props.closeOrder(\n                                    item._id,\n                                    (parseInt(item.unit) / parseInt(item.buyW) -\n                                      parseInt(item.stockAmount)) *\n                                      10 *\n                                      parseInt(item.buyW),\n                                    (parseInt(item.unit) /\n                                      parseInt(this.getRate(item.stockName))) *\n                                      10 *\n                                      parseInt(this.getRate(item.stockName))\n                                  )}\n                                  className=\"btn-red\"\n                                >\n                                  CLOSE\n                                </button>\n                              ) : (\n                                \"\"\n                              )}\n\n                              <i\n                                class=\"fas fa-trash trashS\"\n                                onClick={this.props.delOrder(item._id)}\n                              >\n                                {\" \"}\n                              </i>\n                            </td>\n                          </tr>\n                        ))\n                      : \"\"}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Orders;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Account.js",["916","917","918","919","920","921","922","923","924","925","926","927","928","929"],"\nimport React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {};\n  }\n\n  render() {\n    return (\n        <section className=\"real-account-box\">\n        <div className=\"dash-row\">\n          <div className=\"first\">\n            <h6>REAL ACCOUNT</h6>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>USD</span>\n              </div>\n              <div className=\"split moved\">\n                <span>{new Intl.NumberFormat('en-US').format(this.props.user.user.user.wallet)} USD</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>BNB</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 BNB</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>EDO</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 EDO</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>BQX</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 BQX</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>BTCB</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 BTCB</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>BTG</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 BTG</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>CDT</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 CDT</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>CHAT</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 CHAT</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>CLOAK</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 0.00 CLOAK</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>DATA</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 DATA</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>DENT</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 DENT</span>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized\">\n              <div className=\"split\">\n                <span>DGD</span>\n              </div>\n              <div className=\"split moved\">\n                <span>0.00 DGD</span>\n              </div>\n              <div className=\"dash-row\">\n                <a href=\"#\">See all balances</a>\n              </div>\n            </div>\n            <span className=\"close\">\n              <svg className=\"lnr lnr-cross\">\n                <use xlinkHref=\"#lnr-cross\" />\n              </svg>\n            </span>\n          </div>\n          <div className=\"second\">\n            <div className=\"dash-row dash-row-centralized rows\">\n              <div className=\"icon\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"-2 -2 24 24\"\n                  width={20}\n                  height={20}\n                  preserveAspectRatio=\"xMinYMin\"\n                  className=\"icon__icon\"\n                >\n                  <path d=\"M14.335 9.61l-1.817-1.05-1.495 1.446 1.366 1.322 1.946-1.124a.34.34 0 0 0 .172-.297.34.34 0 0 0-.172-.298zM12.21 8.38l-2-1.155-4.384-2.25 4.95 4.793zM5.9 14.966l4.317-2.382 1.864-1.077-1.304-1.263zM5.534 5.17l-.005 9.677 5.002-4.841z\" />\n                  <path d=\"M4 2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H4zm0-2h12a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\" />\n                </svg>\n              </div>\n              <div className=\"details\">\n                <span className=\"name\">Real account</span>\n                <span className=\"amount\">{new Intl.NumberFormat('en-US').format(this.props.user.user.user.wallet)} USD</span>\n              </div>\n              <div className=\"btn\">\n                <a className=\"withdraw\" href=\"#\">\n                  Withdraw\n                </a>\n                <a className=\"credit\" href=\"#\">\n                  Deposit\n                </a>\n              </div>\n            </div>\n            <div className=\"dash-row dash-row-centralized rows-2\">\n              <div className=\"icon\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"-2 -2 24 24\"\n                  width={20}\n                  height={20}\n                  preserveAspectRatio=\"xMinYMin\"\n                  className=\"icon__icon\"\n                >\n                  <path d=\"M14.335 9.61l-1.817-1.05-1.495 1.446 1.366 1.322 1.946-1.124a.34.34 0 0 0 .172-.297.34.34 0 0 0-.172-.298zM12.21 8.38l-2-1.155-4.384-2.25 4.95 4.793zM5.9 14.966l4.317-2.382 1.864-1.077-1.304-1.263zM5.534 5.17l-.005 9.677 5.002-4.841z\" />\n                  <path d=\"M4 2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H4zm0-2h12a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\" />\n                </svg>\n              </div>\n              <div className=\"details\">\n                <span className=\"name\">External fees</span>\n                <span className=\"amount\">0.00 BTC (0.00 $)</span>\n              </div>\n              <div className=\"btn\">\n                <a className=\"withdraw\" href=\"#\">\n                  Pay Now\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Account;\n\n\n\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/SubSidebar.js",["930","931","932"],"import React from \"react\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nimport \"../AccountsAsset/Sidebar.css\";\nimport ish from \"../AccountsAsset/ish.gif\";\n\nexport default function Sidebar(props) {\n  return (\n    <>\n      <div className=\"sidebar-wrapper\">\n        <header className=\"d-flex align-items-center justify-content-between\">\n          <p className=\"watchlist mb-0\">Watchlist</p>\n          <Form inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"BTCETH ...\"\n              className=\"search\"\n            />\n          </Form>\n        </header>\n        <nav>\n          <ul id=\"watching-list\" className=\"mb-0\">\n            <li>Symbol</li>\n            <li className=\"ml-auto\">Last</li>\n            <li className=\"ml-4\">Chng (%)</li>\n          </ul>\n          {props.isTrading ? (\n            <>\n              <div className=\"isTradingI\">AutoCopy Trader is active</div>\n              <img\n                style={{ width: \" 100%\" }}\n                src={\"https://www.virtualdj.com/images/ajax-loading-big.gif\"}\n                alt=\"auto trading\"\n              />\n            </>\n          ) : (\n            \"\"\n          )}\n        </nav>\n        <ul className=\"watchlist-details\"></ul>\n\n        <div className=\"infocurrency-wrapper p-2\">\n          <header\n            className=\"details-wrapper d-flex align-items-center justify-content-between\"\n            style={{ margin: \" 0 0 5%\" }}\n          >\n            <p className=\"watchlist mb-0\">DETAILS</p>\n          </header>\n          <h6>{props.view.symbol}</h6>\n          <p className=\"mb-0 badge-code\">{props.view.tag}</p>\n          <p className=\"price mt-4 mb-0\">\n            {props.getRate(props.view.symbol ? props.view.symbol : \"\")}\n            {/* <span>{(props.orderIsh - props.view.price).toString().slice(0,5)}({(props.view.price-props.orderIsh).toString().slice(0,5)}%)</span> */}\n          </p>\n          {/* <div className=\"mt-3\">\n            <Form.Group controlId=\"formBasicRangeCustom\" className=\"mb-0\">\n              <Form.Control type=\"range\" custom />\n            </Form.Group>\n            <div className=\"infocurrency-range d-flex justify-content-between align-items-center\">\n              <span>{props.view.price}</span>\n              <Form.Label className=\"mb-0\">Day range</Form.Label>\n              <span>{(props.orderIsh - props.view.price).toString().slice(0,5)}</span>\n            </div>\n          </div> */}\n          {/* <div className=\"mt-2\">\n            <MarketDetails name=\"Open Day\" value=\"0.00\" />\n            <MarketDetails name=\"Market Cap\" value=\"0.00\" />\n            <MarketDetails name=\"Volume 24h\" value=\"0.00\" /> \n            <MarketDetails name=\"Direct Volume\" value=\"0.00\" />\n          </div> */}\n          {/* <div className=\"text-center mt-3 mb-2\">\n            <Button variant=\"success\" className=\"btn-load\">\n              Load orders book\n            </Button>\n          </div> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MarketDetails(props) {\n  return (\n    <>\n      <div className=\"market-wrapper d-flex align-items-center\">\n        <span>{props.name}</span>\n        <div></div>\n        <span>{props.value}</span>\n      </div>\n    </>\n  );\n}\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/UserProfile.js",["933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <section className=\"profile-box\">\n        <div className=\"change-profile\">\n          <div className=\"dash-row dash-row-centralized\">\n            <div className=\"input\">\n              <label htmlFor=\"profile-image\">\n                <img src=\"images/profile.jpg\" />\n              </label>\n              <input type=\"file\" name=\"profile-image\" id=\"profile-image\" />\n            </div>\n            <div className=\"user\">\n              <span className=\"name\">Trade</span>\n              <span className=\"email\">admin@trade.ltd</span>\n            </div>\n          </div>\n        </div>\n        {/* Tabs */}\n        <div className=\"tabs\">\n          <a className=\"active\" data-tab=\"profile\">\n            Profile\n          </a>\n          <a data-tab=\"notification\">Notification</a>\n          <a data-tab=\"security\">Security</a>\n          <a data-tab=\"exchanges\">Exchanges</a>\n          <a data-tab=\"withdraw/wallets\">Withdraw / Wallets</a>\n          <a data-action=\"logout\">Logout</a>\n        </div>\n        <div data-tab-dtl=\"profile\" className=\"tabs-details\">\n          <form autoComplete=\"off\">\n            <div className=\"dash-row\">\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Your Name</label>\n                  <input type=\"text\" name=\"name\" id=\"name\" />\n                </div>\n              </div>\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Your Email Address</label>\n                  <input type=\"email\" name=\"email\" id=\"email\" />\n                </div>\n              </div>\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Language</label>\n                  <select\n                    name=\"language\"\n                    id=\"language\"\n                    data-placeholder=\"Choose a Language...\"\n                  >\n                    <option value=\"Afrikaans\">Afrikaans</option>\n                    <option value=\"Albanian\">Albanian</option>\n                    <option value=\"Arabic\">Arabic</option>\n                    <option value=\"Armenian\">Armenian</option>\n                    <option value=\"Basque\">Basque</option>\n                    <option value=\"Bengali\">Bengali</option>\n                    <option value=\"Bulgarian\">Bulgarian</option>\n                    <option value=\"Catalan\">Catalan</option>\n                    <option value=\"Cambodian\">Cambodian</option>\n                    <option value=\"Chinese (Mandarin)\">\n                      Chinese (Mandarin)\n                    </option>\n                    <option value=\"Croatian\">Croatian</option>\n                    <option value=\"Czech\">Czech</option>\n                    <option value=\"Danish\">Danish</option>\n                    <option value=\"Dutch\">Dutch</option>\n                    <option value=\"English\">English</option>\n                    <option value=\"Estonian\">Estonian</option>\n                    <option value=\"Fiji\">Fiji</option>\n                    <option value=\"Finnish\">Finnish</option>\n                    <option value=\"French\">French</option>\n                    <option value=\"Georgian\">Georgian</option>\n                    <option value=\"German\">German</option>\n                    <option value=\"Greek\">Greek</option>\n                    <option value=\"Gujarati\">Gujarati</option>\n                    <option value=\"Hebrew\">Hebrew</option>\n                    <option value=\"Hindi\">Hindi</option>\n                    <option value=\"Hungarian\">Hungarian</option>\n                    <option value=\"Icelandic\">Icelandic</option>\n                    <option value=\"Indonesian\">Indonesian</option>\n                    <option value=\"Irish\">Irish</option>\n                    <option value=\"Italian\">Italian</option>\n                    <option value=\"Japanese\">Japanese</option>\n                    <option value=\"Javanese\">Javanese</option>\n                    <option value=\"Korean\">Korean</option>\n                    <option value=\"Latin\">Latin</option>\n                    <option value=\"Latvian\">Latvian</option>\n                    <option value=\"Lithuanian\">Lithuanian</option>\n                    <option value=\"Macedonian\">Macedonian</option>\n                    <option value=\"Malay\">Malay</option>\n                    <option value=\"Malayalam\">Malayalam</option>\n                    <option value=\"Maltese\">Maltese</option>\n                    <option value=\"Maori\">Maori</option>\n                    <option value=\"Marathi\">Marathi</option>\n                    <option value=\"Mongolian\">Mongolian</option>\n                    <option value=\"Nepali\">Nepali</option>\n                    <option value=\"Norwegian\">Norwegian</option>\n                    <option value=\"Persian\">Persian</option>\n                    <option value=\"Polish\">Polish</option>\n                    <option value=\"Portuguese\">Portuguese</option>\n                    <option value=\"Punjabi\">Punjabi</option>\n                    <option value=\"Quechua\">Quechua</option>\n                    <option value=\"Romanian\">Romanian</option>\n                    <option value=\"Russian\">Russian</option>\n                    <option value=\"Samoan\">Samoan</option>\n                    <option value=\"Serbian\">Serbian</option>\n                    <option value=\"Slovak\">Slovak</option>\n                    <option value=\"Slovenian\">Slovenian</option>\n                    <option value=\"Spanish\">Spanish</option>\n                    <option value=\"Swahili\">Swahili</option>\n                    <option value=\"Swedish \">Swedish </option>\n                    <option value=\"Tamil\">Tamil</option>\n                    <option value=\"Tatar\">Tatar</option>\n                    <option value=\"Telugu\">Telugu</option>\n                    <option value=\"Thai\">Thai</option>\n                    <option value=\"Tibetan\">Tibetan</option>\n                    <option value=\"Tonga\">Tonga</option>\n                    <option value=\"Turkish\">Turkish</option>\n                    <option value=\"Ukrainian\">Ukrainian</option>\n                    <option value=\"Urdu\">Urdu</option>\n                    <option value=\"Uzbek\">Uzbek</option>\n                    <option value=\"Vietnamese\">Vietnamese</option>\n                    <option value=\"Welsh\">Welsh</option>\n                    <option value=\"Xhosa\">Xhosa</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Currency</label>\n                  <select name=\"currency\" id=\"currency\">\n                    <option value=\"AED\">United Arab Emirates dirham</option>\n                    <option value=\"AFN\">Afghan afghani</option>\n                    <option value=\"ALL\">Albanian lek</option>\n                    <option value=\"AMD\">Armenian dram</option>\n                    <option value=\"AOA\">Angolan kwanza</option>\n                    <option value=\"ARS\">Argentine peso</option>\n                    <option value=\"AUD\">Australian dollar</option>\n                    <option value=\"AWG\">Aruban florin</option>\n                    <option value=\"AZN\">Azerbaijani manat</option>\n                    <option value=\"BAM\">\n                      Bosnia and Herzegovina convertible mark\n                    </option>\n                    <option value=\"BBD\">Barbadian dollar</option>\n                    <option value=\"BDT\">Bangladeshi taka</option>\n                    <option value=\"BGN\">Bulgarian lev</option>\n                    <option value=\"BHD\">Bahraini dinar</option>\n                    <option value=\"BIF\">Burundian franc</option>\n                    <option value=\"BMD\">Bermudian dollar</option>\n                    <option value=\"BND\">Brunei dollar</option>\n                    <option value=\"BOB\">Bolivian boliviano</option>\n                    <option value=\"BRL\">Brazilian real</option>\n                    <option value=\"BSD\">Bahamian dollar</option>\n                    <option value=\"BTN\">Bhutanese ngultrum</option>\n                    <option value=\"BWP\">Botswana pula</option>\n                    <option value=\"BYR\">Belarusian ruble</option>\n                    <option value=\"BZD\">Belize dollar</option>\n                    <option value=\"CAD\">Canadian dollar</option>\n                    <option value=\"CDF\">Congolese franc</option>\n                    <option value=\"CHF\">Swiss franc</option>\n                    <option value=\"CLP\">Chilean peso</option>\n                    <option value=\"CNY\">Chinese yuan</option>\n                    <option value=\"COP\">Colombian peso</option>\n                    <option value=\"CRC\">Costa Rican colón</option>\n                    <option value=\"CUP\">Cuban convertible peso</option>\n                    <option value=\"CVE\">Cape Verdean escudo</option>\n                    <option value=\"CZK\">Czech koruna</option>\n                    <option value=\"DJF\">Djiboutian franc</option>\n                    <option value=\"DKK\">Danish krone</option>\n                    <option value=\"DOP\">Dominican peso</option>\n                    <option value=\"DZD\">Algerian dinar</option>\n                    <option value=\"EGP\">Egyptian pound</option>\n                    <option value=\"ERN\">Eritrean nakfa</option>\n                    <option value=\"ETB\">Ethiopian birr</option>\n                    <option value=\"EUR\">Euro</option>\n                    <option value=\"FJD\">Fijian dollar</option>\n                    <option value=\"FKP\">Falkland Islands pound</option>\n                    <option value=\"GBP\">British pound</option>\n                    <option value=\"GEL\">Georgian lari</option>\n                    <option value=\"GHS\">Ghana cedi</option>\n                    <option value=\"GMD\">Gambian dalasi</option>\n                    <option value=\"GNF\">Guinean franc</option>\n                    <option value=\"GTQ\">Guatemalan quetzal</option>\n                    <option value=\"GYD\">Guyanese dollar</option>\n                    <option value=\"HKD\">Hong Kong dollar</option>\n                    <option value=\"HNL\">Honduran lempira</option>\n                    <option value=\"HRK\">Croatian kuna</option>\n                    <option value=\"HTG\">Haitian gourde</option>\n                    <option value=\"HUF\">Hungarian forint</option>\n                    <option value=\"IDR\">Indonesian rupiah</option>\n                    <option value=\"ILS\">Israeli new shekel</option>\n                    <option value=\"IMP\">Manx pound</option>\n                    <option value=\"INR\">Indian rupee</option>\n                    <option value=\"IQD\">Iraqi dinar</option>\n                    <option value=\"IRR\">Iranian rial</option>\n                    <option value=\"ISK\">Icelandic króna</option>\n                    <option value=\"JEP\">Jersey pound</option>\n                    <option value=\"JMD\">Jamaican dollar</option>\n                    <option value=\"JOD\">Jordanian dinar</option>\n                    <option value=\"JPY\">Japanese yen</option>\n                    <option value=\"KES\">Kenyan shilling</option>\n                    <option value=\"KGS\">Kyrgyzstani som</option>\n                    <option value=\"KHR\">Cambodian riel</option>\n                    <option value=\"KMF\">Comorian franc</option>\n                    <option value=\"KPW\">North Korean won</option>\n                    <option value=\"KRW\">South Korean won</option>\n                    <option value=\"KWD\">Kuwaiti dinar</option>\n                    <option value=\"KYD\">Cayman Islands dollar</option>\n                    <option value=\"KZT\">Kazakhstani tenge</option>\n                    <option value=\"LAK\">Lao kip</option>\n                    <option value=\"LBP\">Lebanese pound</option>\n                    <option value=\"LKR\">Sri Lankan rupee</option>\n                    <option value=\"LRD\">Liberian dollar</option>\n                    <option value=\"LSL\">Lesotho loti</option>\n                    <option value=\"LTL\">Lithuanian litas</option>\n                    <option value=\"LVL\">Latvian lats</option>\n                    <option value=\"LYD\">Libyan dinar</option>\n                    <option value=\"MAD\">Moroccan dirham</option>\n                    <option value=\"MDL\">Moldovan leu</option>\n                    <option value=\"MGA\">Malagasy ariary</option>\n                    <option value=\"MKD\">Macedonian denar</option>\n                    <option value=\"MMK\">Burmese kyat</option>\n                    <option value=\"MNT\">Mongolian tögrög</option>\n                    <option value=\"MOP\">Macanese pataca</option>\n                    <option value=\"MRO\">Mauritanian ouguiya</option>\n                    <option value=\"MUR\">Mauritian rupee</option>\n                    <option value=\"MVR\">Maldivian rufiyaa</option>\n                    <option value=\"MWK\">Malawian kwacha</option>\n                    <option value=\"MXN\">Mexican peso</option>\n                    <option value=\"MYR\">Malaysian ringgit</option>\n                    <option value=\"MZN\">Mozambican metical</option>\n                    <option value=\"NAD\">Namibian dollar</option>\n                    <option value=\"NGN\">UKn naira</option>\n                    <option value=\"NIO\">Nicaraguan córdoba</option>\n                    <option value=\"NOK\">Norwegian krone</option>\n                    <option value=\"NPR\">Nepalese rupee</option>\n                    <option value=\"NZD\">New Zealand dollar</option>\n                    <option value=\"OMR\">Omani rial</option>\n                    <option value=\"PAB\">Panamanian balboa</option>\n                    <option value=\"PEN\">Peruvian nuevo sol</option>\n                    <option value=\"PGK\">Papua New Guinean kina</option>\n                    <option value=\"PHP\">Philippine peso</option>\n                    <option value=\"PKR\">Pakistani rupee</option>\n                    <option value=\"PLN\">Polish złoty</option>\n                    <option value=\"PRB\">Transnistrian ruble</option>\n                    <option value=\"PYG\">Paraguayan guaraní</option>\n                    <option value=\"QAR\">Qatari riyal</option>\n                    <option value=\"RON\">Romanian leu</option>\n                    <option value=\"RSD\">Serbian dinar</option>\n                    <option value=\"RUB\">Russian ruble</option>\n                    <option value=\"RWF\">Rwandan franc</option>\n                    <option value=\"SAR\">Saudi riyal</option>\n                    <option value=\"SBD\">Solomon Islands dollar</option>\n                    <option value=\"SCR\">Seychellois rupee</option>\n                    <option value=\"SDG\">Singapore dollar</option>\n                    <option value=\"SEK\">Swedish krona</option>\n                    <option value=\"SGD\">Singapore dollar</option>\n                    <option value=\"SHP\">Saint Helena pound</option>\n                    <option value=\"SLL\">Sierra Leonean leone</option>\n                    <option value=\"SOS\">Somali shilling</option>\n                    <option value=\"SRD\">Surinamese dollar</option>\n                    <option value=\"SSP\">South Sudanese pound</option>\n                    <option value=\"STD\">São Tomé and Príncipe dobra</option>\n                    <option value=\"SVC\">Salvadoran colón</option>\n                    <option value=\"SYP\">Syrian pound</option>\n                    <option value=\"SZL\">Swazi lilangeni</option>\n                    <option value=\"THB\">Thai baht</option>\n                    <option value=\"TJS\">Tajikistani somoni</option>\n                    <option value=\"TMT\">Turkmenistan manat</option>\n                    <option value=\"TND\">Tunisian dinar</option>\n                    <option value=\"TOP\">Tongan paʻanga</option>\n                    <option value=\"TRY\">Turkish lira</option>\n                    <option value=\"TTD\">Trinidad and Tobago dollar</option>\n                    <option value=\"TWD\">New Taiwan dollar</option>\n                    <option value=\"TZS\">Tanzanian shilling</option>\n                    <option value=\"UAH\">Ukrainian hryvnia</option>\n                    <option value=\"UGX\">Ugandan shilling</option>\n                    <option selected value=\"USD\">\n                      United States dollar\n                    </option>\n                    <option value=\"UYU\">Uruguayan peso</option>\n                    <option value=\"UZS\">Uzbekistani som</option>\n                    <option value=\"VEF\">Venezuelan bolívar</option>\n                    <option value=\"VND\">Vietnamese đồng</option>\n                    <option value=\"VUV\">Vanuatu vatu</option>\n                    <option value=\"WST\">Samoan tālā</option>\n                    <option value=\"XAF\">Central African CFA franc</option>\n                    <option value=\"XCD\">East Caribbean dollar</option>\n                    <option value=\"XOF\">West African CFA franc</option>\n                    <option value=\"XPF\">CFP franc</option>\n                    <option value=\"YER\">Yemeni rial</option>\n                    <option value=\"ZAR\">South African rand</option>\n                    <option value=\"ZMW\">Zambian kwacha</option>\n                    <option value=\"ZWL\">Zimbabwean dollar</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Type Chart</label>\n                  <select name=\"type-chart\" id=\"type-chart\">\n                    <option value=\"Default\">Default</option>\n                    <option value=\"Trading View\">Trading View</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"split-50\" />\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Change Password</label>\n                  <input type=\"password\" name=\"password\" id=\"password\" />\n                </div>\n              </div>\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <label>Verify Password</label>\n                  <input type=\"password\" name=\"vpassword\" id=\"vpassword\" />\n                </div>\n              </div>\n              <div className=\"split-50\">\n                <div className=\"dash-form-box\">\n                  <a data-action=\"close\">Back</a>\n                </div>\n              </div>\n              <div className=\"split-50\" style={{ textAlign: \"right\" }}>\n                <div className=\"dash-form-box\">\n                  <button type=\"submit\">Validate</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div data-tab-dtl=\"notification\" className=\"tabs-details\">\n          <div className=\"dash-row dash-row-centralized\">\n            <div className=\"split-50\">\n              <h3>Mobile, browser, windows notifications</h3>\n              <p></p>\n              <ul>\n                <li>Create price alert</li>\n              </ul>\n              <p />\n              <div className=\"dash-form-box\">\n                <input\n                  type=\"text\"\n                  name=\"token\"\n                  id=\"token\"\n                  placeholder=\"Your PushBullet Access Token\"\n                />\n              </div>\n              <div className=\"dash-form-box\" style={{ textAlign: \"right\" }}>\n                <button type=\"submit\">Save</button>\n              </div>\n            </div>\n            <div className=\"split-50\">\n              <img src=\"images/mobile.png\" />\n            </div>\n          </div>\n          <div className=\"other-dtls\">\n            <h3>I need help !</h3>\n            <ul>\n              <li>\n                Download PushBullet app on your phone (available for Android\n                &amp; iOS)\n              </li>\n              <li>Create an account on it</li>\n              <li>\n                Connect with your new account here :{\" \"}\n                <a href=\"https://www.pushbullet.com/signin\" target=\"_blank\">\n                  https://www.pushbullet.com/signin\n                </a>\n              </li>\n              <li>Go on Settings &gt; Account and create an Access token</li>\n              <li>Copy the key and paste it on the fill and click on save.</li>\n              <li>\n                An notification will be sent to check if connexion is\n                successful.\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div data-tab-dtl=\"security\" className=\"tabs-details\">\n          <div className=\"dash-row\">\n            <div className=\"google-authenticator\">\n              <center>\n                <h2 style={{ color: \"#999\" }}>\n                  Secure your account with <br />{\" \"}\n                  <span style={{ color: \"#000\" }}>Google Authenticator</span>\n                </h2>\n                <div className=\"phone-platforms\">\n                  <a href=\"#\">Download on Android</a>\n                  <a href=\"#\">Download on iOS</a>\n                </div>\n              </center>\n              <br />\n              <hr />\n              <br />\n              <center>\n                <span className=\"font-weight-bold\">\n                  Scan the QRcode, enter your code and validate\n                </span>\n              </center>\n            </div>\n            <div className=\"qr-code\">\n              <div className=\"box-shadow\">\n                <img className=\"img-fluid\" src=\"images/qr-code.png\" />\n                <input type=\"password\" name=\"password\" placeholder=\"*****\" />\n                <button>Validate</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"login-history\">\n            <h3>Login history</h3>\n            <table className=\"dash-table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div>\n                        <img src=\"images/ng.png\" />\n                      </div>\n                      <div>\n                        <span> (UK)</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>197.255.252.218</td>\n                  <td>02/03/2021 13:40:50</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div>\n                        <img src=\"images/ng.png\" />\n                      </div>\n                      <div>\n                        <span> (UK)</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>197.255.252.218</td>\n                  <td>02/03/2021 13:40:50</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div>\n                        <img src=\"images/ng.png\" />\n                      </div>\n                      <div>\n                        <span> (UK)</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>197.255.252.218</td>\n                  <td>02/03/2021 13:40:50</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div>\n                        <img src=\"images/ng.png\" />\n                      </div>\n                      <div>\n                        <span> (UK)</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>197.255.252.218</td>\n                  <td>02/03/2021 13:40:50</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div>\n                        <img src=\"images/ng.png\" />\n                      </div>\n                      <div>\n                        <span> (UK)</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>197.255.252.218</td>\n                  <td>02/03/2021 13:40:50</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div>\n                        <img src=\"images/ng.png\" />\n                      </div>\n                      <div>\n                        <span> (UK)</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>197.255.252.218</td>\n                  <td>02/03/2021 13:40:50</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div data-tab-dtl=\"exchanges\" className=\"tabs-details\">\n          <img\n            style={{\n              maxWidth: 350,\n              width: \"100%\",\n              display: \"block\",\n              margin: \"0 auto\",\n            }}\n            src=\"images/undraw_prototyping_process_rswj.svg\"\n          />\n          <center>\n            <button className=\"dash-btn\">\n              I want to use external exchange\n            </button>\n          </center>\n        </div>\n        <div data-tab-dtl=\"withdraw/wallets\" className=\"tabs-details\">\n          <div style={{ padding: \"5px 15px\" }}>\n            <button style={{ float: \"right\" }} className=\"dash-btn\">\n              ADD NEW\n            </button>\n            <div className=\"dash-row\">\n              <div className=\"dash-sec-4 box-shadow\">\n                <a href=\"#\">\n                  <img\n                    style={{\n                      width: 120,\n                      display: \"block\",\n                      margin: \"0 auto\",\n                      height: 80,\n                    }}\n                    src=\"images/paypal-payment.svg\"\n                  />\n                </a>\n              </div>\n              <div className=\"dash-sec-4 box-shadow\">\n                <a href=\"#\">\n                  <img\n                    style={{\n                      width: 120,\n                      display: \"block\",\n                      margin: \"0 auto\",\n                      height: 80,\n                    }}\n                    src=\"images/banktransfert.svg\"\n                  />\n                </a>\n              </div>\n              <div className=\"dash-sec-4 box-shadow\">\n                <a href=\"#\">\n                  <img\n                    style={{\n                      width: 120,\n                      display: \"block\",\n                      margin: \"0 auto\",\n                      height: 80,\n                    }}\n                    src=\"images/cryptocurrencies.svg\"\n                  />\n                </a>\n              </div>\n            </div>\n            <hr />\n            <div className=\"shadowed\">\n              <div className=\"dash-row dash-row-centralized\">\n                <div style={{ width: \"50%\", textAlign: \"left\" }}>\n                  Bank Transfer\n                </div>\n                <div style={{ width: \"50%\", textAlign: \"right\" }}>\n                  <button\n                    style={{\n                      backgroundColor: \"#066fdc\",\n                      fontSize: 12,\n                      padding: \"5px 8px\",\n                    }}\n                    className=\"dash-btn shadowed-btn\"\n                  >\n                    Details\n                  </button>\n                </div>\n                <div\n                  className=\"all-dtls\"\n                  style={{ width: \"100%\", display: \"none\" }}\n                >\n                  <div\n                    style={{ width: \"100%\", fontSize: 14, padding: \"10px 0\" }}\n                    className=\"details\"\n                  >\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div style={{ width: \"50%\", textAlign: \"left\" }}>\n                        Bank Name\n                      </div>\n                      <div style={{ width: \"50%\", textAlign: \"right\" }}>\n                        Test\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    style={{ width: \"100%\", fontSize: 14, padding: \"10px 0\" }}\n                    className=\"details\"\n                  >\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div style={{ width: \"50%\", textAlign: \"left\" }}>\n                        Bank Name\n                      </div>\n                      <div style={{ width: \"50%\", textAlign: \"right\" }}>\n                        Test\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    style={{ width: \"100%\", textAlign: \"right\" }}\n                    className=\"remove-btn\"\n                  >\n                    <button\n                      style={{\n                        backgroundColor: \"#ff0000\",\n                        fontSize: 12,\n                        padding: \"5px 8px\",\n                      }}\n                      className=\"dash-btn\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"shadowed\">\n              <div className=\"dash-row dash-row-centralized\">\n                <div style={{ width: \"50%\", textAlign: \"left\" }}>\n                  Bank Transfer\n                </div>\n                <div style={{ width: \"50%\", textAlign: \"right\" }}>\n                  <button\n                    style={{\n                      backgroundColor: \"#066fdc\",\n                      fontSize: 12,\n                      padding: \"5px 8px\",\n                    }}\n                    className=\"dash-btn shadowed-btn\"\n                  >\n                    Details\n                  </button>\n                </div>\n                <div\n                  className=\"all-dtls\"\n                  style={{ width: \"100%\", display: \"none\" }}\n                >\n                  <div\n                    style={{ width: \"100%\", fontSize: 14, padding: \"10px 0\" }}\n                    className=\"details\"\n                  >\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div style={{ width: \"50%\", textAlign: \"left\" }}>\n                        Bank Name\n                      </div>\n                      <div style={{ width: \"50%\", textAlign: \"right\" }}>\n                        Test\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    style={{ width: \"100%\", fontSize: 14, padding: \"10px 0\" }}\n                    className=\"details\"\n                  >\n                    <div className=\"dash-row dash-row-centralized\">\n                      <div style={{ width: \"50%\", textAlign: \"left\" }}>\n                        Bank Name\n                      </div>\n                      <div style={{ width: \"50%\", textAlign: \"right\" }}>\n                        Test\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    style={{ width: \"100%\", textAlign: \"right\" }}\n                    className=\"remove-btn\"\n                  >\n                    <button\n                      style={{\n                        backgroundColor: \"#ff0000\",\n                        fontSize: 12,\n                        padding: \"5px 8px\",\n                      }}\n                      className=\"dash-btn\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <span className=\"close\">\n          <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n            <title>cross</title>\n            <path\n              className=\"path1\"\n              d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n            />\n          </svg>\n        </span>\n      </section>\n    );\n  }\n}\n\nexport default UserProfile;\n","/home/codabae/Documents/Projects/TradeTroyProject/prolivetrader.netFront/src/Component/Stock.js",["969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987"],"import React, { useState, useEffect, Component } from \"react\";\nimport Favicon from \"react-favicon\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Stock extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      real: [],\n      default : []\n    };\n  }\n\n  render() {\n\n    return (\n      <>\n      \n        <div className=\"stock\">\n          <div\n            className=\"dash-row sss\"\n            style={\n              this.props.verifyS\n                ? { flexWrap: \"nowrap\", overflow: \"auto\" }\n                : { flexWrap: \"nowrap\", overflow: \"auto\", width: \"auto\" }\n            }\n          >\n            <>\n              {this.props.addCurrentItemC.length > 0\n                ? this.props.addCurrentItemC.map((item, i) => (\n                    <div\n                      className={\n                        this.props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      style={{}}\n                      onClick={this.props.handleViewUpdate(item)}\n                    >\n                      <img\n                        style={{ width: \"4vh\", height: \"3.4vh\" }}\n                        src={`https://cryptologos.cc/logos/${\n                          item.symbol === \"ETHUSD\"\n                            ? \"ethereum\"\n                            : item.symbol === \"BTCUSD\"\n                            ? \"bitcoin\"\n                            : item.symbol === \"LTCUSD\"\n                            ? \"litecoin\"\n                            : \"\"\n                        }-${item.symbol.slice(0, 3).toLowerCase()}-logo.png`}\n                      />\n\n                      <div style={{ marginLeft: \"10%\" }}>\n                        <span className=\"name\"> {item.symbol}</span>\n                        <span className=\"currency\">Crypto</span>\n                      </div>\n\n                      <span className=\"close\" onClick={this.props.handleRC(item)}>\n                        <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                          <title>cross</title>\n                          <path\n                            className=\"path1\"\n                            d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                          />\n                        </svg>\n                      </span>\n                    </div>\n                  ))\n                : \"\"}\n            </>\n\n            <>\n              {this.props.btcP ? (\n                <div\n                  className={\n                    this.props.bitP\n                      ? this.props.activeS === this.props.bitP.symbol\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={this.props.handleViewUpdate(\n                    this.props.bitP ? this.props.bitP : []\n                  )}\n                >\n                  <img\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                    src={`https://cryptologos.cc/logos/bitcoin-btc-logo.png`}\n                  />\n\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\"> BTCUSD</span>\n                    <span className=\"currency\">Crypto</span>\n                  </div>\n\n                  <span className=\"close\" onClick={this.props.closeBitP}>\n                    <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                      <title>cross</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                      />\n                    </svg>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {this.props.gasP ? (\n                <div\n                  className={\n                    this.props.gasP\n                      ? this.props.activeS === \"GAS\"\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={this.props.handleViewUpdate(\n                    this.props.tslaP\n                      ? { symbol: \"GAS\", price: this.props.tslaP.price }\n                      : []\n                  )}\n                >\n                  <img\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                    src={`https://st2.depositphotos.com/4160903/6037/i/950/depositphotos_60374771-stock-photo-golden-shiny-dollar-symbol-isolated.jpg`}\n                  />\n\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\"> GAS</span>\n                    <span className=\"currency\">Commodity</span>\n                  </div>\n\n                  <span className=\"close\" onClick={this.props.closeGasP}>\n                    <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                      <title>cross</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                      />\n                    </svg>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {this.props.ethP ? (\n                <div\n                  className={\n                    this.props.ethP\n                      ? this.props.activeS === this.props.ethP.symbol\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={this.props.handleViewUpdate(\n                    this.props.ethP ? this.props.ethP : []\n                  )}\n                >\n                  <img\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                    src={`https://cryptologos.cc/logos/ethereum-eth-logo.png`}\n                  />\n\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\"> ETHUSD</span>\n                    <span className=\"currency\">Crypto</span>\n                  </div>\n\n                  <span className=\"close\" onClick={this.props.closeEthp}>\n                    <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                      <title>cross</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                      />\n                    </svg>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {this.props.tslaP ? (\n                <div\n                  className={\n                    this.props.tslaP\n                      ? this.props.activeS === \"TSLA\"\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={this.props.handleViewUpdate(\n                    this.props.tslaP\n                      ? { symbol: \"TSLA\", price: this.props.tslaP.price }\n                      : []\n                  )}\n                >\n                  <img\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                    src={`https://storage.googleapis.com/iex/api/logos/TSLA.png`}\n                  />\n\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\"> TSLA</span>\n                    <span className=\"currency\">Stock</span>\n                  </div>\n\n                  <span className=\"close\" onClick={this.props.closeTslaP}>\n                    <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                      <title>cross</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                      />\n                    </svg>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {this.props.aaplP ? (\n                <div\n                  className={\n                    this.props.aaplP\n                      ? this.props.activeS === \"AAPL\"\n                        ? \"stock-box activeStock\"\n                        : \"stock-box\"\n                      : \"stock-box\"\n                  }\n                  onClick={this.props.handleViewUpdate(\n                    this.props.tslaP\n                      ? { symbol: \"AAPL\", price: this.props.aaplP.price }\n                      : []\n                  )}\n                >\n                  <img\n                    style={{ width: \"4vh\", height: \"3.4vh\" }}\n                    src={`https://storage.googleapis.com/iex/api/logos/AAPL.png`}\n                  />\n\n                  <div style={{ marginLeft: \"10%\" }}>\n                    <span className=\"name\"> AAPL</span>\n                    <span className=\"currency\">Stock</span>\n                  </div>\n\n                  <span className=\"close\" onClick={this.props.closeAaplP}>\n                    <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                      <title>cross</title>\n                      <path\n                        className=\"path1\"\n                        d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                      />\n                    </svg>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </>\n            <>\n              {this.props.addCurrentItemFx.length > 0\n                ? this.props.addCurrentItemFx.map((item, i) => (\n                    <div\n                      className={\n                        this.props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={this.props.handleViewUpdate(item)}\n                    >\n                      <img\n                        style={{ width: \"4vh\", height: \"3.4vh\" }}\n                        src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                      />\n                      <div style={{ marginLeft: \"10%\" }}>\n                        <span className=\"name\"> {item.symbol}</span>\n                        <span className=\"currency\">Forex</span>\n                      </div>\n                      <span className=\"close\" onClick={this.props.handleRFx(item)}>\n                        <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                          <title>cross</title>\n                          <path\n                            className=\"path1\"\n                            d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                          />\n                        </svg>\n                      </span>\n                    </div>\n                  ))\n                : \"\"}\n            </>\n            <>\n              {this.props.addCurrentItemIex.length > 0\n                ? this.props.addCurrentItemIex.map((item, i) => (\n                    <div\n                      className={\n                        this.props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={this.props.handleViewUpdate(item)}\n                    >\n                      <img\n                        style={{ width: \"4vh\", height: \"3.4vh\" }}\n                        src={`https://storage.googleapis.com/iex/api/logos/${item.symbol}.png`}\n                      />\n                      <div style={{ marginLeft: \"10%\" }}>\n                        <span className=\"name\">{item.symbol}</span>\n                        <span className=\"currency\">Stock </span>\n                      </div>\n                      <span className=\"close\" onClick={this.props.handleRIex(item)}>\n                        <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                          <title>cross</title>\n                          <path\n                            className=\"path1\"\n                            d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                          />\n                        </svg>\n                      </span>\n                    </div>\n                  ))\n                : \"\"}\n            </>\n            <>\n              {this.props.addCurrentItemCum.length > 0\n                ? this.props.addCurrentItemCum.map((item, i) => (\n                    <div\n                      className={\n                        this.props.activeS === item.symbol\n                          ? \"stock-box activeStock\"\n                          : \"stock-box\"\n                      }\n                      onClick={this.props.handleViewUpdate(item)}\n                    >\n                      <img\n                        style={{ width: \"4vh\", height: \"3.4vh\" }}\n                        src={`https://outsourcing.techzis.com/wp-content/uploads/2020/06/png-transparent-gold-dollar-sign-dollar-sign-united-states-dollar-currency-symbol-dollar-trademark-sign-computer-icons.png`}\n                      />\n                      <div style={{ marginLeft: \"10%\" }}>\n                        <span className=\"name\">{item.symbol}</span>\n                        <span className=\"currency\">Commodities</span>\n                      </div>\n                      <span className=\"close\" onClick={this.props.handleRCum(item)}>\n                        <svg id=\"lnr-cross \" viewBox=\"0 0 1024 1024\">\n                          <title>cross</title>\n                          <path\n                            className=\"path1\"\n                            d=\"M548.203 537.6l289.099-289.098c9.998-9.998 9.998-26.206 0-36.205-9.997-9.997-26.206-9.997-36.203 0l-289.099 289.099-289.098-289.099c-9.998-9.997-26.206-9.997-36.205 0-9.997 9.998-9.997 26.206 0 36.205l289.099 289.098-289.099 289.099c-9.997 9.997-9.997 26.206 0 36.203 5 4.998 11.55 7.498 18.102 7.498s13.102-2.499 18.102-7.499l289.098-289.098 289.099 289.099c4.998 4.998 11.549 7.498 18.101 7.498s13.102-2.499 18.101-7.499c9.998-9.997 9.998-26.206 0-36.203l-289.098-289.098z\"\n                          />\n                        </svg>\n                      </span>\n                    </div>\n                  ))\n                : \"\"}\n            </>\n\n           \n          </div>\n          <div id=\"add-to-group\" onClick={this.props.openForex} className=\"search\">\n              <svg\n                version=\"1.1\"\n                id=\"Capa_1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 31.444 31.444\"\n                style={{ enableBackground: \"new 0 0 31.444 31.444\" }}\n                xmlSpace=\"preserve\"\n              >\n                <path\n                  d=\"M1.119,16.841c-0.619,0-1.111-0.508-1.111-1.127c0-0.619,0.492-1.111,1.111-1.111h13.475V1.127 C14.595,0.508,15.103,0,15.722,0c0.619,0,1.111,0.508,1.111,1.127v13.476h13.475c0.619,0,1.127,0.492,1.127,1.111 c0,0.619-0.508,1.127-1.127,1.127H16.833v13.476c0,0.619-0.492,1.127-1.111,1.127c-0.619,0-1.127-0.508-1.127-1.127V16.841H1.119z\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Stock;\n",{"ruleId":"988","replacedBy":"989"},{"ruleId":"990","replacedBy":"991"},{"ruleId":"992","severity":1,"message":"993","line":40,"column":7,"nodeType":"994","messageId":"995","endLine":40,"endColumn":10},{"ruleId":"992","severity":1,"message":"996","line":41,"column":7,"nodeType":"994","messageId":"995","endLine":41,"endColumn":12},{"ruleId":"992","severity":1,"message":"997","line":47,"column":20,"nodeType":"994","messageId":"995","endLine":47,"endColumn":31},{"ruleId":"992","severity":1,"message":"998","line":6,"column":10,"nodeType":"994","messageId":"995","endLine":6,"endColumn":19},{"ruleId":"992","severity":1,"message":"999","line":6,"column":21,"nodeType":"994","messageId":"995","endLine":6,"endColumn":24},{"ruleId":"992","severity":1,"message":"1000","line":6,"column":26,"nodeType":"994","messageId":"995","endLine":6,"endColumn":29},{"ruleId":"992","severity":1,"message":"993","line":12,"column":7,"nodeType":"994","messageId":"995","endLine":12,"endColumn":10},{"ruleId":"1001","severity":1,"message":"1002","line":198,"column":23,"nodeType":"1003","endLine":198,"endColumn":34},{"ruleId":"1001","severity":1,"message":"1002","line":199,"column":23,"nodeType":"1003","endLine":199,"endColumn":34},{"ruleId":"1001","severity":1,"message":"1002","line":200,"column":23,"nodeType":"1003","endLine":200,"endColumn":34},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1013","line":307,"column":11,"nodeType":"994","messageId":"995","endLine":307,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":310,"column":11,"nodeType":"994","messageId":"995","endLine":310,"endColumn":16},{"ruleId":"1015","severity":1,"message":"1016","line":899,"column":27,"nodeType":"1003","endLine":899,"endColumn":55},{"ruleId":"1015","severity":1,"message":"1016","line":963,"column":27,"nodeType":"1003","endLine":963,"endColumn":55},{"ruleId":"1015","severity":1,"message":"1016","line":1027,"column":27,"nodeType":"1003","endLine":1027,"endColumn":55},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1013","line":307,"column":11,"nodeType":"994","messageId":"995","endLine":307,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":310,"column":11,"nodeType":"994","messageId":"995","endLine":310,"endColumn":16},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":7,"column":8,"nodeType":"994","messageId":"995","endLine":7,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":7,"column":29,"nodeType":"994","messageId":"995","endLine":7,"endColumn":35},{"ruleId":"1017","severity":1,"message":"1018","line":56,"column":7,"nodeType":"1019","messageId":"1020","endLine":56,"endColumn":13},{"ruleId":"992","severity":1,"message":"1013","line":313,"column":11,"nodeType":"994","messageId":"995","endLine":313,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":316,"column":11,"nodeType":"994","messageId":"995","endLine":316,"endColumn":16},{"ruleId":"1001","severity":1,"message":"1021","line":807,"column":23,"nodeType":"1003","endLine":807,"endColumn":67},{"ruleId":"1001","severity":1,"message":"1021","line":810,"column":23,"nodeType":"1003","endLine":810,"endColumn":53},{"ruleId":"1001","severity":1,"message":"1021","line":812,"column":23,"nodeType":"1003","endLine":812,"endColumn":48},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":5,"column":10,"nodeType":"994","messageId":"995","endLine":5,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":5,"column":17,"nodeType":"994","messageId":"995","endLine":5,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":5,"column":25,"nodeType":"994","messageId":"995","endLine":5,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":5,"column":47,"nodeType":"994","messageId":"995","endLine":5,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":9,"column":8,"nodeType":"994","messageId":"995","endLine":9,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":9,"column":29,"nodeType":"994","messageId":"995","endLine":9,"endColumn":35},{"ruleId":"992","severity":1,"message":"1022","line":144,"column":9,"nodeType":"994","messageId":"995","endLine":144,"endColumn":16},{"ruleId":"992","severity":1,"message":"1013","line":399,"column":11,"nodeType":"994","messageId":"995","endLine":399,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":402,"column":11,"nodeType":"994","messageId":"995","endLine":402,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1024","line":961,"column":35,"nodeType":"1025","endLine":965,"endColumn":37},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1007","line":5,"column":10,"nodeType":"994","messageId":"995","endLine":5,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":5,"column":17,"nodeType":"994","messageId":"995","endLine":5,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":5,"column":25,"nodeType":"994","messageId":"995","endLine":5,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":5,"column":47,"nodeType":"994","messageId":"995","endLine":5,"endColumn":54},{"ruleId":"992","severity":1,"message":"1026","line":7,"column":8,"nodeType":"994","messageId":"995","endLine":7,"endColumn":13},{"ruleId":"992","severity":1,"message":"1027","line":12,"column":8,"nodeType":"994","messageId":"995","endLine":12,"endColumn":20},{"ruleId":"992","severity":1,"message":"1028","line":19,"column":5,"nodeType":"994","messageId":"995","endLine":19,"endColumn":11},{"ruleId":"992","severity":1,"message":"1013","line":673,"column":11,"nodeType":"994","messageId":"995","endLine":673,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":676,"column":11,"nodeType":"994","messageId":"995","endLine":676,"endColumn":16},{"ruleId":"992","severity":1,"message":"1013","line":703,"column":11,"nodeType":"994","messageId":"995","endLine":703,"endColumn":19},{"ruleId":"992","severity":1,"message":"1013","line":727,"column":11,"nodeType":"994","messageId":"995","endLine":727,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":730,"column":11,"nodeType":"994","messageId":"995","endLine":730,"endColumn":16},{"ruleId":"992","severity":1,"message":"1029","line":842,"column":9,"nodeType":"994","messageId":"995","endLine":842,"endColumn":13},{"ruleId":"1030","severity":1,"message":"1031","line":1392,"column":30,"nodeType":"1032","messageId":"1020","endLine":1392,"endColumn":32},{"ruleId":"1033","severity":1,"message":"1034","line":1602,"column":26,"nodeType":"1035","messageId":"1036","endLine":1602,"endColumn":28},{"ruleId":"1023","severity":1,"message":"1024","line":1653,"column":13,"nodeType":"1025","endLine":1653,"endColumn":39},{"ruleId":"1037","severity":1,"message":"1038","line":1693,"column":31,"nodeType":"1003","endLine":1698,"endColumn":32},{"ruleId":"1023","severity":1,"message":"1024","line":1712,"column":33,"nodeType":"1025","endLine":1712,"endColumn":44},{"ruleId":"1039","severity":1,"message":"1040","line":1714,"column":33,"nodeType":"1025","endLine":1714,"endColumn":42},{"ruleId":"1030","severity":1,"message":"1031","line":1809,"column":48,"nodeType":"1032","messageId":"1020","endLine":1809,"endColumn":50},{"ruleId":"1030","severity":1,"message":"1041","line":1810,"column":48,"nodeType":"1032","messageId":"1020","endLine":1810,"endColumn":50},{"ruleId":"1030","severity":1,"message":"1031","line":1817,"column":56,"nodeType":"1032","messageId":"1020","endLine":1817,"endColumn":58},{"ruleId":"1030","severity":1,"message":"1031","line":1846,"column":56,"nodeType":"1032","messageId":"1020","endLine":1846,"endColumn":58},{"ruleId":"1015","severity":1,"message":"1016","line":2024,"column":23,"nodeType":"1003","endLine":2031,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1024","line":2118,"column":21,"nodeType":"1025","endLine":2118,"endColumn":72},{"ruleId":"1023","severity":1,"message":"1024","line":2157,"column":21,"nodeType":"1025","endLine":2157,"endColumn":72},{"ruleId":"1023","severity":1,"message":"1024","line":2208,"column":21,"nodeType":"1025","endLine":2208,"endColumn":72},{"ruleId":"1015","severity":1,"message":"1016","line":2212,"column":23,"nodeType":"1003","endLine":2219,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1024","line":2232,"column":25,"nodeType":"1025","endLine":2232,"endColumn":51},{"ruleId":"1001","severity":1,"message":"1002","line":2674,"column":19,"nodeType":"1003","endLine":2678,"endColumn":20},{"ruleId":"1001","severity":1,"message":"1002","line":2681,"column":19,"nodeType":"1003","endLine":2685,"endColumn":20},{"ruleId":"1001","severity":1,"message":"1002","line":2688,"column":19,"nodeType":"1003","endLine":2692,"endColumn":20},{"ruleId":"1001","severity":1,"message":"1002","line":2695,"column":19,"nodeType":"1003","endLine":2699,"endColumn":20},{"ruleId":"1001","severity":1,"message":"1002","line":2703,"column":19,"nodeType":"1003","endLine":2707,"endColumn":20},{"ruleId":"1001","severity":1,"message":"1002","line":2711,"column":19,"nodeType":"1003","endLine":2715,"endColumn":20},{"ruleId":"1015","severity":1,"message":"1016","line":2742,"column":27,"nodeType":"1003","endLine":2745,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":2749,"column":33,"nodeType":"1003","endLine":2757,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":2825,"column":41,"nodeType":"1003","endLine":2825,"endColumn":65},{"ruleId":"1015","severity":1,"message":"1016","line":2863,"column":41,"nodeType":"1003","endLine":2863,"endColumn":65},{"ruleId":"1015","severity":1,"message":"1016","line":2898,"column":41,"nodeType":"1003","endLine":2900,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":2935,"column":41,"nodeType":"1003","endLine":2937,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":2972,"column":41,"nodeType":"1003","endLine":2974,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3027,"column":27,"nodeType":"1003","endLine":3030,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":3034,"column":33,"nodeType":"1003","endLine":3042,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":3110,"column":41,"nodeType":"1003","endLine":3122,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3160,"column":41,"nodeType":"1003","endLine":3160,"endColumn":65},{"ruleId":"1015","severity":1,"message":"1016","line":3213,"column":27,"nodeType":"1003","endLine":3216,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":3220,"column":33,"nodeType":"1003","endLine":3222,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":3290,"column":41,"nodeType":"1003","endLine":3302,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3340,"column":41,"nodeType":"1003","endLine":3342,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3395,"column":27,"nodeType":"1003","endLine":3398,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":3402,"column":33,"nodeType":"1003","endLine":3410,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":3478,"column":41,"nodeType":"1003","endLine":3490,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3528,"column":41,"nodeType":"1003","endLine":3530,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3583,"column":27,"nodeType":"1003","endLine":3586,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":3590,"column":33,"nodeType":"1003","endLine":3598,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":3666,"column":41,"nodeType":"1003","endLine":3678,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3716,"column":41,"nodeType":"1003","endLine":3718,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3771,"column":27,"nodeType":"1003","endLine":3774,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":3778,"column":33,"nodeType":"1003","endLine":3786,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":3854,"column":41,"nodeType":"1003","endLine":3866,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":3904,"column":41,"nodeType":"1003","endLine":3906,"endColumn":43},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1002","line":116,"column":27,"nodeType":"1003","endLine":116,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":119,"column":27,"nodeType":"1003","endLine":119,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":129,"column":27,"nodeType":"1003","endLine":129,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":132,"column":27,"nodeType":"1003","endLine":132,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":142,"column":27,"nodeType":"1003","endLine":142,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":145,"column":27,"nodeType":"1003","endLine":145,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":155,"column":27,"nodeType":"1003","endLine":155,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":158,"column":27,"nodeType":"1003","endLine":158,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":168,"column":27,"nodeType":"1003","endLine":168,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":171,"column":27,"nodeType":"1003","endLine":171,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":183,"column":27,"nodeType":"1003","endLine":183,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":186,"column":27,"nodeType":"1003","endLine":186,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":196,"column":27,"nodeType":"1003","endLine":196,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":199,"column":27,"nodeType":"1003","endLine":199,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":211,"column":27,"nodeType":"1003","endLine":211,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":214,"column":27,"nodeType":"1003","endLine":214,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":226,"column":27,"nodeType":"1003","endLine":226,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":229,"column":27,"nodeType":"1003","endLine":229,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":241,"column":27,"nodeType":"1003","endLine":241,"endColumn":55},{"ruleId":"1001","severity":1,"message":"1002","line":244,"column":27,"nodeType":"1003","endLine":244,"endColumn":55},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":7,"column":8,"nodeType":"994","messageId":"995","endLine":7,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":7,"column":29,"nodeType":"994","messageId":"995","endLine":7,"endColumn":35},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1043","line":6,"column":10,"nodeType":"994","messageId":"995","endLine":6,"endColumn":16},{"ruleId":"992","severity":1,"message":"1011","line":10,"column":8,"nodeType":"994","messageId":"995","endLine":10,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":10,"column":29,"nodeType":"994","messageId":"995","endLine":10,"endColumn":35},{"ruleId":"992","severity":1,"message":"1044","line":14,"column":10,"nodeType":"994","messageId":"995","endLine":14,"endColumn":16},{"ruleId":"992","severity":1,"message":"1045","line":20,"column":11,"nodeType":"994","messageId":"995","endLine":20,"endColumn":20},{"ruleId":"992","severity":1,"message":"1046","line":22,"column":9,"nodeType":"994","messageId":"995","endLine":22,"endColumn":16},{"ruleId":"992","severity":1,"message":"1047","line":24,"column":10,"nodeType":"994","messageId":"995","endLine":24,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1049","line":107,"column":5,"nodeType":"1050","endLine":107,"endColumn":7,"suggestions":"1051"},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1043","line":6,"column":10,"nodeType":"994","messageId":"995","endLine":6,"endColumn":16},{"ruleId":"992","severity":1,"message":"1011","line":10,"column":8,"nodeType":"994","messageId":"995","endLine":10,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":10,"column":29,"nodeType":"994","messageId":"995","endLine":10,"endColumn":35},{"ruleId":"992","severity":1,"message":"1044","line":14,"column":10,"nodeType":"994","messageId":"995","endLine":14,"endColumn":16},{"ruleId":"992","severity":1,"message":"1045","line":21,"column":9,"nodeType":"994","messageId":"995","endLine":21,"endColumn":18},{"ruleId":"992","severity":1,"message":"1046","line":23,"column":9,"nodeType":"994","messageId":"995","endLine":23,"endColumn":16},{"ruleId":"992","severity":1,"message":"1047","line":25,"column":9,"nodeType":"994","messageId":"995","endLine":25,"endColumn":14},{"ruleId":"992","severity":1,"message":"993","line":26,"column":9,"nodeType":"994","messageId":"995","endLine":26,"endColumn":12},{"ruleId":"992","severity":1,"message":"996","line":27,"column":9,"nodeType":"994","messageId":"995","endLine":27,"endColumn":14},{"ruleId":"992","severity":1,"message":"1052","line":71,"column":9,"nodeType":"994","messageId":"995","endLine":71,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":151,"column":6,"nodeType":"1050","endLine":151,"endColumn":8,"suggestions":"1053"},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1043","line":9,"column":10,"nodeType":"994","messageId":"995","endLine":9,"endColumn":16},{"ruleId":"992","severity":1,"message":"1044","line":15,"column":10,"nodeType":"994","messageId":"995","endLine":15,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1054","line":41,"column":6,"nodeType":"1050","endLine":41,"endColumn":8,"suggestions":"1055"},{"ruleId":"992","severity":1,"message":"1046","line":43,"column":7,"nodeType":"994","messageId":"995","endLine":43,"endColumn":14},{"ruleId":"992","severity":1,"message":"1045","line":46,"column":7,"nodeType":"994","messageId":"995","endLine":46,"endColumn":16},{"ruleId":"992","severity":1,"message":"1047","line":48,"column":10,"nodeType":"994","messageId":"995","endLine":48,"endColumn":15},{"ruleId":"992","severity":1,"message":"993","line":49,"column":8,"nodeType":"994","messageId":"995","endLine":49,"endColumn":11},{"ruleId":"992","severity":1,"message":"996","line":50,"column":8,"nodeType":"994","messageId":"995","endLine":50,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1049","line":103,"column":6,"nodeType":"1050","endLine":103,"endColumn":8,"suggestions":"1056"},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1043","line":9,"column":10,"nodeType":"994","messageId":"995","endLine":9,"endColumn":16},{"ruleId":"992","severity":1,"message":"1044","line":13,"column":10,"nodeType":"994","messageId":"995","endLine":13,"endColumn":16},{"ruleId":"992","severity":1,"message":"1046","line":17,"column":9,"nodeType":"994","messageId":"995","endLine":17,"endColumn":16},{"ruleId":"992","severity":1,"message":"1045","line":45,"column":11,"nodeType":"994","messageId":"995","endLine":45,"endColumn":20},{"ruleId":"992","severity":1,"message":"1047","line":47,"column":10,"nodeType":"994","messageId":"995","endLine":47,"endColumn":15},{"ruleId":"992","severity":1,"message":"993","line":48,"column":8,"nodeType":"994","messageId":"995","endLine":48,"endColumn":11},{"ruleId":"992","severity":1,"message":"996","line":49,"column":8,"nodeType":"994","messageId":"995","endLine":49,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1057","line":66,"column":5,"nodeType":"1050","endLine":66,"endColumn":7,"suggestions":"1058"},{"ruleId":"1048","severity":1,"message":"1049","line":151,"column":5,"nodeType":"1050","endLine":151,"endColumn":7,"suggestions":"1059"},{"ruleId":"1015","severity":1,"message":"1016","line":195,"column":27,"nodeType":"1003","endLine":195,"endColumn":78},{"ruleId":"1015","severity":1,"message":"1016","line":209,"column":27,"nodeType":"1003","endLine":209,"endColumn":77},{"ruleId":"1015","severity":1,"message":"1016","line":223,"column":27,"nodeType":"1003","endLine":223,"endColumn":77},{"ruleId":"1015","severity":1,"message":"1016","line":237,"column":27,"nodeType":"1003","endLine":237,"endColumn":78},{"ruleId":"992","severity":1,"message":"1007","line":3,"column":10,"nodeType":"994","messageId":"995","endLine":3,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":3,"column":17,"nodeType":"994","messageId":"995","endLine":3,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":3,"column":25,"nodeType":"994","messageId":"995","endLine":3,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":3,"column":47,"nodeType":"994","messageId":"995","endLine":3,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1060","line":9,"column":10,"nodeType":"994","messageId":"995","endLine":9,"endColumn":20},{"ruleId":"992","severity":1,"message":"1061","line":22,"column":17,"nodeType":"994","messageId":"995","endLine":22,"endColumn":25},{"ruleId":"992","severity":1,"message":"1044","line":23,"column":10,"nodeType":"994","messageId":"995","endLine":23,"endColumn":16},{"ruleId":"992","severity":1,"message":"1045","line":92,"column":9,"nodeType":"994","messageId":"995","endLine":92,"endColumn":18},{"ruleId":"992","severity":1,"message":"1047","line":94,"column":10,"nodeType":"994","messageId":"995","endLine":94,"endColumn":15},{"ruleId":"992","severity":1,"message":"993","line":95,"column":8,"nodeType":"994","messageId":"995","endLine":95,"endColumn":11},{"ruleId":"992","severity":1,"message":"996","line":96,"column":8,"nodeType":"994","messageId":"995","endLine":96,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1062","line":184,"column":6,"nodeType":"1050","endLine":184,"endColumn":8,"suggestions":"1063"},{"ruleId":"1015","severity":1,"message":"1016","line":296,"column":25,"nodeType":"1003","endLine":296,"endColumn":64},{"ruleId":"1015","severity":1,"message":"1016","line":321,"column":25,"nodeType":"1003","endLine":321,"endColumn":69},{"ruleId":"1015","severity":1,"message":"1016","line":346,"column":25,"nodeType":"1003","endLine":346,"endColumn":63},{"ruleId":"1023","severity":1,"message":"1024","line":670,"column":27,"nodeType":"1025","endLine":670,"endColumn":61},{"ruleId":"1037","severity":1,"message":"1038","line":768,"column":27,"nodeType":"1003","endLine":768,"endColumn":74},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1064","line":10,"column":10,"nodeType":"994","messageId":"995","endLine":10,"endColumn":15},{"ruleId":"992","severity":1,"message":"1065","line":19,"column":22,"nodeType":"994","messageId":"995","endLine":19,"endColumn":27},{"ruleId":"1017","severity":1,"message":"1066","line":83,"column":7,"nodeType":"1019","messageId":"1020","endLine":83,"endColumn":13},{"ruleId":"1067","severity":1,"message":"1068","line":752,"column":9,"nodeType":"1069","messageId":"1070","endLine":754,"endColumn":10},{"ruleId":"1030","severity":1,"message":"1031","line":787,"column":54,"nodeType":"1032","messageId":"1020","endLine":787,"endColumn":56},{"ruleId":"1030","severity":1,"message":"1031","line":930,"column":56,"nodeType":"1032","messageId":"1020","endLine":930,"endColumn":58},{"ruleId":"1030","severity":1,"message":"1031","line":1245,"column":43,"nodeType":"1032","messageId":"1020","endLine":1245,"endColumn":45},{"ruleId":"1030","severity":1,"message":"1031","line":1247,"column":46,"nodeType":"1032","messageId":"1020","endLine":1247,"endColumn":48},{"ruleId":"1030","severity":1,"message":"1031","line":1249,"column":46,"nodeType":"1032","messageId":"1020","endLine":1249,"endColumn":48},{"ruleId":"1030","severity":1,"message":"1031","line":1319,"column":43,"nodeType":"1032","messageId":"1020","endLine":1319,"endColumn":45},{"ruleId":"1030","severity":1,"message":"1031","line":1321,"column":46,"nodeType":"1032","messageId":"1020","endLine":1321,"endColumn":48},{"ruleId":"1030","severity":1,"message":"1031","line":1323,"column":46,"nodeType":"1032","messageId":"1020","endLine":1323,"endColumn":48},{"ruleId":"1030","severity":1,"message":"1031","line":1485,"column":43,"nodeType":"1032","messageId":"1020","endLine":1485,"endColumn":45},{"ruleId":"1030","severity":1,"message":"1031","line":1487,"column":46,"nodeType":"1032","messageId":"1020","endLine":1487,"endColumn":48},{"ruleId":"1030","severity":1,"message":"1031","line":1489,"column":46,"nodeType":"1032","messageId":"1020","endLine":1489,"endColumn":48},{"ruleId":"1001","severity":1,"message":"1002","line":1495,"column":33,"nodeType":"1003","endLine":1495,"endColumn":64},{"ruleId":"1030","severity":1,"message":"1031","line":1509,"column":55,"nodeType":"1032","messageId":"1020","endLine":1509,"endColumn":57},{"ruleId":"1030","severity":1,"message":"1031","line":1519,"column":55,"nodeType":"1032","messageId":"1020","endLine":1519,"endColumn":57},{"ruleId":"1071","severity":1,"message":"1072","line":1563,"column":41,"nodeType":"1073","messageId":"1074","endLine":1563,"endColumn":42},{"ruleId":"1001","severity":1,"message":"1021","line":1568,"column":39,"nodeType":"1003","endLine":1568,"endColumn":75},{"ruleId":"1001","severity":1,"message":"1021","line":1579,"column":39,"nodeType":"1003","endLine":1579,"endColumn":75},{"ruleId":"1001","severity":1,"message":"1021","line":1584,"column":39,"nodeType":"1003","endLine":1584,"endColumn":75},{"ruleId":"1001","severity":1,"message":"1021","line":1589,"column":39,"nodeType":"1003","endLine":1589,"endColumn":75},{"ruleId":"1001","severity":1,"message":"1021","line":1597,"column":39,"nodeType":"1003","endLine":1597,"endColumn":75},{"ruleId":"1001","severity":1,"message":"1021","line":1604,"column":39,"nodeType":"1003","endLine":1604,"endColumn":75},{"ruleId":"1001","severity":1,"message":"1021","line":1609,"column":39,"nodeType":"1003","endLine":1609,"endColumn":75},{"ruleId":"1023","severity":1,"message":"1024","line":2401,"column":45,"nodeType":"1025","endLine":2401,"endColumn":58},{"ruleId":"1001","severity":1,"message":"1002","line":2656,"column":43,"nodeType":"1003","endLine":2656,"endColumn":74},{"ruleId":"1001","severity":1,"message":"1002","line":2679,"column":43,"nodeType":"1003","endLine":2679,"endColumn":74},{"ruleId":"1001","severity":1,"message":"1002","line":2702,"column":43,"nodeType":"1003","endLine":2702,"endColumn":74},{"ruleId":"1030","severity":1,"message":"1031","line":3111,"column":43,"nodeType":"1032","messageId":"1020","endLine":3111,"endColumn":45},{"ruleId":"1030","severity":1,"message":"1031","line":3113,"column":46,"nodeType":"1032","messageId":"1020","endLine":3113,"endColumn":48},{"ruleId":"1030","severity":1,"message":"1031","line":3115,"column":46,"nodeType":"1032","messageId":"1020","endLine":3115,"endColumn":48},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1075","line":8,"column":10,"nodeType":"994","messageId":"995","endLine":8,"endColumn":23},{"ruleId":"992","severity":1,"message":"1076","line":8,"column":25,"nodeType":"994","messageId":"995","endLine":8,"endColumn":38},{"ruleId":"992","severity":1,"message":"1011","line":11,"column":8,"nodeType":"994","messageId":"995","endLine":11,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":11,"column":29,"nodeType":"994","messageId":"995","endLine":11,"endColumn":35},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":298,"column":29,"nodeType":"1003","endLine":305,"endColumn":31},{"ruleId":"1001","severity":1,"message":"1002","line":309,"column":29,"nodeType":"1003","endLine":317,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":320,"column":29,"nodeType":"1003","endLine":328,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":331,"column":29,"nodeType":"1003","endLine":339,"endColumn":30},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1043","line":6,"column":10,"nodeType":"994","messageId":"995","endLine":6,"endColumn":16},{"ruleId":"992","severity":1,"message":"1011","line":10,"column":8,"nodeType":"994","messageId":"995","endLine":10,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":10,"column":29,"nodeType":"994","messageId":"995","endLine":10,"endColumn":35},{"ruleId":"992","severity":1,"message":"1044","line":14,"column":10,"nodeType":"994","messageId":"995","endLine":14,"endColumn":16},{"ruleId":"992","severity":1,"message":"1045","line":20,"column":9,"nodeType":"994","messageId":"995","endLine":20,"endColumn":18},{"ruleId":"992","severity":1,"message":"1046","line":22,"column":9,"nodeType":"994","messageId":"995","endLine":22,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1049","line":111,"column":6,"nodeType":"1050","endLine":111,"endColumn":8,"suggestions":"1077"},{"ruleId":"1015","severity":1,"message":"1016","line":149,"column":25,"nodeType":"1003","endLine":149,"endColumn":136},{"ruleId":"1037","severity":1,"message":"1038","line":152,"column":25,"nodeType":"1003","endLine":156,"endColumn":27},{"ruleId":"1078","severity":1,"message":"1079","line":152,"column":25,"nodeType":"1003","endLine":156,"endColumn":27},{"ruleId":"1015","severity":1,"message":"1016","line":180,"column":25,"nodeType":"1003","endLine":183,"endColumn":27},{"ruleId":"1037","severity":1,"message":"1038","line":186,"column":25,"nodeType":"1003","endLine":190,"endColumn":27},{"ruleId":"1078","severity":1,"message":"1079","line":186,"column":25,"nodeType":"1003","endLine":190,"endColumn":27},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1002","line":215,"column":11,"nodeType":"1003","endLine":215,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":222,"column":11,"nodeType":"1003","endLine":222,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":229,"column":11,"nodeType":"1003","endLine":229,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":236,"column":11,"nodeType":"1003","endLine":236,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":243,"column":11,"nodeType":"1003","endLine":243,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":250,"column":11,"nodeType":"1003","endLine":250,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":257,"column":11,"nodeType":"1003","endLine":257,"endColumn":103},{"ruleId":"1001","severity":1,"message":"1002","line":264,"column":11,"nodeType":"1003","endLine":264,"endColumn":103},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":9,"column":8,"nodeType":"994","messageId":"995","endLine":9,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":9,"column":29,"nodeType":"994","messageId":"995","endLine":9,"endColumn":35},{"ruleId":"992","severity":1,"message":"1044","line":15,"column":7,"nodeType":"994","messageId":"995","endLine":15,"endColumn":13},{"ruleId":"992","severity":1,"message":"1080","line":16,"column":8,"nodeType":"994","messageId":"995","endLine":16,"endColumn":12},{"ruleId":"992","severity":1,"message":"1081","line":16,"column":14,"nodeType":"994","messageId":"995","endLine":16,"endColumn":21},{"ruleId":"992","severity":1,"message":"1061","line":17,"column":15,"nodeType":"994","messageId":"995","endLine":17,"endColumn":23},{"ruleId":"992","severity":1,"message":"1082","line":34,"column":10,"nodeType":"994","messageId":"995","endLine":34,"endColumn":23},{"ruleId":"992","severity":1,"message":"1045","line":96,"column":12,"nodeType":"994","messageId":"995","endLine":96,"endColumn":21},{"ruleId":"992","severity":1,"message":"1047","line":97,"column":12,"nodeType":"994","messageId":"995","endLine":97,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1083","line":149,"column":5,"nodeType":"1050","endLine":149,"endColumn":7,"suggestions":"1084"},{"ruleId":"1030","severity":1,"message":"1031","line":269,"column":80,"nodeType":"1032","messageId":"1020","endLine":269,"endColumn":82},{"ruleId":"1030","severity":1,"message":"1031","line":296,"column":68,"nodeType":"1032","messageId":"1020","endLine":296,"endColumn":70},{"ruleId":"1001","severity":1,"message":"1002","line":377,"column":29,"nodeType":"1003","endLine":381,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":384,"column":29,"nodeType":"1003","endLine":388,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":404,"column":29,"nodeType":"1003","endLine":408,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":411,"column":29,"nodeType":"1003","endLine":415,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":418,"column":29,"nodeType":"1003","endLine":422,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":432,"column":29,"nodeType":"1003","endLine":436,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":439,"column":29,"nodeType":"1003","endLine":443,"endColumn":30},{"ruleId":"1030","severity":1,"message":"1031","line":523,"column":70,"nodeType":"1032","messageId":"1020","endLine":523,"endColumn":72},{"ruleId":"1001","severity":1,"message":"1002","line":562,"column":29,"nodeType":"1003","endLine":566,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":574,"column":29,"nodeType":"1003","endLine":578,"endColumn":30},{"ruleId":"1001","severity":1,"message":"1002","line":586,"column":29,"nodeType":"1003","endLine":590,"endColumn":30},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1007","line":3,"column":10,"nodeType":"994","messageId":"995","endLine":3,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":3,"column":17,"nodeType":"994","messageId":"995","endLine":3,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":3,"column":25,"nodeType":"994","messageId":"995","endLine":3,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":3,"column":47,"nodeType":"994","messageId":"995","endLine":3,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":7,"column":8,"nodeType":"994","messageId":"995","endLine":7,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":7,"column":29,"nodeType":"994","messageId":"995","endLine":7,"endColumn":35},{"ruleId":"992","severity":1,"message":"1061","line":13,"column":17,"nodeType":"994","messageId":"995","endLine":13,"endColumn":25},{"ruleId":"992","severity":1,"message":"1044","line":14,"column":10,"nodeType":"994","messageId":"995","endLine":14,"endColumn":16},{"ruleId":"992","severity":1,"message":"1082","line":29,"column":10,"nodeType":"994","messageId":"995","endLine":29,"endColumn":23},{"ruleId":"992","severity":1,"message":"1045","line":82,"column":10,"nodeType":"994","messageId":"995","endLine":82,"endColumn":19},{"ruleId":"992","severity":1,"message":"1047","line":84,"column":10,"nodeType":"994","messageId":"995","endLine":84,"endColumn":15},{"ruleId":"992","severity":1,"message":"993","line":85,"column":8,"nodeType":"994","messageId":"995","endLine":85,"endColumn":11},{"ruleId":"992","severity":1,"message":"996","line":86,"column":8,"nodeType":"994","messageId":"995","endLine":86,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1085","line":113,"column":3,"nodeType":"1050","endLine":113,"endColumn":5,"suggestions":"1086"},{"ruleId":"1048","severity":1,"message":"1087","line":147,"column":3,"nodeType":"1050","endLine":147,"endColumn":9,"suggestions":"1088"},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1007","line":3,"column":10,"nodeType":"994","messageId":"995","endLine":3,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":3,"column":17,"nodeType":"994","messageId":"995","endLine":3,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":3,"column":25,"nodeType":"994","messageId":"995","endLine":3,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":3,"column":47,"nodeType":"994","messageId":"995","endLine":3,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":6,"column":8,"nodeType":"994","messageId":"995","endLine":6,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":6,"column":29,"nodeType":"994","messageId":"995","endLine":6,"endColumn":35},{"ruleId":"1017","severity":1,"message":"1089","line":47,"column":7,"nodeType":"1019","messageId":"1020","endLine":47,"endColumn":11},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":7,"column":8,"nodeType":"994","messageId":"995","endLine":7,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":7,"column":29,"nodeType":"994","messageId":"995","endLine":7,"endColumn":35},{"ruleId":"992","severity":1,"message":"1043","line":8,"column":10,"nodeType":"994","messageId":"995","endLine":8,"endColumn":16},{"ruleId":"992","severity":1,"message":"1044","line":13,"column":10,"nodeType":"994","messageId":"995","endLine":13,"endColumn":16},{"ruleId":"992","severity":1,"message":"1045","line":20,"column":10,"nodeType":"994","messageId":"995","endLine":20,"endColumn":19},{"ruleId":"992","severity":1,"message":"1046","line":35,"column":7,"nodeType":"994","messageId":"995","endLine":35,"endColumn":14},{"ruleId":"1048","severity":1,"message":"1049","line":115,"column":5,"nodeType":"1050","endLine":115,"endColumn":7,"suggestions":"1090"},{"ruleId":"992","severity":1,"message":"1091","line":4,"column":3,"nodeType":"994","messageId":"995","endLine":4,"endColumn":17},{"ruleId":"992","severity":1,"message":"1092","line":5,"column":3,"nodeType":"994","messageId":"995","endLine":5,"endColumn":10},{"ruleId":"992","severity":1,"message":"1093","line":12,"column":3,"nodeType":"994","messageId":"995","endLine":12,"endColumn":15},{"ruleId":"992","severity":1,"message":"1094","line":13,"column":3,"nodeType":"994","messageId":"995","endLine":13,"endColumn":11},{"ruleId":"992","severity":1,"message":"1095","line":14,"column":3,"nodeType":"994","messageId":"995","endLine":14,"endColumn":19},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1042","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":47},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1061","line":13,"column":17,"nodeType":"994","messageId":"995","endLine":13,"endColumn":25},{"ruleId":"992","severity":1,"message":"1044","line":14,"column":10,"nodeType":"994","messageId":"995","endLine":14,"endColumn":16},{"ruleId":"992","severity":1,"message":"1096","line":15,"column":15,"nodeType":"994","messageId":"995","endLine":15,"endColumn":22},{"ruleId":"992","severity":1,"message":"1045","line":36,"column":10,"nodeType":"994","messageId":"995","endLine":36,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1097","line":92,"column":5,"nodeType":"1050","endLine":92,"endColumn":7,"suggestions":"1098"},{"ruleId":"1048","severity":1,"message":"1087","line":189,"column":5,"nodeType":"1050","endLine":189,"endColumn":11,"suggestions":"1099"},{"ruleId":"992","severity":1,"message":"1100","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":44},{"ruleId":"992","severity":1,"message":"1101","line":3,"column":3,"nodeType":"994","messageId":"995","endLine":3,"endColumn":7},{"ruleId":"992","severity":1,"message":"1102","line":12,"column":3,"nodeType":"994","messageId":"995","endLine":12,"endColumn":7},{"ruleId":"992","severity":1,"message":"1010","line":14,"column":3,"nodeType":"994","messageId":"995","endLine":14,"endColumn":10},{"ruleId":"992","severity":1,"message":"1103","line":15,"column":3,"nodeType":"994","messageId":"995","endLine":15,"endColumn":10},{"ruleId":"992","severity":1,"message":"1008","line":19,"column":8,"nodeType":"994","messageId":"995","endLine":19,"endColumn":14},{"ruleId":"992","severity":1,"message":"1104","line":24,"column":8,"nodeType":"994","messageId":"995","endLine":24,"endColumn":16},{"ruleId":"992","severity":1,"message":"1105","line":39,"column":3,"nodeType":"994","messageId":"995","endLine":39,"endColumn":13},{"ruleId":"992","severity":1,"message":"1106","line":45,"column":3,"nodeType":"994","messageId":"995","endLine":45,"endColumn":17},{"ruleId":"992","severity":1,"message":"1107","line":51,"column":8,"nodeType":"994","messageId":"995","endLine":51,"endColumn":14},{"ruleId":"992","severity":1,"message":"1108","line":56,"column":8,"nodeType":"994","messageId":"995","endLine":56,"endColumn":14},{"ruleId":"992","severity":1,"message":"1109","line":88,"column":10,"nodeType":"994","messageId":"995","endLine":88,"endColumn":17},{"ruleId":"992","severity":1,"message":"1110","line":88,"column":19,"nodeType":"994","messageId":"995","endLine":88,"endColumn":29},{"ruleId":"992","severity":1,"message":"1111","line":98,"column":10,"nodeType":"994","messageId":"995","endLine":98,"endColumn":22},{"ruleId":"992","severity":1,"message":"1112","line":98,"column":24,"nodeType":"994","messageId":"995","endLine":98,"endColumn":39},{"ruleId":"992","severity":1,"message":"1113","line":99,"column":10,"nodeType":"994","messageId":"995","endLine":99,"endColumn":22},{"ruleId":"992","severity":1,"message":"1114","line":104,"column":10,"nodeType":"994","messageId":"995","endLine":104,"endColumn":18},{"ruleId":"992","severity":1,"message":"1115","line":104,"column":20,"nodeType":"994","messageId":"995","endLine":104,"endColumn":31},{"ruleId":"992","severity":1,"message":"1116","line":105,"column":10,"nodeType":"994","messageId":"995","endLine":105,"endColumn":27},{"ruleId":"992","severity":1,"message":"1117","line":124,"column":10,"nodeType":"994","messageId":"995","endLine":124,"endColumn":15},{"ruleId":"992","severity":1,"message":"1118","line":124,"column":17,"nodeType":"994","messageId":"995","endLine":124,"endColumn":25},{"ruleId":"992","severity":1,"message":"1119","line":134,"column":10,"nodeType":"994","messageId":"995","endLine":134,"endColumn":25},{"ruleId":"992","severity":1,"message":"1120","line":138,"column":10,"nodeType":"994","messageId":"995","endLine":138,"endColumn":20},{"ruleId":"992","severity":1,"message":"1121","line":143,"column":10,"nodeType":"994","messageId":"995","endLine":143,"endColumn":23},{"ruleId":"992","severity":1,"message":"1122","line":143,"column":25,"nodeType":"994","messageId":"995","endLine":143,"endColumn":41},{"ruleId":"1048","severity":1,"message":"1123","line":174,"column":6,"nodeType":"1050","endLine":174,"endColumn":8,"suggestions":"1124"},{"ruleId":"992","severity":1,"message":"1125","line":175,"column":9,"nodeType":"994","messageId":"995","endLine":175,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1126","line":227,"column":6,"nodeType":"1050","endLine":227,"endColumn":12,"suggestions":"1127"},{"ruleId":"1048","severity":1,"message":"1128","line":363,"column":6,"nodeType":"1050","endLine":363,"endColumn":8,"suggestions":"1129"},{"ruleId":"1048","severity":1,"message":"1130","line":386,"column":6,"nodeType":"1050","endLine":386,"endColumn":22,"suggestions":"1131"},{"ruleId":"1017","severity":1,"message":"1132","line":493,"column":7,"nodeType":"1019","messageId":"1020","endLine":493,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1133","line":667,"column":6,"nodeType":"1050","endLine":667,"endColumn":8,"suggestions":"1134"},{"ruleId":"992","severity":1,"message":"1135","line":687,"column":9,"nodeType":"994","messageId":"995","endLine":687,"endColumn":26},{"ruleId":"1015","severity":1,"message":"1016","line":886,"column":19,"nodeType":"1003","endLine":886,"endColumn":63},{"ruleId":"1030","severity":1,"message":"1031","line":905,"column":51,"nodeType":"1032","messageId":"1020","endLine":905,"endColumn":53},{"ruleId":"1030","severity":1,"message":"1031","line":909,"column":51,"nodeType":"1032","messageId":"1020","endLine":909,"endColumn":53},{"ruleId":"1001","severity":1,"message":"1002","line":932,"column":19,"nodeType":"1003","endLine":932,"endColumn":47},{"ruleId":"1001","severity":1,"message":"1002","line":938,"column":19,"nodeType":"1003","endLine":938,"endColumn":47},{"ruleId":"1015","severity":1,"message":"1016","line":1122,"column":33,"nodeType":"1003","endLine":1128,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":1147,"column":33,"nodeType":"1003","endLine":1153,"endColumn":35},{"ruleId":"1023","severity":1,"message":"1024","line":1213,"column":35,"nodeType":"1025","endLine":1213,"endColumn":53},{"ruleId":"1015","severity":1,"message":"1016","line":1589,"column":31,"nodeType":"1003","endLine":1596,"endColumn":33},{"ruleId":"1001","severity":1,"message":"1002","line":1727,"column":35,"nodeType":"1003","endLine":1727,"endColumn":63},{"ruleId":"1017","severity":1,"message":"1136","line":1816,"column":41,"nodeType":"1019","messageId":"1020","endLine":1816,"endColumn":51},{"ruleId":"1017","severity":1,"message":"1137","line":1820,"column":41,"nodeType":"1019","messageId":"1020","endLine":1820,"endColumn":46},{"ruleId":"1023","severity":1,"message":"1024","line":1907,"column":33,"nodeType":"1025","endLine":1907,"endColumn":58},{"ruleId":"1015","severity":1,"message":"1016","line":1963,"column":33,"nodeType":"1003","endLine":1970,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1002","line":2041,"column":19,"nodeType":"1003","endLine":2041,"endColumn":31},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1138","line":4,"column":8,"nodeType":"994","messageId":"995","endLine":4,"endColumn":13},{"ruleId":"992","severity":1,"message":"1007","line":6,"column":10,"nodeType":"994","messageId":"995","endLine":6,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":6,"column":17,"nodeType":"994","messageId":"995","endLine":6,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":6,"column":25,"nodeType":"994","messageId":"995","endLine":6,"endColumn":35},{"ruleId":"992","severity":1,"message":"1011","line":8,"column":8,"nodeType":"994","messageId":"995","endLine":8,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":8,"column":29,"nodeType":"994","messageId":"995","endLine":8,"endColumn":35},{"ruleId":"992","severity":1,"message":"1013","line":100,"column":11,"nodeType":"994","messageId":"995","endLine":100,"endColumn":19},{"ruleId":"992","severity":1,"message":"1014","line":103,"column":11,"nodeType":"994","messageId":"995","endLine":103,"endColumn":16},{"ruleId":"1015","severity":1,"message":"1016","line":815,"column":19,"nodeType":"1003","endLine":815,"endColumn":47},{"ruleId":"1015","severity":1,"message":"1016","line":838,"column":19,"nodeType":"1003","endLine":838,"endColumn":47},{"ruleId":"1015","severity":1,"message":"1016","line":861,"column":19,"nodeType":"1003","endLine":861,"endColumn":47},{"ruleId":"1015","severity":1,"message":"1016","line":884,"column":19,"nodeType":"1003","endLine":884,"endColumn":47},{"ruleId":"1037","severity":1,"message":"1038","line":1057,"column":21,"nodeType":"1003","endLine":1061,"endColumn":22},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1139","line":4,"column":37,"nodeType":"994","messageId":"995","endLine":4,"endColumn":45},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":6,"column":8,"nodeType":"994","messageId":"995","endLine":6,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":6,"column":29,"nodeType":"994","messageId":"995","endLine":6,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1002","line":17,"column":9,"nodeType":"1003","endLine":17,"endColumn":21},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1007","line":3,"column":10,"nodeType":"994","messageId":"995","endLine":3,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":3,"column":17,"nodeType":"994","messageId":"995","endLine":3,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":3,"column":25,"nodeType":"994","messageId":"995","endLine":3,"endColumn":35},{"ruleId":"992","severity":1,"message":"1140","line":2,"column":17,"nodeType":"994","messageId":"995","endLine":2,"endColumn":23},{"ruleId":"992","severity":1,"message":"1141","line":2,"column":10,"nodeType":"994","messageId":"995","endLine":2,"endColumn":14},{"ruleId":"1037","severity":1,"message":"1038","line":60,"column":13,"nodeType":"1003","endLine":60,"endColumn":77},{"ruleId":"1037","severity":1,"message":"1038","line":64,"column":13,"nodeType":"1003","endLine":64,"endColumn":74},{"ruleId":"992","severity":1,"message":"1142","line":3,"column":8,"nodeType":"994","messageId":"995","endLine":3,"endColumn":16},{"ruleId":"992","severity":1,"message":"1143","line":4,"column":8,"nodeType":"994","messageId":"995","endLine":4,"endColumn":16},{"ruleId":"992","severity":1,"message":"1144","line":5,"column":8,"nodeType":"994","messageId":"995","endLine":5,"endColumn":18},{"ruleId":"992","severity":1,"message":"998","line":5,"column":10,"nodeType":"994","messageId":"995","endLine":5,"endColumn":19},{"ruleId":"992","severity":1,"message":"1101","line":5,"column":21,"nodeType":"994","messageId":"995","endLine":5,"endColumn":25},{"ruleId":"992","severity":1,"message":"1145","line":5,"column":43,"nodeType":"994","messageId":"995","endLine":5,"endColumn":48},{"ruleId":"992","severity":1,"message":"1146","line":14,"column":10,"nodeType":"994","messageId":"995","endLine":14,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":184,"column":95,"nodeType":"1073","messageId":"1074","endLine":184,"endColumn":96},{"ruleId":"1023","severity":1,"message":"1024","line":191,"column":66,"nodeType":"1025","endLine":191,"endColumn":79},{"ruleId":"1030","severity":1,"message":"1031","line":8,"column":54,"nodeType":"1032","messageId":"1020","endLine":8,"endColumn":56},{"ruleId":"1030","severity":1,"message":"1031","line":60,"column":54,"nodeType":"1032","messageId":"1020","endLine":60,"endColumn":56},{"ruleId":"1030","severity":1,"message":"1031","line":35,"column":78,"nodeType":"1032","messageId":"1020","endLine":35,"endColumn":80},{"ruleId":"1030","severity":1,"message":"1031","line":8,"column":78,"nodeType":"1032","messageId":"1020","endLine":8,"endColumn":80},{"ruleId":"1030","severity":1,"message":"1031","line":35,"column":78,"nodeType":"1032","messageId":"1020","endLine":35,"endColumn":80},{"ruleId":"1037","severity":1,"message":"1038","line":56,"column":13,"nodeType":"1003","endLine":56,"endColumn":77},{"ruleId":"1015","severity":1,"message":"1016","line":62,"column":9,"nodeType":"1003","endLine":62,"endColumn":59},{"ruleId":"1037","severity":1,"message":"1038","line":74,"column":13,"nodeType":"1003","endLine":74,"endColumn":76},{"ruleId":"1015","severity":1,"message":"1016","line":80,"column":9,"nodeType":"1003","endLine":80,"endColumn":58},{"ruleId":"1037","severity":1,"message":"1038","line":92,"column":13,"nodeType":"1003","endLine":96,"endColumn":14},{"ruleId":"1015","severity":1,"message":"1016","line":102,"column":9,"nodeType":"1003","endLine":102,"endColumn":68},{"ruleId":"992","severity":1,"message":"1100","line":1,"column":38,"nodeType":"994","messageId":"995","endLine":1,"endColumn":44},{"ruleId":"992","severity":1,"message":"1101","line":3,"column":3,"nodeType":"994","messageId":"995","endLine":3,"endColumn":7},{"ruleId":"992","severity":1,"message":"1102","line":12,"column":3,"nodeType":"994","messageId":"995","endLine":12,"endColumn":7},{"ruleId":"992","severity":1,"message":"1010","line":14,"column":3,"nodeType":"994","messageId":"995","endLine":14,"endColumn":10},{"ruleId":"992","severity":1,"message":"1103","line":15,"column":3,"nodeType":"994","messageId":"995","endLine":15,"endColumn":10},{"ruleId":"992","severity":1,"message":"1008","line":19,"column":8,"nodeType":"994","messageId":"995","endLine":19,"endColumn":14},{"ruleId":"992","severity":1,"message":"1104","line":23,"column":8,"nodeType":"994","messageId":"995","endLine":23,"endColumn":16},{"ruleId":"992","severity":1,"message":"1105","line":40,"column":3,"nodeType":"994","messageId":"995","endLine":40,"endColumn":13},{"ruleId":"992","severity":1,"message":"1106","line":46,"column":3,"nodeType":"994","messageId":"995","endLine":46,"endColumn":17},{"ruleId":"992","severity":1,"message":"1107","line":52,"column":8,"nodeType":"994","messageId":"995","endLine":52,"endColumn":14},{"ruleId":"992","severity":1,"message":"1108","line":57,"column":8,"nodeType":"994","messageId":"995","endLine":57,"endColumn":14},{"ruleId":"992","severity":1,"message":"1109","line":90,"column":10,"nodeType":"994","messageId":"995","endLine":90,"endColumn":17},{"ruleId":"992","severity":1,"message":"1110","line":90,"column":19,"nodeType":"994","messageId":"995","endLine":90,"endColumn":29},{"ruleId":"992","severity":1,"message":"1111","line":97,"column":10,"nodeType":"994","messageId":"995","endLine":97,"endColumn":22},{"ruleId":"992","severity":1,"message":"1112","line":97,"column":24,"nodeType":"994","messageId":"995","endLine":97,"endColumn":39},{"ruleId":"992","severity":1,"message":"1113","line":98,"column":10,"nodeType":"994","messageId":"995","endLine":98,"endColumn":22},{"ruleId":"992","severity":1,"message":"1114","line":103,"column":10,"nodeType":"994","messageId":"995","endLine":103,"endColumn":18},{"ruleId":"992","severity":1,"message":"1115","line":103,"column":20,"nodeType":"994","messageId":"995","endLine":103,"endColumn":31},{"ruleId":"992","severity":1,"message":"1119","line":133,"column":10,"nodeType":"994","messageId":"995","endLine":133,"endColumn":25},{"ruleId":"992","severity":1,"message":"1120","line":137,"column":10,"nodeType":"994","messageId":"995","endLine":137,"endColumn":20},{"ruleId":"992","severity":1,"message":"1121","line":142,"column":10,"nodeType":"994","messageId":"995","endLine":142,"endColumn":23},{"ruleId":"992","severity":1,"message":"1122","line":142,"column":25,"nodeType":"994","messageId":"995","endLine":142,"endColumn":41},{"ruleId":"992","severity":1,"message":"1125","line":197,"column":9,"nodeType":"994","messageId":"995","endLine":197,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1130","line":368,"column":6,"nodeType":"1050","endLine":368,"endColumn":22,"suggestions":"1147"},{"ruleId":"1017","severity":1,"message":"1132","line":475,"column":7,"nodeType":"1019","messageId":"1020","endLine":475,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1148","line":644,"column":6,"nodeType":"1050","endLine":644,"endColumn":8,"suggestions":"1149"},{"ruleId":"992","severity":1,"message":"1135","line":664,"column":9,"nodeType":"994","messageId":"995","endLine":664,"endColumn":26},{"ruleId":"1015","severity":1,"message":"1016","line":764,"column":21,"nodeType":"1003","endLine":772,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1016","line":807,"column":21,"nodeType":"1003","endLine":815,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1016","line":844,"column":21,"nodeType":"1003","endLine":852,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1016","line":888,"column":21,"nodeType":"1003","endLine":896,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1016","line":931,"column":21,"nodeType":"1003","endLine":939,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1016","line":1008,"column":25,"nodeType":"1003","endLine":1016,"endColumn":27},{"ruleId":"1015","severity":1,"message":"1016","line":1042,"column":25,"nodeType":"1003","endLine":1050,"endColumn":27},{"ruleId":"1015","severity":1,"message":"1016","line":1076,"column":25,"nodeType":"1003","endLine":1084,"endColumn":27},{"ruleId":"1015","severity":1,"message":"1016","line":1135,"column":19,"nodeType":"1003","endLine":1135,"endColumn":63},{"ruleId":"1030","severity":1,"message":"1031","line":1154,"column":52,"nodeType":"1032","messageId":"1020","endLine":1154,"endColumn":54},{"ruleId":"1030","severity":1,"message":"1031","line":1158,"column":52,"nodeType":"1032","messageId":"1020","endLine":1158,"endColumn":54},{"ruleId":"1001","severity":1,"message":"1002","line":1181,"column":19,"nodeType":"1003","endLine":1181,"endColumn":47},{"ruleId":"1001","severity":1,"message":"1002","line":1187,"column":19,"nodeType":"1003","endLine":1187,"endColumn":47},{"ruleId":"1015","severity":1,"message":"1016","line":1372,"column":33,"nodeType":"1003","endLine":1378,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":1397,"column":33,"nodeType":"1003","endLine":1403,"endColumn":35},{"ruleId":"1023","severity":1,"message":"1024","line":1461,"column":35,"nodeType":"1025","endLine":1461,"endColumn":53},{"ruleId":"1015","severity":1,"message":"1016","line":1836,"column":31,"nodeType":"1003","endLine":1843,"endColumn":33},{"ruleId":"1001","severity":1,"message":"1002","line":1973,"column":35,"nodeType":"1003","endLine":1973,"endColumn":63},{"ruleId":"1017","severity":1,"message":"1136","line":2062,"column":41,"nodeType":"1019","messageId":"1020","endLine":2062,"endColumn":51},{"ruleId":"1017","severity":1,"message":"1137","line":2066,"column":41,"nodeType":"1019","messageId":"1020","endLine":2066,"endColumn":46},{"ruleId":"1023","severity":1,"message":"1024","line":2153,"column":33,"nodeType":"1025","endLine":2153,"endColumn":58},{"ruleId":"1015","severity":1,"message":"1016","line":2209,"column":33,"nodeType":"1003","endLine":2216,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1002","line":2287,"column":19,"nodeType":"1003","endLine":2287,"endColumn":31},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1139","line":4,"column":37,"nodeType":"994","messageId":"995","endLine":4,"endColumn":45},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":6,"column":8,"nodeType":"994","messageId":"995","endLine":6,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":6,"column":29,"nodeType":"994","messageId":"995","endLine":6,"endColumn":35},{"ruleId":"1033","severity":1,"message":"1150","line":244,"column":20,"nodeType":"1035","messageId":"1151","endLine":244,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1024","line":414,"column":33,"nodeType":"1025","endLine":414,"endColumn":54},{"ruleId":"1023","severity":1,"message":"1024","line":433,"column":35,"nodeType":"1025","endLine":433,"endColumn":54},{"ruleId":"1023","severity":1,"message":"1024","line":579,"column":33,"nodeType":"1025","endLine":579,"endColumn":54},{"ruleId":"1023","severity":1,"message":"1024","line":598,"column":35,"nodeType":"1025","endLine":598,"endColumn":54},{"ruleId":"992","severity":1,"message":"1004","line":2,"column":17,"nodeType":"994","messageId":"995","endLine":2,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":2,"column":27,"nodeType":"994","messageId":"995","endLine":2,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":3,"column":8,"nodeType":"994","messageId":"995","endLine":3,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":5,"column":10,"nodeType":"994","messageId":"995","endLine":5,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":5,"column":17,"nodeType":"994","messageId":"995","endLine":5,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":5,"column":25,"nodeType":"994","messageId":"995","endLine":5,"endColumn":35},{"ruleId":"992","severity":1,"message":"1139","line":5,"column":37,"nodeType":"994","messageId":"995","endLine":5,"endColumn":45},{"ruleId":"992","severity":1,"message":"1010","line":5,"column":47,"nodeType":"994","messageId":"995","endLine":5,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":7,"column":8,"nodeType":"994","messageId":"995","endLine":7,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":7,"column":29,"nodeType":"994","messageId":"995","endLine":7,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1002","line":117,"column":17,"nodeType":"1003","endLine":117,"endColumn":29},{"ruleId":"1001","severity":1,"message":"1002","line":146,"column":17,"nodeType":"1003","endLine":146,"endColumn":50},{"ruleId":"1001","severity":1,"message":"1002","line":149,"column":17,"nodeType":"1003","endLine":149,"endColumn":48},{"ruleId":"1001","severity":1,"message":"1002","line":173,"column":17,"nodeType":"1003","endLine":173,"endColumn":50},{"ruleId":"992","severity":1,"message":"1140","line":2,"column":29,"nodeType":"994","messageId":"995","endLine":2,"endColumn":35},{"ruleId":"992","severity":1,"message":"1152","line":4,"column":8,"nodeType":"994","messageId":"995","endLine":4,"endColumn":11},{"ruleId":"992","severity":1,"message":"1153","line":81,"column":10,"nodeType":"994","messageId":"995","endLine":81,"endColumn":23},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1139","line":4,"column":37,"nodeType":"994","messageId":"995","endLine":4,"endColumn":45},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":6,"column":8,"nodeType":"994","messageId":"995","endLine":6,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":6,"column":29,"nodeType":"994","messageId":"995","endLine":6,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":21,"column":17,"nodeType":"1003","endLine":21,"endColumn":49},{"ruleId":"1001","severity":1,"message":"1021","line":33,"column":11,"nodeType":"1003","endLine":33,"endColumn":52},{"ruleId":"1001","severity":1,"message":"1021","line":36,"column":11,"nodeType":"1003","endLine":36,"endColumn":38},{"ruleId":"1001","severity":1,"message":"1021","line":37,"column":11,"nodeType":"1003","endLine":37,"endColumn":34},{"ruleId":"1001","severity":1,"message":"1021","line":38,"column":11,"nodeType":"1003","endLine":38,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1021","line":39,"column":11,"nodeType":"1003","endLine":39,"endColumn":42},{"ruleId":"1001","severity":1,"message":"1021","line":40,"column":11,"nodeType":"1003","endLine":40,"endColumn":35},{"ruleId":"1001","severity":1,"message":"1021","line":336,"column":19,"nodeType":"1003","endLine":336,"endColumn":42},{"ruleId":"1015","severity":1,"message":"1016","line":369,"column":15,"nodeType":"1003","endLine":369,"endColumn":46},{"ruleId":"1037","severity":1,"message":"1038","line":382,"column":17,"nodeType":"1003","endLine":382,"endColumn":77},{"ruleId":"1001","severity":1,"message":"1002","line":404,"column":19,"nodeType":"1003","endLine":404,"endColumn":31},{"ruleId":"1001","severity":1,"message":"1002","line":405,"column":19,"nodeType":"1003","endLine":405,"endColumn":31},{"ruleId":"1015","severity":1,"message":"1016","line":419,"column":17,"nodeType":"1003","endLine":419,"endColumn":71},{"ruleId":"1015","severity":1,"message":"1016","line":433,"column":25,"nodeType":"1003","endLine":433,"endColumn":52},{"ruleId":"1015","severity":1,"message":"1016","line":447,"column":25,"nodeType":"1003","endLine":447,"endColumn":52},{"ruleId":"1015","severity":1,"message":"1016","line":461,"column":25,"nodeType":"1003","endLine":461,"endColumn":52},{"ruleId":"1015","severity":1,"message":"1016","line":475,"column":25,"nodeType":"1003","endLine":475,"endColumn":52},{"ruleId":"1015","severity":1,"message":"1016","line":489,"column":25,"nodeType":"1003","endLine":489,"endColumn":52},{"ruleId":"1015","severity":1,"message":"1016","line":503,"column":25,"nodeType":"1003","endLine":503,"endColumn":52},{"ruleId":"1015","severity":1,"message":"1016","line":518,"column":11,"nodeType":"1003","endLine":526,"endColumn":13},{"ruleId":"1001","severity":1,"message":"1002","line":540,"column":17,"nodeType":"1003","endLine":540,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":541,"column":19,"nodeType":"1003","endLine":549,"endColumn":21},{"ruleId":"1001","severity":1,"message":"1002","line":553,"column":17,"nodeType":"1003","endLine":553,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":554,"column":19,"nodeType":"1003","endLine":562,"endColumn":21},{"ruleId":"1001","severity":1,"message":"1002","line":566,"column":17,"nodeType":"1003","endLine":566,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":567,"column":19,"nodeType":"1003","endLine":575,"endColumn":21},{"ruleId":"992","severity":1,"message":"1004","line":1,"column":17,"nodeType":"994","messageId":"995","endLine":1,"endColumn":25},{"ruleId":"992","severity":1,"message":"1005","line":1,"column":27,"nodeType":"994","messageId":"995","endLine":1,"endColumn":36},{"ruleId":"992","severity":1,"message":"1006","line":2,"column":8,"nodeType":"994","messageId":"995","endLine":2,"endColumn":15},{"ruleId":"992","severity":1,"message":"1007","line":4,"column":10,"nodeType":"994","messageId":"995","endLine":4,"endColumn":15},{"ruleId":"992","severity":1,"message":"1008","line":4,"column":17,"nodeType":"994","messageId":"995","endLine":4,"endColumn":23},{"ruleId":"992","severity":1,"message":"1009","line":4,"column":25,"nodeType":"994","messageId":"995","endLine":4,"endColumn":35},{"ruleId":"992","severity":1,"message":"1139","line":4,"column":37,"nodeType":"994","messageId":"995","endLine":4,"endColumn":45},{"ruleId":"992","severity":1,"message":"1010","line":4,"column":47,"nodeType":"994","messageId":"995","endLine":4,"endColumn":54},{"ruleId":"992","severity":1,"message":"1011","line":6,"column":8,"nodeType":"994","messageId":"995","endLine":6,"endColumn":25},{"ruleId":"992","severity":1,"message":"1012","line":6,"column":29,"nodeType":"994","messageId":"995","endLine":6,"endColumn":35},{"ruleId":"1015","severity":1,"message":"1016","line":43,"column":23,"nodeType":"1003","endLine":54,"endColumn":25},{"ruleId":"1015","severity":1,"message":"1016","line":89,"column":19,"nodeType":"1003","endLine":92,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":127,"column":19,"nodeType":"1003","endLine":130,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":164,"column":19,"nodeType":"1003","endLine":167,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":202,"column":19,"nodeType":"1003","endLine":205,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":240,"column":19,"nodeType":"1003","endLine":243,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":275,"column":23,"nodeType":"1003","endLine":278,"endColumn":25},{"ruleId":"1015","severity":1,"message":"1016","line":307,"column":23,"nodeType":"1003","endLine":310,"endColumn":25},{"ruleId":"1015","severity":1,"message":"1016","line":339,"column":23,"nodeType":"1003","endLine":342,"endColumn":25},"no-native-reassign",["1154"],"no-negated-in-lhs",["1155"],"no-unused-vars","'fav' is assigned a value but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'setOrderIsh' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'Favicon' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","'NavLink' is defined but never used.","'TradingViewWidget' is defined but never used.","'Themes' is defined but never used.","'response' is assigned a value but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'orders'.","ObjectExpression","unexpected","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'idArray' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Stock' is defined but never used.","'Notification' is defined but never used.","'userID' is assigned a value but never used.","'main' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","react/style-prop-object","Style prop value must be an object","Expected '!==' and instead saw '!='.","'Component' is defined but never used.","'Select' is defined but never used.","'orders' is assigned a value but never used.","'textInput' is assigned a value but never used.","'manager' is assigned a value but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'myRef3', 'props.user.user', and 'user.user'. Either include them or remove the dependency array.","ArrayExpression",["1156"],"'depositImages' is assigned a value but never used.",["1157"],"React Hook useEffect has missing dependencies: 'props.site', 'props.web.web.defaultThemeColor', 'props.web.web.showCalcaulator', 'props.web.web.showContactInFooter', 'props.web.web.showFooterBar', 'props.web.web.showTimeInFooter', 'props.web.web.siteMenuType', 'props.web.web.userCanChangeTheme', and 'props.web.web.yourMainColor'. Either include them or remove the dependency array. If 'setYourMainColor' needs the current value of 'props.web.web.yourMainColor', you can also switch to useReducer instead of useState and read 'props.web.web.yourMainColor' in the reducer.",["1158"],["1159"],"React Hook useEffect has missing dependencies: 'props.site', 'props.web.web.loginBackgroundImage', 'props.web.web.loginCarouselImage1', 'props.web.web.loginCarouselImage2', and 'props.web.web.loginCarouselImage3'. Either include them or remove the dependency array. If 'setLoginBackgroundImage' needs the current value of 'props.web.web.loginBackgroundImage', you can also switch to useReducer instead of useState and read 'props.web.web.loginBackgroundImage' in the reducer.",["1160"],["1161"],"'withRouter' is defined but never used.","'setAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myRef3', 'props.site', 'props.user.user', 'props.web.web.POEditorAPIKeys', 'props.web.web.allowUsersswitchView', 'props.web.web.appDescription', 'props.web.web.blacklistedCountries', 'props.web.web.cookiePopupText', 'props.web.web.cookiePopupTitle', 'props.web.web.currencyPosition', 'props.web.web.disableChart', 'props.web.web.donationAddress', 'props.web.web.donationText', 'props.web.web.enableAutoLanguage', 'props.web.web.enableCookiePopup', 'props.web.web.enableDonation', 'props.web.web.enableGoogleAds', 'props.web.web.enablePOEEditorLanguage', 'props.web.web.googleAdClient', 'props.web.web.googleAnalytics', 'props.web.web.googleSlot', 'props.web.web.maintenanceMode', 'props.web.web.numberFormat', 'props.web.web.privacyPolicyLink', 'props.web.web.siteFav', 'props.web.web.siteLanguage', 'props.web.web.siteLogo', 'props.web.web.siteLogoWhite', 'props.web.web.siteTitle', 'props.web.web.startWatchNewUserSignUp', 'props.web.web.startWatchUserSignUp', 'props.web.web.switchChartTradingView', 'props.web.web.termsOfServicesLink', 'props.web.web.useWhiteLogo', and 'user'. Either include them or remove the dependency array. If 'setDonationAddress' needs the current value of 'props.web.web.donationAddress', you can also switch to useReducer instead of useState and read 'props.web.web.donationAddress' in the reducer.",["1162"],"'Modal' is defined but never used.","'Space' is defined but never used.","Duplicate key 'market'.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'CloseOutlined' is defined but never used.","'CheckOutlined' is defined but never used.",["1163"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'site' is assigned a value but never used.","'setSite' is assigned a value but never used.","'submitLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myRef3', 'props.user.user', 'props.web', and 'user.user'. Either include them or remove the dependency array.",["1164"],"React Hook useEffect has missing dependencies: 'props.site', 'props.web.web.URIOauthValid', 'props.web.web.allowsignup', 'props.web.web.authorizationRedirectUrl', 'props.web.web.facebookAppId', 'props.web.web.facebookAppSecret', 'props.web.web.googleAppID', 'props.web.web.googleAppSecret', 'props.web.web.googleRecaptchaSiteKey', 'props.web.web.googleRecaptchaSiteKeySecret', 'props.web.web.needCaptchaSignup', 'props.web.web.phoneNumberRequired', 'props.web.web.signInFacebook', 'props.web.web.signWithGoogle', and 'props.web.web.userNeedVerifyAccount'. Either include them or remove the dependency array. If 'setAlowSignup' needs the current value of 'props.web.web.allowsignup', you can also switch to useReducer instead of useState and read 'props.web.web.allowsignup' in the reducer.",["1165"],"React Hook useEffect has missing dependencies: 'myRef3' and 'props.user.user'. Either include them or remove the dependency array.",["1166"],"Duplicate key 'data'.",["1167"],"'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'VolumeUpFill' is defined but never used.","'GearFill' is defined but never used.","'ArrowsFullscreen' is defined but never used.","'setSMTP' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.site' and 'props.web.web'. Either include them or remove the dependency array.",["1168"],["1169"],"'useRef' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'Spinner' is defined but never used.","'coingate' is defined but never used.","'CameraFill' is defined but never used.","'ArrowClockwise' is defined but never used.","'crypto' is defined but never used.","'qrcode' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'yourLanguage' is assigned a value but never used.","'setYourLanguage' is assigned a value but never used.","'yourCurrency' is assigned a value but never used.","'cardYear' is assigned a value but never used.","'setCardYear' is assigned a value but never used.","'cardDepositAmount' is assigned a value but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'autoTradeStatus' is assigned a value but never used.","'imgLoading' is assigned a value but never used.","'submitProfile' is assigned a value but never used.","'setSubmitProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'copied'. Either include it or remove the dependency array.",["1170"],"'disableAutoTrade' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.user.user.user._id'. Either include it or remove the dependency array.",["1171"],"React Hook useEffect has a missing dependency: 'Img'. Either include it or remove the dependency array. You can also do a functional update 'setImg(I => ...)' if you only need 'Img' in the 'setImg' call.",["1172"],"React Hook useEffect has a missing dependency: 'payMethod'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setWMethod' needs the current value of 'payMethod'.",["1173"],"Duplicate key 'currency'.","React Hook useEffect has missing dependencies: 'props', 'user.user.user.user._id', 'user.user.user.user.autoTrade', 'user.user.user.user.currency', 'user.user.user.user.email', 'user.user.user.user.img', 'user.user.user.user.name', 'user.user.user.user.phoneNumber', and 'user.user.user.user.wallet'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setYourName' needs the current value of 'user.user.user.user.name'.",["1174"],"'handleImageChange' is assigned a value but never used.","Duplicate key 'background'.","Duplicate key 'color'.","'iconA' is defined but never used.","'Redirect' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'imageOne' is defined but never used.","'imageTwo' is defined but never used.","'imageThree' is defined but never used.","'Table' is defined but never used.","'checkDate' is assigned a value but never used.",["1175"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["1176"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'ish' is defined but never used.","'MarketDetails' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1177","fix":"1178"},{"desc":"1177","fix":"1179"},{"desc":"1180","fix":"1181"},{"desc":"1177","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1177","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1177","fix":"1188"},{"desc":"1189","fix":"1190"},{"desc":"1191","fix":"1192"},{"desc":"1193","fix":"1194"},{"desc":"1177","fix":"1195"},{"desc":"1196","fix":"1197"},{"desc":"1193","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},{"desc":"1207","fix":"1208"},{"desc":"1205","fix":"1209"},{"desc":"1210","fix":"1211"},"Update the dependencies array to be: [myRef3, props.user.user, user.user]",{"range":"1212","text":"1213"},{"range":"1214","text":"1213"},"Update the dependencies array to be: [props.site, props.web.web.defaultThemeColor, props.web.web.showCalcaulator, props.web.web.showContactInFooter, props.web.web.showFooterBar, props.web.web.showTimeInFooter, props.web.web.siteMenuType, props.web.web.userCanChangeTheme, props.web.web.yourMainColor]",{"range":"1215","text":"1216"},{"range":"1217","text":"1213"},"Update the dependencies array to be: [props.site, props.web.web.loginBackgroundImage, props.web.web.loginCarouselImage1, props.web.web.loginCarouselImage2, props.web.web.loginCarouselImage3]",{"range":"1218","text":"1219"},{"range":"1220","text":"1213"},"Update the dependencies array to be: [myRef3, props.site, props.user.user, props.web.web.POEditorAPIKeys, props.web.web.allowUsersswitchView, props.web.web.appDescription, props.web.web.blacklistedCountries, props.web.web.cookiePopupText, props.web.web.cookiePopupTitle, props.web.web.currencyPosition, props.web.web.disableChart, props.web.web.donationAddress, props.web.web.donationText, props.web.web.enableAutoLanguage, props.web.web.enableCookiePopup, props.web.web.enableDonation, props.web.web.enableGoogleAds, props.web.web.enablePOEEditorLanguage, props.web.web.googleAdClient, props.web.web.googleAnalytics, props.web.web.googleSlot, props.web.web.maintenanceMode, props.web.web.numberFormat, props.web.web.privacyPolicyLink, props.web.web.siteFav, props.web.web.siteLanguage, props.web.web.siteLogo, props.web.web.siteLogoWhite, props.web.web.siteTitle, props.web.web.startWatchNewUserSignUp, props.web.web.startWatchUserSignUp, props.web.web.switchChartTradingView, props.web.web.termsOfServicesLink, props.web.web.useWhiteLogo, user]",{"range":"1221","text":"1222"},{"range":"1223","text":"1213"},"Update the dependencies array to be: [myRef3, props.user.user, props.web, user.user]",{"range":"1224","text":"1225"},"Update the dependencies array to be: [props.site, props.web.web.URIOauthValid, props.web.web.allowsignup, props.web.web.authorizationRedirectUrl, props.web.web.facebookAppId, props.web.web.facebookAppSecret, props.web.web.googleAppID, props.web.web.googleAppSecret, props.web.web.googleRecaptchaSiteKey, props.web.web.googleRecaptchaSiteKeySecret, props.web.web.needCaptchaSignup, props.web.web.phoneNumberRequired, props.web.web.signInFacebook, props.web.web.signWithGoogle, props.web.web.userNeedVerifyAccount]",{"range":"1226","text":"1227"},"Update the dependencies array to be: [myRef3, props.user.user, user]",{"range":"1228","text":"1229"},{"range":"1230","text":"1213"},"Update the dependencies array to be: [props.site, props.web.web]",{"range":"1231","text":"1232"},{"range":"1233","text":"1229"},"Update the dependencies array to be: [copied]",{"range":"1234","text":"1235"},"Update the dependencies array to be: [props.user.user.user._id, user]",{"range":"1236","text":"1237"},"Update the dependencies array to be: [Img]",{"range":"1238","text":"1239"},"Update the dependencies array to be: [payMethod, withdrawMethod]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [props, user.user.user.user._id, user.user.user.user.autoTrade, user.user.user.user.currency, user.user.user.user.email, user.user.user.user.img, user.user.user.user.name, user.user.user.user.phoneNumber, user.user.user.user.wallet]",{"range":"1242","text":"1243"},{"range":"1244","text":"1241"},"Update the dependencies array to be: [props]",{"range":"1245","text":"1246"},[3593,3595],"[myRef3, props.user.user, user.user]",[5172,5174],[1883,1885],"[props.site, props.web.web.defaultThemeColor, props.web.web.showCalcaulator, props.web.web.showContactInFooter, props.web.web.showFooterBar, props.web.web.showTimeInFooter, props.web.web.siteMenuType, props.web.web.userCanChangeTheme, props.web.web.yourMainColor]",[3655,3657],[2315,2317],"[props.site, props.web.web.loginBackgroundImage, props.web.web.loginCarouselImage1, props.web.web.loginCarouselImage2, props.web.web.loginCarouselImage3]",[4528,4530],[7557,7559],"[myRef3, props.site, props.user.user, props.web.web.POEditorAPIKeys, props.web.web.allowUsersswitchView, props.web.web.appDescription, props.web.web.blacklistedCountries, props.web.web.cookiePopupText, props.web.web.cookiePopupTitle, props.web.web.currencyPosition, props.web.web.disableChart, props.web.web.donationAddress, props.web.web.donationText, props.web.web.enableAutoLanguage, props.web.web.enableCookiePopup, props.web.web.enableDonation, props.web.web.enableGoogleAds, props.web.web.enablePOEEditorLanguage, props.web.web.googleAdClient, props.web.web.googleAnalytics, props.web.web.googleSlot, props.web.web.maintenanceMode, props.web.web.numberFormat, props.web.web.privacyPolicyLink, props.web.web.siteFav, props.web.web.siteLanguage, props.web.web.siteLogo, props.web.web.siteLogoWhite, props.web.web.siteTitle, props.web.web.startWatchNewUserSignUp, props.web.web.startWatchUserSignUp, props.web.web.switchChartTradingView, props.web.web.termsOfServicesLink, props.web.web.useWhiteLogo, user]",[4143,4145],[5563,5565],"[myRef3, props.user.user, props.web, user.user]",[4079,4081],"[props.site, props.web.web.URIOauthValid, props.web.web.allowsignup, props.web.web.authorizationRedirectUrl, props.web.web.facebookAppId, props.web.web.facebookAppSecret, props.web.web.googleAppID, props.web.web.googleAppSecret, props.web.web.googleRecaptchaSiteKey, props.web.web.googleRecaptchaSiteKeySecret, props.web.web.needCaptchaSignup, props.web.web.phoneNumberRequired, props.web.web.signInFacebook, props.web.web.signWithGoogle, props.web.web.userNeedVerifyAccount]",[4850,4856],"[myRef3, props.user.user, user]",[4566,4568],[3476,3478],"[props.site, props.web.web]",[6088,6094],[6887,6889],"[copied]",[8262,8268],"[props.user.user.user._id, user]",[11024,11026],"[Img]",[11644,11660],"[payMethod, withdrawMethod]",[19603,19605],"[props, user.user.user.user._id, user.user.user.user.autoTrade, user.user.user.user.currency, user.user.user.user.email, user.user.user.user.img, user.user.user.user.name, user.user.user.user.phoneNumber, user.user.user.user.wallet]",[11166,11182],[19161,19163],"[props]"]